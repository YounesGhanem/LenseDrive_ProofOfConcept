ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"pwm_curr_fdbk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWMC_Clear,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.global	PWMC_Clear
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	PWMC_Clear:
  28              	.LVL0:
  29              	.LFB1090:
  30              		.file 1 "Src/pwm_curr_fdbk.c"
   1:Src/pwm_curr_fdbk.c **** /**
   2:Src/pwm_curr_fdbk.c ****   ******************************************************************************
   3:Src/pwm_curr_fdbk.c ****   * @file    pwm_curr_fdbk.c
   4:Src/pwm_curr_fdbk.c ****   * @author  Motor Control SDK Team, ST Microelectronics
   5:Src/pwm_curr_fdbk.c ****   * @brief   This file provides firmware functions that implement the following features
   6:Src/pwm_curr_fdbk.c ****   *          of the PWM & Current Feedback component of the Motor Control SDK:
   7:Src/pwm_curr_fdbk.c ****   *
   8:Src/pwm_curr_fdbk.c ****   *           * current sensing
   9:Src/pwm_curr_fdbk.c ****   *           * regular ADC conversion execution
  10:Src/pwm_curr_fdbk.c ****   *           * space vector modulation
  11:Src/pwm_curr_fdbk.c ****   *
  12:Src/pwm_curr_fdbk.c ****   ******************************************************************************
  13:Src/pwm_curr_fdbk.c ****   * @attention
  14:Src/pwm_curr_fdbk.c ****   *
  15:Src/pwm_curr_fdbk.c ****   * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
  16:Src/pwm_curr_fdbk.c ****   * All rights reserved.</center></h2>
  17:Src/pwm_curr_fdbk.c ****   *
  18:Src/pwm_curr_fdbk.c ****   * This software component is licensed by ST under Ultimate Liberty license
  19:Src/pwm_curr_fdbk.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  20:Src/pwm_curr_fdbk.c ****   * the License. You may obtain a copy of the License at:
  21:Src/pwm_curr_fdbk.c ****   *                             www.st.com/SLA0044
  22:Src/pwm_curr_fdbk.c ****   *
  23:Src/pwm_curr_fdbk.c ****   ******************************************************************************
  24:Src/pwm_curr_fdbk.c ****   * @ingroup pwm_curr_fdbk
  25:Src/pwm_curr_fdbk.c ****   */
  26:Src/pwm_curr_fdbk.c **** 
  27:Src/pwm_curr_fdbk.c **** /* Includes ------------------------------------------------------------------*/
  28:Src/pwm_curr_fdbk.c **** #include "pwm_curr_fdbk.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 2


  29:Src/pwm_curr_fdbk.c **** #include "mc_math.h"
  30:Src/pwm_curr_fdbk.c **** #include "mc_type.h"
  31:Src/pwm_curr_fdbk.c **** 
  32:Src/pwm_curr_fdbk.c **** /** @addtogroup MCSDK
  33:Src/pwm_curr_fdbk.c ****   * @{
  34:Src/pwm_curr_fdbk.c ****   */
  35:Src/pwm_curr_fdbk.c **** 
  36:Src/pwm_curr_fdbk.c **** /** @defgroup pwm_curr_fdbk PWM & Current Feedback
  37:Src/pwm_curr_fdbk.c ****   *
  38:Src/pwm_curr_fdbk.c ****   * @brief PWM & Current Feedback components of the Motor Control SDK.
  39:Src/pwm_curr_fdbk.c ****   *
  40:Src/pwm_curr_fdbk.c ****   * These components fulfill two functions in a Motor Control subsystem:
  41:Src/pwm_curr_fdbk.c ****   *
  42:Src/pwm_curr_fdbk.c ****   * - The generation of the Space Vector Pulse Width Modulation on the motor's phases
  43:Src/pwm_curr_fdbk.c ****   * - The sampling of the actual motor's phases current
  44:Src/pwm_curr_fdbk.c ****   *
  45:Src/pwm_curr_fdbk.c ****   * Both these features are closely related as the instants when the values of the phase currents
  46:Src/pwm_curr_fdbk.c ****   * should be sampled by the ADC channels are basically triggered by the timers used to generate
  47:Src/pwm_curr_fdbk.c ****   * the duty cycles for the PWM.
  48:Src/pwm_curr_fdbk.c ****   *
  49:Src/pwm_curr_fdbk.c ****   * Several implementation of PWM and Current Feedback components are provided by the Motor Control
  50:Src/pwm_curr_fdbk.c ****   * SDK to account for the specificities of the application:
  51:Src/pwm_curr_fdbk.c ****   *
  52:Src/pwm_curr_fdbk.c ****   * - The selected MCU: the number of ADCs available on a given MCU, the presence of internal
  53:Src/pwm_curr_fdbk.c ****   * comparators or OpAmps, for instance, lead to different implementation of this feature
  54:Src/pwm_curr_fdbk.c ****   * - The Current sensing topology also has an impact on the firmware: implementations are provided
  55:Src/pwm_curr_fdbk.c ****   * for Insulated Current Sensors, Single Shunt and Three Shunt resistors current sensing topologie
  56:Src/pwm_curr_fdbk.c ****   *
  57:Src/pwm_curr_fdbk.c ****   * The choice of the implementation mostly depend on these two factors and is performed by the
  58:Src/pwm_curr_fdbk.c ****   * Motor Control Workbench tool.
  59:Src/pwm_curr_fdbk.c ****   *
  60:Src/pwm_curr_fdbk.c ****   * All these implementations are built on a base PWM & Current Feedback component that they extend
  61:Src/pwm_curr_fdbk.c ****   * and that provides the functions and data that are common to all of them. This base component is
  62:Src/pwm_curr_fdbk.c ****   * never used directly as it does not provide a complete implementation of the features. Rather,
  63:Src/pwm_curr_fdbk.c ****   * its handle structure (PWMC_Handle) is reused by all the PWM & Current Feedback specific
  64:Src/pwm_curr_fdbk.c ****   * implementations and the functions it provides form the API of the PWM and Current feedback feat
  65:Src/pwm_curr_fdbk.c ****   * Calling them results in calling functions of the component that actually implement the feature.
  66:Src/pwm_curr_fdbk.c ****   * See PWMC_Handle for more details on this mechanism.
  67:Src/pwm_curr_fdbk.c ****   * @{
  68:Src/pwm_curr_fdbk.c ****   */
  69:Src/pwm_curr_fdbk.c **** 
  70:Src/pwm_curr_fdbk.c **** /**
  71:Src/pwm_curr_fdbk.c ****   * @brief  Used to clear variables in CPWMC.
  72:Src/pwm_curr_fdbk.c ****   *
  73:Src/pwm_curr_fdbk.c ****   * @param pHandle: Handler of the current instance of the PWM component.
  74:Src/pwm_curr_fdbk.c ****   */
  75:Src/pwm_curr_fdbk.c **** void PWMC_Clear(PWMC_Handle_t *pHandle)
  76:Src/pwm_curr_fdbk.c **** {
  31              		.loc 1 76 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  77:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
  78:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
  79:Src/pwm_curr_fdbk.c ****   {
  80:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 3


  81:Src/pwm_curr_fdbk.c ****   }
  82:Src/pwm_curr_fdbk.c ****   else
  83:Src/pwm_curr_fdbk.c ****   {
  84:Src/pwm_curr_fdbk.c **** #endif
  85:Src/pwm_curr_fdbk.c ****     pHandle->IaEst = 0;
  36              		.loc 1 85 5 view .LVU1
  86:Src/pwm_curr_fdbk.c ****     pHandle->IbEst = 0;
  37              		.loc 1 86 5 view .LVU2
  85:Src/pwm_curr_fdbk.c ****     pHandle->IbEst = 0;
  38              		.loc 1 85 20 is_stmt 0 view .LVU3
  39 0000 0023     		movs	r3, #0
  87:Src/pwm_curr_fdbk.c ****     pHandle->IcEst = 0;
  88:Src/pwm_curr_fdbk.c ****     pHandle->LPFIdBuf = 0;
  89:Src/pwm_curr_fdbk.c ****     pHandle->LPFIqBuf = 0;
  40              		.loc 1 89 23 view .LVU4
  41 0002 C0E90D33 		strd	r3, r3, [r0, #52]
  85:Src/pwm_curr_fdbk.c ****     pHandle->IbEst = 0;
  42              		.loc 1 85 20 view .LVU5
  43 0006 8366     		str	r3, [r0, #104]
  87:Src/pwm_curr_fdbk.c ****     pHandle->IcEst = 0;
  44              		.loc 1 87 5 is_stmt 1 view .LVU6
  87:Src/pwm_curr_fdbk.c ****     pHandle->IcEst = 0;
  45              		.loc 1 87 20 is_stmt 0 view .LVU7
  46 0008 A0F86C30 		strh	r3, [r0, #108]	@ movhi
  88:Src/pwm_curr_fdbk.c ****     pHandle->LPFIqBuf = 0;
  47              		.loc 1 88 5 is_stmt 1 view .LVU8
  90:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
  91:Src/pwm_curr_fdbk.c ****   }
  92:Src/pwm_curr_fdbk.c **** #endif
  93:Src/pwm_curr_fdbk.c **** }
  48              		.loc 1 93 1 is_stmt 0 view .LVU9
  49 000c 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE1090:
  53 000e 00BF     		.section	.text.PWMC_SetOffsetCalib,"ax",%progbits
  54              		.align	1
  55              		.p2align 2,,3
  56              		.weak	PWMC_SetOffsetCalib
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  61              	PWMC_SetOffsetCalib:
  62              	.LVL1:
  63              	.LFB1091:
  94:Src/pwm_curr_fdbk.c **** 
  95:Src/pwm_curr_fdbk.c **** /**
  96:Src/pwm_curr_fdbk.c ****   * @brief  Sets the calibrated @p offsets for each of the phases in the @p pHandle handler. In cas
  97:Src/pwm_curr_fdbk.c ****   *
  98:Src/pwm_curr_fdbk.c ****   */
  99:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 100:Src/pwm_curr_fdbk.c **** __weak void PWMC_SetOffsetCalib(PWMC_Handle_t *pHandle, PolarizationOffsets_t *offsets)
 101:Src/pwm_curr_fdbk.c **** {
  64              		.loc 1 101 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 4


 102:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
  69              		.loc 1 102 3 view .LVU11
  70              		.loc 1 102 6 is_stmt 0 view .LVU12
  71 0000 08B1     		cbz	r0, .L3
 103:Src/pwm_curr_fdbk.c ****   {
 104:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 105:Src/pwm_curr_fdbk.c ****   }
 106:Src/pwm_curr_fdbk.c ****   else
 107:Src/pwm_curr_fdbk.c ****   {
 108:Src/pwm_curr_fdbk.c ****     pHandle->pFctSetOffsetCalib(pHandle, offsets);
  72              		.loc 1 108 5 is_stmt 1 view .LVU13
  73 0002 C36A     		ldr	r3, [r0, #44]
  74 0004 1847     		bx	r3	@ indirect register sibling call
  75              	.LVL2:
  76              	.L3:
 109:Src/pwm_curr_fdbk.c ****   }
 110:Src/pwm_curr_fdbk.c **** }
  77              		.loc 1 110 1 is_stmt 0 view .LVU14
  78 0006 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE1091:
  82              		.section	.text.PWMC_GetOffsetCalib,"ax",%progbits
  83              		.align	1
  84              		.p2align 2,,3
  85              		.weak	PWMC_GetOffsetCalib
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  90              	PWMC_GetOffsetCalib:
  91              	.LVL3:
  92              	.LFB1092:
 111:Src/pwm_curr_fdbk.c **** 
 112:Src/pwm_curr_fdbk.c **** /**
 113:Src/pwm_curr_fdbk.c ****   * @brief  Gets the calibrated @p offsets for each of the phases in the @p pHandle handler. In cas
 114:Src/pwm_curr_fdbk.c ****   *
 115:Src/pwm_curr_fdbk.c ****   */
 116:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 117:Src/pwm_curr_fdbk.c **** __weak void PWMC_GetOffsetCalib(PWMC_Handle_t *pHandle, PolarizationOffsets_t *offsets)
 118:Src/pwm_curr_fdbk.c **** {
  93              		.loc 1 118 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 119:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
  98              		.loc 1 119 3 view .LVU16
  99              		.loc 1 119 6 is_stmt 0 view .LVU17
 100 0000 08B1     		cbz	r0, .L5
 120:Src/pwm_curr_fdbk.c ****   {
 121:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 122:Src/pwm_curr_fdbk.c ****   }
 123:Src/pwm_curr_fdbk.c ****   else
 124:Src/pwm_curr_fdbk.c ****   {
 125:Src/pwm_curr_fdbk.c ****     pHandle->pFctGetOffsetCalib(pHandle, offsets);
 101              		.loc 1 125 5 is_stmt 1 view .LVU18
 102 0002 036B     		ldr	r3, [r0, #48]
 103 0004 1847     		bx	r3	@ indirect register sibling call
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 5


 104              	.LVL4:
 105              	.L5:
 126:Src/pwm_curr_fdbk.c ****   }
 127:Src/pwm_curr_fdbk.c **** }
 106              		.loc 1 127 1 is_stmt 0 view .LVU19
 107 0006 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE1092:
 111              		.section	.text.PWMC_GetPhaseCurrents,"ax",%progbits
 112              		.align	1
 113              		.p2align 2,,3
 114              		.weak	PWMC_GetPhaseCurrents
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	PWMC_GetPhaseCurrents:
 120              	.LVL5:
 121              	.LFB1093:
 128:Src/pwm_curr_fdbk.c **** 
 129:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 130:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 131:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 132:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 133:Src/pwm_curr_fdbk.c **** __attribute__( ( section ( ".ccmram" ) ) )
 134:Src/pwm_curr_fdbk.c **** #endif
 135:Src/pwm_curr_fdbk.c **** #endif
 136:Src/pwm_curr_fdbk.c **** /**
 137:Src/pwm_curr_fdbk.c ****   * @brief Returns the phase current of the motor as read by the ADC (in s16A unit).
 138:Src/pwm_curr_fdbk.c ****   *
 139:Src/pwm_curr_fdbk.c ****   * Returns the current values of phases A & B. Phase C current
 140:Src/pwm_curr_fdbk.c ****   * can be deduced thanks to the formula:
 141:Src/pwm_curr_fdbk.c ****   *
 142:Src/pwm_curr_fdbk.c ****   * @f[
 143:Src/pwm_curr_fdbk.c ****   * I_{C} = -I_{A} - I_{B}
 144:Src/pwm_curr_fdbk.c ****   * @f]
 145:Src/pwm_curr_fdbk.c ****   *
 146:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 147:Src/pwm_curr_fdbk.c ****   * @param  Iab: Pointer to the structure that will receive motor current
 148:Src/pwm_curr_fdbk.c ****   *         of phases A & B in ElectricalValue format.
 149:Src/pwm_curr_fdbk.c ****   */
 150:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 151:Src/pwm_curr_fdbk.c **** __weak void PWMC_GetPhaseCurrents(PWMC_Handle_t *pHandle, ab_t *Iab)
 152:Src/pwm_curr_fdbk.c **** {
 122              		.loc 1 152 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 153:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 154:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 155:Src/pwm_curr_fdbk.c ****   {
 156:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 157:Src/pwm_curr_fdbk.c ****   }
 158:Src/pwm_curr_fdbk.c ****   else
 159:Src/pwm_curr_fdbk.c ****   {
 160:Src/pwm_curr_fdbk.c **** #endif
 161:Src/pwm_curr_fdbk.c ****     pHandle->pFctGetPhaseCurrents(pHandle, Iab);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 6


 127              		.loc 1 161 5 view .LVU21
 128 0000 0368     		ldr	r3, [r0]
 129 0002 1847     		bx	r3	@ indirect register sibling call
 130              	.LVL6:
 131              		.loc 1 161 5 is_stmt 0 view .LVU22
 132              		.cfi_endproc
 133              	.LFE1093:
 135              		.section	.text.PWMC_SetPhaseVoltage,"ax",%progbits
 136              		.align	1
 137              		.p2align 2,,3
 138              		.weak	PWMC_SetPhaseVoltage
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	PWMC_SetPhaseVoltage:
 144              	.LVL7:
 145              	.LFB1094:
 162:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 163:Src/pwm_curr_fdbk.c ****   }
 164:Src/pwm_curr_fdbk.c **** #endif
 165:Src/pwm_curr_fdbk.c **** }
 166:Src/pwm_curr_fdbk.c **** 
 167:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 168:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 169:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 170:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 171:Src/pwm_curr_fdbk.c **** __attribute__( ( section ( ".ccmram" ) ) )
 172:Src/pwm_curr_fdbk.c **** #endif
 173:Src/pwm_curr_fdbk.c **** #endif
 174:Src/pwm_curr_fdbk.c **** 
 175:Src/pwm_curr_fdbk.c **** /**
 176:Src/pwm_curr_fdbk.c ****   * @brief  Converts input voltages @f$ V_{\alpha} @f$ and @f$ V_{\beta} @f$ into PWM duty cycles
 177:Src/pwm_curr_fdbk.c ****   *         and feed them to the inverter.
 178:Src/pwm_curr_fdbk.c ****   *
 179:Src/pwm_curr_fdbk.c ****   * This function computes the time during which the transistors of each phase are to be switched o
 180:Src/pwm_curr_fdbk.c ****   * a PWM cycle in order to achieve the reference phase voltage set by @p Valfa_beta. The function 
 181:Src/pwm_curr_fdbk.c ****   * programs the resulting duty cycles in the related timer channels. It also sets the phase curren
 182:Src/pwm_curr_fdbk.c ****   * sampling point for the next PWM cycle accordingly.
 183:Src/pwm_curr_fdbk.c ****   *
 184:Src/pwm_curr_fdbk.c ****   * This function is used in the FOC frequency loop and needs to complete itself before the next PW
 185:Src/pwm_curr_fdbk.c ****   * in order for the duty cycles it computes to be taken into account. Failing to do so (for instan
 186:Src/pwm_curr_fdbk.c ****   * the PWM Frequency is too high) results in the function returning #MC_DURATION which entails a
 187:Src/pwm_curr_fdbk.c ****   * Motor Control Fault that stops the motor.
 188:Src/pwm_curr_fdbk.c ****   *
 189:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 190:Src/pwm_curr_fdbk.c ****   * @param  Valfa_beta: Voltage Components expressed in the @f$(\alpha, \beta)@f$ reference frame.
 191:Src/pwm_curr_fdbk.c ****   * @retval #MC_NO_ERROR if no error occurred or #MC_DURATION if the duty cycles were
 192:Src/pwm_curr_fdbk.c ****   *         set too late for being taken into account in the next PWM cycle.
 193:Src/pwm_curr_fdbk.c ****   */
 194:Src/pwm_curr_fdbk.c **** __weak uint16_t PWMC_SetPhaseVoltage(PWMC_Handle_t *pHandle, alphabeta_t Valfa_beta)
 195:Src/pwm_curr_fdbk.c **** {
 146              		.loc 1 195 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 8
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 196:Src/pwm_curr_fdbk.c ****   uint16_t returnValue;
 150              		.loc 1 196 3 view .LVU24
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 7


 197:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 198:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 199:Src/pwm_curr_fdbk.c ****   {
 200:Src/pwm_curr_fdbk.c ****     returnValue = 0U;
 201:Src/pwm_curr_fdbk.c ****   }
 202:Src/pwm_curr_fdbk.c ****   else
 203:Src/pwm_curr_fdbk.c ****   {
 204:Src/pwm_curr_fdbk.c **** #endif
 205:Src/pwm_curr_fdbk.c ****     int32_t wX;
 151              		.loc 1 205 5 view .LVU25
 206:Src/pwm_curr_fdbk.c ****     int32_t wY;
 152              		.loc 1 206 5 view .LVU26
 207:Src/pwm_curr_fdbk.c ****     int32_t wZ;
 153              		.loc 1 207 5 view .LVU27
 208:Src/pwm_curr_fdbk.c ****     int32_t wUAlpha;
 154              		.loc 1 208 5 view .LVU28
 209:Src/pwm_curr_fdbk.c ****     int32_t wUBeta;
 155              		.loc 1 209 5 view .LVU29
 210:Src/pwm_curr_fdbk.c ****     int32_t wTimePhA;
 156              		.loc 1 210 5 view .LVU30
 211:Src/pwm_curr_fdbk.c ****     int32_t wTimePhB;
 157              		.loc 1 211 5 view .LVU31
 212:Src/pwm_curr_fdbk.c ****     int32_t wTimePhC;
 158              		.loc 1 212 5 view .LVU32
 213:Src/pwm_curr_fdbk.c **** 
 214:Src/pwm_curr_fdbk.c ****     wUAlpha = Valfa_beta.alpha * (int32_t)pHandle->hT_Sqrt3;
 159              		.loc 1 214 5 view .LVU33
 195:Src/pwm_curr_fdbk.c ****   uint16_t returnValue;
 160              		.loc 1 195 1 is_stmt 0 view .LVU34
 161 0000 30B5     		push	{r4, r5, lr}
 162              	.LCFI0:
 163              		.cfi_def_cfa_offset 12
 164              		.cfi_offset 4, -12
 165              		.cfi_offset 5, -8
 166              		.cfi_offset 14, -4
 215:Src/pwm_curr_fdbk.c ****     wUBeta = -(Valfa_beta.beta * ((int32_t)pHandle->PWMperiod)) * 2;
 167              		.loc 1 215 51 view .LVU35
 168 0002 B0F872C0 		ldrh	ip, [r0, #114]
 214:Src/pwm_curr_fdbk.c ****     wUBeta = -(Valfa_beta.beta * ((int32_t)pHandle->PWMperiod)) * 2;
 169              		.loc 1 214 34 view .LVU36
 170 0006 B0F84E30 		ldrh	r3, [r0, #78]
 195:Src/pwm_curr_fdbk.c ****   uint16_t returnValue;
 171              		.loc 1 195 1 view .LVU37
 172 000a 83B0     		sub	sp, sp, #12
 173              	.LCFI1:
 174              		.cfi_def_cfa_offset 24
 175              		.loc 1 215 26 view .LVU38
 176 000c 0A14     		asrs	r2, r1, #16
 195:Src/pwm_curr_fdbk.c ****   uint16_t returnValue;
 177              		.loc 1 195 1 view .LVU39
 178 000e 0191     		str	r1, [sp, #4]
 179              		.loc 1 215 32 view .LVU40
 180 0010 0CFB02F2 		mul	r2, ip, r2
 214:Src/pwm_curr_fdbk.c ****     wUBeta = -(Valfa_beta.beta * ((int32_t)pHandle->PWMperiod)) * 2;
 181              		.loc 1 214 25 view .LVU41
 182 0014 09B2     		sxth	r1, r1
 183              		.loc 1 215 12 view .LVU42
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 8


 184 0016 C2EBC272 		rsb	r2, r2, r2, lsl #31
 214:Src/pwm_curr_fdbk.c ****     wUBeta = -(Valfa_beta.beta * ((int32_t)pHandle->PWMperiod)) * 2;
 185              		.loc 1 214 13 view .LVU43
 186 001a 03FB01F1 		mul	r1, r3, r1
 187              	.LVL8:
 188              		.loc 1 215 5 is_stmt 1 view .LVU44
 216:Src/pwm_curr_fdbk.c **** 
 217:Src/pwm_curr_fdbk.c ****     wX = wUBeta;
 218:Src/pwm_curr_fdbk.c ****     wY = (wUBeta + wUAlpha) / 2;
 189              		.loc 1 218 18 is_stmt 0 view .LVU45
 190 001e 01EB4203 		add	r3, r1, r2, lsl #1
 219:Src/pwm_curr_fdbk.c ****     wZ = (wUBeta - wUAlpha) / 2;
 191              		.loc 1 219 18 view .LVU46
 192 0022 C1EB4201 		rsb	r1, r1, r2, lsl #1
 193              	.LVL9:
 215:Src/pwm_curr_fdbk.c **** 
 194              		.loc 1 215 12 view .LVU47
 195 0026 5400     		lsls	r4, r2, #1
 196              	.LVL10:
 217:Src/pwm_curr_fdbk.c ****     wY = (wUBeta + wUAlpha) / 2;
 197              		.loc 1 217 5 is_stmt 1 view .LVU48
 218:Src/pwm_curr_fdbk.c ****     wZ = (wUBeta - wUAlpha) / 2;
 198              		.loc 1 218 5 view .LVU49
 218:Src/pwm_curr_fdbk.c ****     wZ = (wUBeta - wUAlpha) / 2;
 199              		.loc 1 218 8 is_stmt 0 view .LVU50
 200 0028 03EBD37E 		add	lr, r3, r3, lsr #31
 201              		.loc 1 219 8 view .LVU51
 202 002c 01EBD172 		add	r2, r1, r1, lsr #31
 220:Src/pwm_curr_fdbk.c **** 
 221:Src/pwm_curr_fdbk.c ****     /* Sector calculation from wX, wY, wZ */
 222:Src/pwm_curr_fdbk.c ****     if (wY < 0)
 203              		.loc 1 222 8 view .LVU52
 204 0030 5D1C     		adds	r5, r3, #1
 218:Src/pwm_curr_fdbk.c ****     wZ = (wUBeta - wUAlpha) / 2;
 205              		.loc 1 218 8 view .LVU53
 206 0032 4FEA6E0E 		asr	lr, lr, #1
 207              	.LVL11:
 219:Src/pwm_curr_fdbk.c **** 
 208              		.loc 1 219 5 is_stmt 1 view .LVU54
 219:Src/pwm_curr_fdbk.c **** 
 209              		.loc 1 219 8 is_stmt 0 view .LVU55
 210 0036 4FEA6202 		asr	r2, r2, #1
 211              	.LVL12:
 212              		.loc 1 222 5 is_stmt 1 view .LVU56
 213              		.loc 1 222 8 is_stmt 0 view .LVU57
 214 003a C0F29480 		blt	.L46
 223:Src/pwm_curr_fdbk.c ****     {
 224:Src/pwm_curr_fdbk.c ****       if (wZ < 0)
 225:Src/pwm_curr_fdbk.c ****       {
 226:Src/pwm_curr_fdbk.c ****         pHandle->Sector = SECTOR_5;
 227:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 228:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 229:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072) ;
 230:Src/pwm_curr_fdbk.c **** 
 231:Src/pwm_curr_fdbk.c ****         if(true == pHandle->SingleShuntTopology)
 232:Src/pwm_curr_fdbk.c ****         {
 233:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = 1U;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 9


 234:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
 235:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = 2U;
 236:Src/pwm_curr_fdbk.c ****         }
 237:Src/pwm_curr_fdbk.c ****         else
 238:Src/pwm_curr_fdbk.c ****         {
 239:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = (uint16_t)wTimePhC;
 240:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhA;
 241:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhB;
 242:Src/pwm_curr_fdbk.c ****         }
 243:Src/pwm_curr_fdbk.c ****       }
 244:Src/pwm_curr_fdbk.c ****       else /* wZ >= 0 */
 245:Src/pwm_curr_fdbk.c ****         if (wX <= 0)
 246:Src/pwm_curr_fdbk.c ****         {
 247:Src/pwm_curr_fdbk.c ****           pHandle->Sector = SECTOR_4;
 248:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wX - wZ) / (int32_t)262144);
 249:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 250:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 251:Src/pwm_curr_fdbk.c **** 
 252:Src/pwm_curr_fdbk.c ****           if(true == pHandle->SingleShuntTopology)
 253:Src/pwm_curr_fdbk.c ****           {
 254:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = 0U;
 255:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 256:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 2U;
 257:Src/pwm_curr_fdbk.c ****           }
 258:Src/pwm_curr_fdbk.c ****           else
 259:Src/pwm_curr_fdbk.c ****           {
 260:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = (uint16_t)wTimePhC;
 261:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhB;
 262:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 263:Src/pwm_curr_fdbk.c ****         }
 264:Src/pwm_curr_fdbk.c ****         }
 265:Src/pwm_curr_fdbk.c ****         else /* wX > 0 */
 266:Src/pwm_curr_fdbk.c ****         {
 267:Src/pwm_curr_fdbk.c ****           pHandle->Sector = SECTOR_3;
 268:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4)+ ((wY - wX) / (int32_t)262144);
 269:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 270:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 271:Src/pwm_curr_fdbk.c **** 
 272:Src/pwm_curr_fdbk.c ****           if(true == pHandle->SingleShuntTopology)
 273:Src/pwm_curr_fdbk.c ****           {
 274:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = 0U;
 275:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 276:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 1U;
 277:Src/pwm_curr_fdbk.c ****           }
 278:Src/pwm_curr_fdbk.c ****           else
 279:Src/pwm_curr_fdbk.c ****           {
 280:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = (uint16_t)wTimePhB;
 281:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhC;
 282:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 283:Src/pwm_curr_fdbk.c ****         }
 284:Src/pwm_curr_fdbk.c ****         }
 285:Src/pwm_curr_fdbk.c ****     }
 286:Src/pwm_curr_fdbk.c ****     else /* wY > 0 */
 287:Src/pwm_curr_fdbk.c ****     {
 288:Src/pwm_curr_fdbk.c ****       if (wZ >= 0)
 215              		.loc 1 288 7 is_stmt 1 view .LVU58
 216              		.loc 1 288 10 is_stmt 0 view .LVU59
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 10


 217 003e 4D1C     		adds	r5, r1, #1
 218 0040 5FDB     		blt	.L24
 289:Src/pwm_curr_fdbk.c ****       {
 290:Src/pwm_curr_fdbk.c ****         pHandle->Sector = SECTOR_2;
 219              		.loc 1 290 9 is_stmt 1 view .LVU60
 291:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 220              		.loc 1 291 69 is_stmt 0 view .LVU61
 221 0042 BEEB020E 		subs	lr, lr, r2
 222              	.LVL13:
 223              		.loc 1 291 69 view .LVU62
 224 0046 44BF     		itt	mi
 225 0048 0EF57F3E 		addmi	lr, lr, #261120
 226 004c 0EF2FF3E 		addwmi	lr, lr, #1023
 292:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 227              		.loc 1 292 35 view .LVU63
 228 0050 0029     		cmp	r1, #0
 229 0052 B8BF     		it	lt
 230 0054 01F57F31 		addlt	r1, r1, #261120
 290:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 231              		.loc 1 290 25 view .LVU64
 232 0058 4FF00104 		mov	r4, #1
 233              	.LVL14:
 234              		.loc 1 292 35 view .LVU65
 235 005c B8BF     		it	lt
 236 005e 01F2FF31 		addwlt	r1, r1, #1023
 293:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072);
 237              		.loc 1 293 35 view .LVU66
 238 0062 002B     		cmp	r3, #0
 239              		.loc 1 293 35 view .LVU67
 240 0064 B8BF     		it	lt
 241 0066 03F57F33 		addlt	r3, r3, #261120
 242              	.LVL15:
 290:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 243              		.loc 1 290 25 view .LVU68
 244 006a 80F87C40 		strb	r4, [r0, #124]
 245              	.LVL16:
 291:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 246              		.loc 1 291 9 is_stmt 1 view .LVU69
 291:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 247              		.loc 1 291 51 is_stmt 0 view .LVU70
 248 006e 4FEA9C0C 		lsr	ip, ip, #2
 294:Src/pwm_curr_fdbk.c **** 
 295:Src/pwm_curr_fdbk.c ****         if(true == pHandle->SingleShuntTopology)
 249              		.loc 1 295 11 view .LVU71
 250 0072 90F88740 		ldrb	r4, [r0, #135]	@ zero_extendqisi2
 291:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 251              		.loc 1 291 18 view .LVU72
 252 0076 0CEBAE42 		add	r2, ip, lr, asr #18
 253              	.LVL17:
 292:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072);
 254              		.loc 1 292 9 is_stmt 1 view .LVU73
 293:Src/pwm_curr_fdbk.c **** 
 255              		.loc 1 293 35 is_stmt 0 view .LVU74
 256 007a B8BF     		it	lt
 257 007c 03F2FF33 		addwlt	r3, r3, #1023
 292:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072);
 258              		.loc 1 292 18 view .LVU75
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 11


 259 0080 02EBA141 		add	r1, r2, r1, asr #18
 260              	.LVL18:
 293:Src/pwm_curr_fdbk.c **** 
 261              		.loc 1 293 9 is_stmt 1 view .LVU76
 293:Src/pwm_curr_fdbk.c **** 
 262              		.loc 1 293 18 is_stmt 0 view .LVU77
 263 0084 A2EBA343 		sub	r3, r2, r3, asr #18
 264              	.LVL19:
 265              		.loc 1 295 9 is_stmt 1 view .LVU78
 266              		.loc 1 295 11 is_stmt 0 view .LVU79
 267 0088 002C     		cmp	r4, #0
 268 008a 40F09780 		bne	.L47
 296:Src/pwm_curr_fdbk.c ****         {
 297:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = 2U;
 298:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
 299:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = 1U;
 300:Src/pwm_curr_fdbk.c ****         }
 301:Src/pwm_curr_fdbk.c ****         else
 302:Src/pwm_curr_fdbk.c ****         {
 303:Src/pwm_curr_fdbk.c ****         pHandle->lowDuty = (uint16_t)wTimePhB;
 269              		.loc 1 303 9 is_stmt 1 view .LVU80
 270              		.loc 1 303 28 is_stmt 0 view .LVU81
 271 008e A0F85810 		strh	r1, [r0, #88]	@ movhi
 304:Src/pwm_curr_fdbk.c ****         pHandle->midDuty = (uint16_t)wTimePhA;
 272              		.loc 1 304 9 is_stmt 1 view .LVU82
 273              		.loc 1 304 28 is_stmt 0 view .LVU83
 274 0092 A0F85A20 		strh	r2, [r0, #90]	@ movhi
 305:Src/pwm_curr_fdbk.c ****         pHandle->highDuty = (uint16_t)wTimePhC;
 275              		.loc 1 305 9 is_stmt 1 view .LVU84
 276              		.loc 1 305 29 is_stmt 0 view .LVU85
 277 0096 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 278              	.LVL20:
 279              	.L15:
 306:Src/pwm_curr_fdbk.c ****         }
 307:Src/pwm_curr_fdbk.c ****       }
 308:Src/pwm_curr_fdbk.c ****       else /* wZ < 0 */
 309:Src/pwm_curr_fdbk.c ****         if ( wX <= 0 )
 310:Src/pwm_curr_fdbk.c ****         {
 311:Src/pwm_curr_fdbk.c ****           pHandle->Sector = SECTOR_6;
 312:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4) + ((wY - wX) / (int32_t)262144);
 313:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 314:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 315:Src/pwm_curr_fdbk.c **** 
 316:Src/pwm_curr_fdbk.c ****           if(true == pHandle->SingleShuntTopology)
 317:Src/pwm_curr_fdbk.c ****           {
 318:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = 1U;
 319:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 320:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 0U;
 321:Src/pwm_curr_fdbk.c ****           }
 322:Src/pwm_curr_fdbk.c ****           else
 323:Src/pwm_curr_fdbk.c ****           {
 324:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = (uint16_t)wTimePhA;
 325:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhC;
 326:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhB;
 327:Src/pwm_curr_fdbk.c ****         }
 328:Src/pwm_curr_fdbk.c ****         }
 329:Src/pwm_curr_fdbk.c ****         else /* wX > 0 */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 12


 330:Src/pwm_curr_fdbk.c ****         {
 331:Src/pwm_curr_fdbk.c ****           pHandle->Sector = SECTOR_1;
 332:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4)+ ((wX - wZ) / (int32_t)262144);
 333:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 334:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 335:Src/pwm_curr_fdbk.c **** 
 336:Src/pwm_curr_fdbk.c ****           if((pHandle->DPWM_Mode == true) || (pHandle->SingleShuntTopology == true))
 337:Src/pwm_curr_fdbk.c ****           {
 338:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = 2U;
 339:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 340:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 0U;
 341:Src/pwm_curr_fdbk.c ****           }
 342:Src/pwm_curr_fdbk.c ****           else
 343:Src/pwm_curr_fdbk.c ****           {
 344:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = (uint16_t)wTimePhA;
 345:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhB;
 346:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhC;
 347:Src/pwm_curr_fdbk.c ****         }
 348:Src/pwm_curr_fdbk.c ****         }
 349:Src/pwm_curr_fdbk.c ****     }
 350:Src/pwm_curr_fdbk.c **** 
 351:Src/pwm_curr_fdbk.c ****     pHandle->CntPhA = (uint16_t)(MAX(wTimePhA, 0));
 280              		.loc 1 351 5 is_stmt 1 view .LVU86
 352:Src/pwm_curr_fdbk.c ****     pHandle->CntPhB = (uint16_t)(MAX(wTimePhB, 0));
 353:Src/pwm_curr_fdbk.c ****     pHandle->CntPhC = (uint16_t)(MAX(wTimePhC, 0));
 354:Src/pwm_curr_fdbk.c **** 
 355:Src/pwm_curr_fdbk.c ****     if (1U == pHandle->DTTest)
 281              		.loc 1 355 8 is_stmt 0 view .LVU87
 282 009a B0F87040 		ldrh	r4, [r0, #112]
 283 009e 22EAE272 		bic	r2, r2, r2, asr #31
 284              	.LVL21:
 285              		.loc 1 355 8 view .LVU88
 286 00a2 21EAE171 		bic	r1, r1, r1, asr #31
 287              	.LVL22:
 288              		.loc 1 355 8 view .LVU89
 289 00a6 23EAE373 		bic	r3, r3, r3, asr #31
 290              	.LVL23:
 291              		.loc 1 355 8 view .LVU90
 292 00aa 92B2     		uxth	r2, r2
 293 00ac 89B2     		uxth	r1, r1
 294 00ae 9BB2     		uxth	r3, r3
 295 00b0 012C     		cmp	r4, #1
 351:Src/pwm_curr_fdbk.c ****     pHandle->CntPhB = (uint16_t)(MAX(wTimePhB, 0));
 296              		.loc 1 351 21 view .LVU91
 297 00b2 A0F85020 		strh	r2, [r0, #80]	@ movhi
 352:Src/pwm_curr_fdbk.c ****     pHandle->CntPhB = (uint16_t)(MAX(wTimePhB, 0));
 298              		.loc 1 352 5 is_stmt 1 view .LVU92
 352:Src/pwm_curr_fdbk.c ****     pHandle->CntPhB = (uint16_t)(MAX(wTimePhB, 0));
 299              		.loc 1 352 21 is_stmt 0 view .LVU93
 300 00b6 A0F85210 		strh	r1, [r0, #82]	@ movhi
 353:Src/pwm_curr_fdbk.c **** 
 301              		.loc 1 353 5 is_stmt 1 view .LVU94
 353:Src/pwm_curr_fdbk.c **** 
 302              		.loc 1 353 21 is_stmt 0 view .LVU95
 303 00ba A0F85430 		strh	r3, [r0, #84]	@ movhi
 304              		.loc 1 355 5 is_stmt 1 view .LVU96
 305              		.loc 1 355 8 is_stmt 0 view .LVU97
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 13


 306 00be 1BD1     		bne	.L39
 356:Src/pwm_curr_fdbk.c ****     {
 357:Src/pwm_curr_fdbk.c ****       /* Dead time compensation */
 358:Src/pwm_curr_fdbk.c ****       if (pHandle->Ia > 0)
 307              		.loc 1 358 7 is_stmt 1 view .LVU98
 308              		.loc 1 358 10 is_stmt 0 view .LVU99
 309 00c0 B0F96240 		ldrsh	r4, [r0, #98]
 310 00c4 002C     		cmp	r4, #0
 359:Src/pwm_curr_fdbk.c ****       {
 360:Src/pwm_curr_fdbk.c ****         pHandle->CntPhA += pHandle->DTCompCnt;
 311              		.loc 1 360 35 view .LVU100
 312 00c6 B0F87440 		ldrh	r4, [r0, #116]
 313              		.loc 1 360 9 is_stmt 1 view .LVU101
 314              		.loc 1 360 25 is_stmt 0 view .LVU102
 315 00ca CCBF     		ite	gt
 316 00cc 1219     		addgt	r2, r2, r4
 361:Src/pwm_curr_fdbk.c ****       }
 362:Src/pwm_curr_fdbk.c ****       else
 363:Src/pwm_curr_fdbk.c ****       {
 364:Src/pwm_curr_fdbk.c ****         pHandle->CntPhA -= pHandle->DTCompCnt;
 317              		.loc 1 364 9 is_stmt 1 view .LVU103
 318              		.loc 1 364 25 is_stmt 0 view .LVU104
 319 00ce 121B     		suble	r2, r2, r4
 320 00d0 92B2     		uxth	r2, r2
 321 00d2 A0F85020 		strh	r2, [r0, #80]	@ movhi
 365:Src/pwm_curr_fdbk.c ****       }
 366:Src/pwm_curr_fdbk.c **** 
 367:Src/pwm_curr_fdbk.c ****       if (pHandle->Ib > 0)
 322              		.loc 1 367 7 is_stmt 1 view .LVU105
 323              		.loc 1 367 10 is_stmt 0 view .LVU106
 324 00d6 B0F96420 		ldrsh	r2, [r0, #100]
 325 00da 002A     		cmp	r2, #0
 368:Src/pwm_curr_fdbk.c ****       {
 369:Src/pwm_curr_fdbk.c ****         pHandle->CntPhB += pHandle->DTCompCnt;
 326              		.loc 1 369 9 is_stmt 1 view .LVU107
 370:Src/pwm_curr_fdbk.c ****       }
 371:Src/pwm_curr_fdbk.c ****       else
 372:Src/pwm_curr_fdbk.c ****       {
 373:Src/pwm_curr_fdbk.c ****         pHandle->CntPhB -= pHandle->DTCompCnt;
 374:Src/pwm_curr_fdbk.c ****       }
 375:Src/pwm_curr_fdbk.c **** 
 376:Src/pwm_curr_fdbk.c ****       if (pHandle->Ic > 0)
 327              		.loc 1 376 10 is_stmt 0 view .LVU108
 328 00dc B0F96620 		ldrsh	r2, [r0, #102]
 369:Src/pwm_curr_fdbk.c ****       }
 329              		.loc 1 369 25 view .LVU109
 330 00e0 CCBF     		ite	gt
 331 00e2 0919     		addgt	r1, r1, r4
 373:Src/pwm_curr_fdbk.c ****       }
 332              		.loc 1 373 9 is_stmt 1 view .LVU110
 373:Src/pwm_curr_fdbk.c ****       }
 333              		.loc 1 373 25 is_stmt 0 view .LVU111
 334 00e4 091B     		suble	r1, r1, r4
 335              		.loc 1 376 10 view .LVU112
 336 00e6 002A     		cmp	r2, #0
 373:Src/pwm_curr_fdbk.c ****       }
 337              		.loc 1 373 25 view .LVU113
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 14


 338 00e8 89B2     		uxth	r1, r1
 377:Src/pwm_curr_fdbk.c ****       {
 378:Src/pwm_curr_fdbk.c ****         pHandle->CntPhC += pHandle->DTCompCnt;
 339              		.loc 1 378 25 view .LVU114
 340 00ea CCBF     		ite	gt
 341 00ec 1B19     		addgt	r3, r3, r4
 379:Src/pwm_curr_fdbk.c ****       }
 380:Src/pwm_curr_fdbk.c ****       else
 381:Src/pwm_curr_fdbk.c ****       {
 382:Src/pwm_curr_fdbk.c ****         pHandle->CntPhC -= pHandle->DTCompCnt;
 342              		.loc 1 382 25 view .LVU115
 343 00ee 1B1B     		suble	r3, r3, r4
 344 00f0 A0F85210 		strh	r1, [r0, #82]	@ movhi
 376:Src/pwm_curr_fdbk.c ****       {
 345              		.loc 1 376 7 is_stmt 1 view .LVU116
 378:Src/pwm_curr_fdbk.c ****       }
 346              		.loc 1 378 9 view .LVU117
 347              		.loc 1 382 9 view .LVU118
 348              		.loc 1 382 25 is_stmt 0 view .LVU119
 349 00f4 A0F85430 		strh	r3, [r0, #84]	@ movhi
 350              	.L39:
 383:Src/pwm_curr_fdbk.c ****       }
 384:Src/pwm_curr_fdbk.c ****     }
 385:Src/pwm_curr_fdbk.c ****     returnValue = pHandle->pFctSetADCSampPointSectX(pHandle);
 351              		.loc 1 385 5 is_stmt 1 view .LVU120
 352              		.loc 1 385 19 is_stmt 0 view .LVU121
 353 00f8 4369     		ldr	r3, [r0, #20]
 386:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 387:Src/pwm_curr_fdbk.c ****   }
 388:Src/pwm_curr_fdbk.c **** #endif
 389:Src/pwm_curr_fdbk.c ****   return (returnValue);
 390:Src/pwm_curr_fdbk.c **** }
 354              		.loc 1 390 1 view .LVU122
 355 00fa 03B0     		add	sp, sp, #12
 356              	.LCFI2:
 357              		.cfi_remember_state
 358              		.cfi_def_cfa_offset 12
 359              		@ sp needed
 360 00fc BDE83040 		pop	{r4, r5, lr}
 361              	.LCFI3:
 362              		.cfi_restore 14
 363              		.cfi_restore 5
 364              		.cfi_restore 4
 365              		.cfi_def_cfa_offset 0
 385:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 366              		.loc 1 385 19 view .LVU123
 367 0100 1847     		bx	r3
 368              	.LVL24:
 369              	.L24:
 370              	.LCFI4:
 371              		.cfi_restore_state
 309:Src/pwm_curr_fdbk.c ****         {
 372              		.loc 1 309 9 is_stmt 1 view .LVU124
 309:Src/pwm_curr_fdbk.c ****         {
 373              		.loc 1 309 12 is_stmt 0 view .LVU125
 374 0102 002C     		cmp	r4, #0
 375 0104 40F38C80 		ble	.L48
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 15


 331:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4)+ ((wX - wZ) / (int32_t)262144);
 376              		.loc 1 331 11 is_stmt 1 view .LVU126
 332:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 377              		.loc 1 332 70 is_stmt 0 view .LVU127
 378 0108 B4EB020E 		subs	lr, r4, r2
 379              	.LVL25:
 332:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 380              		.loc 1 332 70 view .LVU128
 381 010c 44BF     		itt	mi
 382 010e 0EF57F3E 		addmi	lr, lr, #261120
 383 0112 0EF2FF3E 		addwmi	lr, lr, #1023
 333:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 384              		.loc 1 333 37 view .LVU129
 385 0116 0029     		cmp	r1, #0
 386 0118 B8BF     		it	lt
 387 011a 01F57F31 		addlt	r1, r1, #261120
 331:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4)+ ((wX - wZ) / (int32_t)262144);
 388              		.loc 1 331 27 view .LVU130
 389 011e 4FF00003 		mov	r3, #0
 390              	.LVL26:
 333:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 391              		.loc 1 333 37 view .LVU131
 392 0122 B8BF     		it	lt
 393 0124 01F2FF31 		addwlt	r1, r1, #1023
 331:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4)+ ((wX - wZ) / (int32_t)262144);
 394              		.loc 1 331 27 view .LVU132
 395 0128 80F87C30 		strb	r3, [r0, #124]
 332:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 396              		.loc 1 332 11 is_stmt 1 view .LVU133
 332:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 397              		.loc 1 332 53 is_stmt 0 view .LVU134
 398 012c 4FEA9C0C 		lsr	ip, ip, #2
 334:Src/pwm_curr_fdbk.c **** 
 399              		.loc 1 334 37 view .LVU135
 400 0130 231E     		subs	r3, r4, #0
 401 0132 B8BF     		it	lt
 402 0134 03F5FF33 		addlt	r3, r3, #130560
 332:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 403              		.loc 1 332 20 view .LVU136
 404 0138 0CEBAE42 		add	r2, ip, lr, asr #18
 405              	.LVL27:
 333:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 406              		.loc 1 333 11 is_stmt 1 view .LVU137
 336:Src/pwm_curr_fdbk.c ****           {
 407              		.loc 1 336 13 is_stmt 0 view .LVU138
 408 013c 90F87F40 		ldrb	r4, [r0, #127]	@ zero_extendqisi2
 409              	.LVL28:
 333:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 410              		.loc 1 333 20 view .LVU139
 411 0140 02EBA141 		add	r1, r2, r1, asr #18
 412              	.LVL29:
 334:Src/pwm_curr_fdbk.c **** 
 413              		.loc 1 334 11 is_stmt 1 view .LVU140
 334:Src/pwm_curr_fdbk.c **** 
 414              		.loc 1 334 37 is_stmt 0 view .LVU141
 415 0144 B8BF     		it	lt
 416 0146 03F2FF13 		addwlt	r3, r3, #511
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 16


 334:Src/pwm_curr_fdbk.c **** 
 417              		.loc 1 334 20 view .LVU142
 418 014a A1EB6343 		sub	r3, r1, r3, asr #17
 419              	.LVL30:
 336:Src/pwm_curr_fdbk.c ****           {
 420              		.loc 1 336 11 is_stmt 1 view .LVU143
 336:Src/pwm_curr_fdbk.c ****           {
 421              		.loc 1 336 13 is_stmt 0 view .LVU144
 422 014e 24B9     		cbnz	r4, .L37
 336:Src/pwm_curr_fdbk.c ****           {
 423              		.loc 1 336 43 discriminator 1 view .LVU145
 424 0150 90F88740 		ldrb	r4, [r0, #135]	@ zero_extendqisi2
 425 0154 002C     		cmp	r4, #0
 426 0156 00F0D480 		beq	.L38
 427              	.L37:
 338:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 428              		.loc 1 338 13 is_stmt 1 view .LVU146
 339:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 0U;
 429              		.loc 1 339 13 view .LVU147
 338:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 430              		.loc 1 338 30 is_stmt 0 view .LVU148
 431 015a 6D4C     		ldr	r4, .L51
 432 015c 8465     		str	r4, [r0, #88]
 340:Src/pwm_curr_fdbk.c ****           }
 433              		.loc 1 340 13 is_stmt 1 view .LVU149
 340:Src/pwm_curr_fdbk.c ****           }
 434              		.loc 1 340 31 is_stmt 0 view .LVU150
 435 015e 0024     		movs	r4, #0
 436 0160 A0F85C40 		strh	r4, [r0, #92]	@ movhi
 437 0164 99E7     		b	.L15
 438              	.LVL31:
 439              	.L46:
 224:Src/pwm_curr_fdbk.c ****       {
 440              		.loc 1 224 7 is_stmt 1 view .LVU151
 224:Src/pwm_curr_fdbk.c ****       {
 441              		.loc 1 224 10 is_stmt 0 view .LVU152
 442 0166 4D1C     		adds	r5, r1, #1
 443 0168 C0F28580 		blt	.L49
 245:Src/pwm_curr_fdbk.c ****         {
 444              		.loc 1 245 9 is_stmt 1 view .LVU153
 245:Src/pwm_curr_fdbk.c ****         {
 445              		.loc 1 245 12 is_stmt 0 view .LVU154
 446 016c 002C     		cmp	r4, #0
 447 016e 2BDD     		ble	.L50
 267:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4)+ ((wY - wX) / (int32_t)262144);
 448              		.loc 1 267 11 is_stmt 1 view .LVU155
 268:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 449              		.loc 1 268 71 is_stmt 0 view .LVU156
 450 0170 BEEB040E 		subs	lr, lr, r4
 451              	.LVL32:
 268:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 452              		.loc 1 268 71 view .LVU157
 453 0174 44BF     		itt	mi
 454 0176 0EF57F3E 		addmi	lr, lr, #261120
 455 017a 0EF2FF3E 		addwmi	lr, lr, #1023
 269:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 456              		.loc 1 269 37 view .LVU158
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 17


 457 017e 002B     		cmp	r3, #0
 267:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4)+ ((wY - wX) / (int32_t)262144);
 458              		.loc 1 267 27 view .LVU159
 459 0180 4FF00202 		mov	r2, #2
 460              	.LVL33:
 269:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 461              		.loc 1 269 37 view .LVU160
 462 0184 B8BF     		it	lt
 463 0186 03F57F33 		addlt	r3, r3, #261120
 464              	.LVL34:
 268:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 465              		.loc 1 268 54 view .LVU161
 466 018a 4FEA9C0C 		lsr	ip, ip, #2
 267:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4)+ ((wY - wX) / (int32_t)262144);
 467              		.loc 1 267 27 view .LVU162
 468 018e 80F87C20 		strb	r2, [r0, #124]
 268:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 469              		.loc 1 268 11 is_stmt 1 view .LVU163
 269:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 470              		.loc 1 269 37 is_stmt 0 view .LVU164
 471 0192 B8BF     		it	lt
 472 0194 03F2FF33 		addwlt	r3, r3, #1023
 268:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 473              		.loc 1 268 20 view .LVU165
 474 0198 0CEBAE42 		add	r2, ip, lr, asr #18
 475              	.LVL35:
 269:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 476              		.loc 1 269 11 is_stmt 1 view .LVU166
 272:Src/pwm_curr_fdbk.c ****           {
 477              		.loc 1 272 13 is_stmt 0 view .LVU167
 478 019c 90F88750 		ldrb	r5, [r0, #135]	@ zero_extendqisi2
 269:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 479              		.loc 1 269 20 view .LVU168
 480 01a0 A2EBA343 		sub	r3, r2, r3, asr #18
 481              	.LVL36:
 270:Src/pwm_curr_fdbk.c **** 
 482              		.loc 1 270 11 is_stmt 1 view .LVU169
 270:Src/pwm_curr_fdbk.c **** 
 483              		.loc 1 270 20 is_stmt 0 view .LVU170
 484 01a4 03EB6441 		add	r1, r3, r4, asr #17
 485              	.LVL37:
 272:Src/pwm_curr_fdbk.c ****           {
 486              		.loc 1 272 11 is_stmt 1 view .LVU171
 272:Src/pwm_curr_fdbk.c ****           {
 487              		.loc 1 272 13 is_stmt 0 view .LVU172
 488 01a8 002D     		cmp	r5, #0
 489 01aa 00F09580 		beq	.L23
 274:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 490              		.loc 1 274 13 is_stmt 1 view .LVU173
 275:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 1U;
 491              		.loc 1 275 13 view .LVU174
 274:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 492              		.loc 1 274 30 is_stmt 0 view .LVU175
 493 01ae 4FF40034 		mov	r4, #131072
 494              	.LVL38:
 274:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 495              		.loc 1 274 30 view .LVU176
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 18


 496 01b2 8465     		str	r4, [r0, #88]
 276:Src/pwm_curr_fdbk.c ****           }
 497              		.loc 1 276 13 is_stmt 1 view .LVU177
 276:Src/pwm_curr_fdbk.c ****           }
 498              		.loc 1 276 31 is_stmt 0 view .LVU178
 499 01b4 0124     		movs	r4, #1
 500 01b6 A0F85C40 		strh	r4, [r0, #92]	@ movhi
 501 01ba 6EE7     		b	.L15
 502              	.LVL39:
 503              	.L47:
 297:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
 504              		.loc 1 297 11 is_stmt 1 view .LVU179
 298:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = 1U;
 505              		.loc 1 298 11 view .LVU180
 297:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
 506              		.loc 1 297 28 is_stmt 0 view .LVU181
 507 01bc 0224     		movs	r4, #2
 508 01be 8465     		str	r4, [r0, #88]
 299:Src/pwm_curr_fdbk.c ****         }
 509              		.loc 1 299 11 is_stmt 1 view .LVU182
 299:Src/pwm_curr_fdbk.c ****         }
 510              		.loc 1 299 29 is_stmt 0 view .LVU183
 511 01c0 0124     		movs	r4, #1
 512 01c2 A0F85C40 		strh	r4, [r0, #92]	@ movhi
 513 01c6 68E7     		b	.L15
 514              	.LVL40:
 515              	.L50:
 247:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wX - wZ) / (int32_t)262144);
 516              		.loc 1 247 11 is_stmt 1 view .LVU184
 248:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 517              		.loc 1 248 71 is_stmt 0 view .LVU185
 518 01c8 B4EB020E 		subs	lr, r4, r2
 519              	.LVL41:
 248:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 520              		.loc 1 248 71 view .LVU186
 521 01cc 44BF     		itt	mi
 522 01ce 0EF57F3E 		addmi	lr, lr, #261120
 523 01d2 0EF2FF3E 		addwmi	lr, lr, #1023
 249:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 524              		.loc 1 249 37 view .LVU187
 525 01d6 0029     		cmp	r1, #0
 526 01d8 B8BF     		it	lt
 527 01da 01F57F31 		addlt	r1, r1, #261120
 247:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wX - wZ) / (int32_t)262144);
 528              		.loc 1 247 27 view .LVU188
 529 01de 4FF00303 		mov	r3, #3
 530              	.LVL42:
 249:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 531              		.loc 1 249 37 view .LVU189
 532 01e2 B8BF     		it	lt
 533 01e4 01F2FF31 		addwlt	r1, r1, #1023
 247:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wX - wZ) / (int32_t)262144);
 534              		.loc 1 247 27 view .LVU190
 535 01e8 80F87C30 		strb	r3, [r0, #124]
 248:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 536              		.loc 1 248 11 is_stmt 1 view .LVU191
 248:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 19


 537              		.loc 1 248 53 is_stmt 0 view .LVU192
 538 01ec 4FEA9C0C 		lsr	ip, ip, #2
 250:Src/pwm_curr_fdbk.c **** 
 539              		.loc 1 250 37 view .LVU193
 540 01f0 231E     		subs	r3, r4, #0
 541 01f2 B8BF     		it	lt
 542 01f4 03F5FF33 		addlt	r3, r3, #130560
 248:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 543              		.loc 1 248 20 view .LVU194
 544 01f8 0CEBAE42 		add	r2, ip, lr, asr #18
 545              	.LVL43:
 249:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 546              		.loc 1 249 11 is_stmt 1 view .LVU195
 252:Src/pwm_curr_fdbk.c ****           {
 547              		.loc 1 252 13 is_stmt 0 view .LVU196
 548 01fc 90F88740 		ldrb	r4, [r0, #135]	@ zero_extendqisi2
 549              	.LVL44:
 249:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 550              		.loc 1 249 20 view .LVU197
 551 0200 02EBA141 		add	r1, r2, r1, asr #18
 552              	.LVL45:
 250:Src/pwm_curr_fdbk.c **** 
 553              		.loc 1 250 11 is_stmt 1 view .LVU198
 250:Src/pwm_curr_fdbk.c **** 
 554              		.loc 1 250 37 is_stmt 0 view .LVU199
 555 0204 B8BF     		it	lt
 556 0206 03F2FF13 		addwlt	r3, r3, #511
 250:Src/pwm_curr_fdbk.c **** 
 557              		.loc 1 250 20 view .LVU200
 558 020a A1EB6343 		sub	r3, r1, r3, asr #17
 559              	.LVL46:
 252:Src/pwm_curr_fdbk.c ****           {
 560              		.loc 1 252 11 is_stmt 1 view .LVU201
 252:Src/pwm_curr_fdbk.c ****           {
 561              		.loc 1 252 13 is_stmt 0 view .LVU202
 562 020e 002C     		cmp	r4, #0
 563 0210 70D0     		beq	.L20
 254:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 564              		.loc 1 254 13 is_stmt 1 view .LVU203
 255:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 2U;
 565              		.loc 1 255 13 view .LVU204
 254:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 566              		.loc 1 254 30 is_stmt 0 view .LVU205
 567 0212 4FF48034 		mov	r4, #65536
 568 0216 8465     		str	r4, [r0, #88]
 256:Src/pwm_curr_fdbk.c ****           }
 569              		.loc 1 256 13 is_stmt 1 view .LVU206
 256:Src/pwm_curr_fdbk.c ****           }
 570              		.loc 1 256 31 is_stmt 0 view .LVU207
 571 0218 0224     		movs	r4, #2
 572 021a A0F85C40 		strh	r4, [r0, #92]	@ movhi
 573 021e 3CE7     		b	.L15
 574              	.LVL47:
 575              	.L48:
 311:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4) + ((wY - wX) / (int32_t)262144);
 576              		.loc 1 311 11 is_stmt 1 view .LVU208
 312:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 20


 577              		.loc 1 312 72 is_stmt 0 view .LVU209
 578 0220 BEEB040E 		subs	lr, lr, r4
 579              	.LVL48:
 312:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 580              		.loc 1 312 72 view .LVU210
 581 0224 44BF     		itt	mi
 582 0226 0EF57F3E 		addmi	lr, lr, #261120
 583 022a 0EF2FF3E 		addwmi	lr, lr, #1023
 313:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 584              		.loc 1 313 37 view .LVU211
 585 022e 002B     		cmp	r3, #0
 313:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 586              		.loc 1 313 37 view .LVU212
 587 0230 B8BF     		it	lt
 588 0232 03F57F33 		addlt	r3, r3, #261120
 589              	.LVL49:
 311:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4) + ((wY - wX) / (int32_t)262144);
 590              		.loc 1 311 27 view .LVU213
 591 0236 4FF00502 		mov	r2, #5
 592              	.LVL50:
 313:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 593              		.loc 1 313 37 view .LVU214
 594 023a B8BF     		it	lt
 595 023c 03F2FF33 		addwlt	r3, r3, #1023
 312:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 596              		.loc 1 312 54 view .LVU215
 597 0240 4FEA9C0C 		lsr	ip, ip, #2
 314:Src/pwm_curr_fdbk.c **** 
 598              		.loc 1 314 37 view .LVU216
 599 0244 211E     		subs	r1, r4, #0
 600              	.LVL51:
 314:Src/pwm_curr_fdbk.c **** 
 601              		.loc 1 314 37 view .LVU217
 602 0246 B8BF     		it	lt
 603 0248 01F5FF31 		addlt	r1, r1, #130560
 311:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4) + ((wY - wX) / (int32_t)262144);
 604              		.loc 1 311 27 view .LVU218
 605 024c 80F87C20 		strb	r2, [r0, #124]
 312:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 606              		.loc 1 312 11 is_stmt 1 view .LVU219
 316:Src/pwm_curr_fdbk.c ****           {
 607              		.loc 1 316 13 is_stmt 0 view .LVU220
 608 0250 90F88740 		ldrb	r4, [r0, #135]	@ zero_extendqisi2
 609              	.LVL52:
 312:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 610              		.loc 1 312 20 view .LVU221
 611 0254 0CEBAE42 		add	r2, ip, lr, asr #18
 612              	.LVL53:
 313:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 613              		.loc 1 313 11 is_stmt 1 view .LVU222
 313:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 614              		.loc 1 313 20 is_stmt 0 view .LVU223
 615 0258 A2EBA343 		sub	r3, r2, r3, asr #18
 616              	.LVL54:
 314:Src/pwm_curr_fdbk.c **** 
 617              		.loc 1 314 11 is_stmt 1 view .LVU224
 314:Src/pwm_curr_fdbk.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 21


 618              		.loc 1 314 37 is_stmt 0 view .LVU225
 619 025c B8BF     		it	lt
 620 025e 01F2FF11 		addwlt	r1, r1, #511
 314:Src/pwm_curr_fdbk.c **** 
 621              		.loc 1 314 20 view .LVU226
 622 0262 03EB6141 		add	r1, r3, r1, asr #17
 623              	.LVL55:
 316:Src/pwm_curr_fdbk.c ****           {
 624              		.loc 1 316 11 is_stmt 1 view .LVU227
 316:Src/pwm_curr_fdbk.c ****           {
 625              		.loc 1 316 13 is_stmt 0 view .LVU228
 626 0266 002C     		cmp	r4, #0
 627 0268 3DD0     		beq	.L33
 318:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 628              		.loc 1 318 13 is_stmt 1 view .LVU229
 319:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 0U;
 629              		.loc 1 319 13 view .LVU230
 318:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 630              		.loc 1 318 30 is_stmt 0 view .LVU231
 631 026a 2A4C     		ldr	r4, .L51+4
 632 026c 8465     		str	r4, [r0, #88]
 320:Src/pwm_curr_fdbk.c ****           }
 633              		.loc 1 320 13 is_stmt 1 view .LVU232
 320:Src/pwm_curr_fdbk.c ****           }
 634              		.loc 1 320 31 is_stmt 0 view .LVU233
 635 026e 0024     		movs	r4, #0
 636 0270 A0F85C40 		strh	r4, [r0, #92]	@ movhi
 637 0274 11E7     		b	.L15
 638              	.LVL56:
 639              	.L49:
 226:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 640              		.loc 1 226 9 is_stmt 1 view .LVU234
 227:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 641              		.loc 1 227 69 is_stmt 0 view .LVU235
 642 0276 BEEB020E 		subs	lr, lr, r2
 643              	.LVL57:
 227:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 644              		.loc 1 227 69 view .LVU236
 645 027a 44BF     		itt	mi
 646 027c 0EF57F3E 		addmi	lr, lr, #261120
 647 0280 0EF2FF3E 		addwmi	lr, lr, #1023
 228:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072) ;
 648              		.loc 1 228 35 view .LVU237
 649 0284 0029     		cmp	r1, #0
 650 0286 B8BF     		it	lt
 651 0288 01F57F31 		addlt	r1, r1, #261120
 226:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 652              		.loc 1 226 25 view .LVU238
 653 028c 4FF00404 		mov	r4, #4
 654              	.LVL58:
 228:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072) ;
 655              		.loc 1 228 35 view .LVU239
 656 0290 B8BF     		it	lt
 657 0292 01F2FF31 		addwlt	r1, r1, #1023
 229:Src/pwm_curr_fdbk.c **** 
 658              		.loc 1 229 35 view .LVU240
 659 0296 002B     		cmp	r3, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 22


 229:Src/pwm_curr_fdbk.c **** 
 660              		.loc 1 229 35 view .LVU241
 661 0298 B8BF     		it	lt
 662 029a 03F57F33 		addlt	r3, r3, #261120
 663              	.LVL59:
 226:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 664              		.loc 1 226 25 view .LVU242
 665 029e 80F87C40 		strb	r4, [r0, #124]
 666              	.LVL60:
 227:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 667              		.loc 1 227 9 is_stmt 1 view .LVU243
 227:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 668              		.loc 1 227 51 is_stmt 0 view .LVU244
 669 02a2 4FEA9C0C 		lsr	ip, ip, #2
 231:Src/pwm_curr_fdbk.c ****         {
 670              		.loc 1 231 11 view .LVU245
 671 02a6 90F88740 		ldrb	r4, [r0, #135]	@ zero_extendqisi2
 227:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 672              		.loc 1 227 18 view .LVU246
 673 02aa 0CEBAE42 		add	r2, ip, lr, asr #18
 674              	.LVL61:
 228:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072) ;
 675              		.loc 1 228 9 is_stmt 1 view .LVU247
 229:Src/pwm_curr_fdbk.c **** 
 676              		.loc 1 229 35 is_stmt 0 view .LVU248
 677 02ae B8BF     		it	lt
 678 02b0 03F2FF33 		addwlt	r3, r3, #1023
 228:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072) ;
 679              		.loc 1 228 18 view .LVU249
 680 02b4 02EBA141 		add	r1, r2, r1, asr #18
 681              	.LVL62:
 229:Src/pwm_curr_fdbk.c **** 
 682              		.loc 1 229 9 is_stmt 1 view .LVU250
 229:Src/pwm_curr_fdbk.c **** 
 683              		.loc 1 229 18 is_stmt 0 view .LVU251
 684 02b8 A2EBA343 		sub	r3, r2, r3, asr #18
 685              	.LVL63:
 231:Src/pwm_curr_fdbk.c ****         {
 686              		.loc 1 231 9 is_stmt 1 view .LVU252
 231:Src/pwm_curr_fdbk.c ****         {
 687              		.loc 1 231 11 is_stmt 0 view .LVU253
 688 02bc 2CB1     		cbz	r4, .L14
 233:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
 689              		.loc 1 233 11 is_stmt 1 view .LVU254
 234:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = 2U;
 690              		.loc 1 234 11 view .LVU255
 233:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
 691              		.loc 1 233 28 is_stmt 0 view .LVU256
 692 02be 0124     		movs	r4, #1
 693 02c0 8465     		str	r4, [r0, #88]
 235:Src/pwm_curr_fdbk.c ****         }
 694              		.loc 1 235 11 is_stmt 1 view .LVU257
 235:Src/pwm_curr_fdbk.c ****         }
 695              		.loc 1 235 29 is_stmt 0 view .LVU258
 696 02c2 0224     		movs	r4, #2
 697 02c4 A0F85C40 		strh	r4, [r0, #92]	@ movhi
 698 02c8 E7E6     		b	.L15
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 23


 699              	.L14:
 239:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhA;
 700              		.loc 1 239 11 is_stmt 1 view .LVU259
 239:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhA;
 701              		.loc 1 239 30 is_stmt 0 view .LVU260
 702 02ca A0F85830 		strh	r3, [r0, #88]	@ movhi
 240:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhB;
 703              		.loc 1 240 11 is_stmt 1 view .LVU261
 240:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhB;
 704              		.loc 1 240 30 is_stmt 0 view .LVU262
 705 02ce A0F85A20 		strh	r2, [r0, #90]	@ movhi
 241:Src/pwm_curr_fdbk.c ****         }
 706              		.loc 1 241 11 is_stmt 1 view .LVU263
 241:Src/pwm_curr_fdbk.c ****         }
 707              		.loc 1 241 31 is_stmt 0 view .LVU264
 708 02d2 A0F85C10 		strh	r1, [r0, #92]	@ movhi
 709 02d6 E0E6     		b	.L15
 710              	.LVL64:
 711              	.L23:
 280:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhC;
 712              		.loc 1 280 11 is_stmt 1 view .LVU265
 280:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhC;
 713              		.loc 1 280 30 is_stmt 0 view .LVU266
 714 02d8 A0F85810 		strh	r1, [r0, #88]	@ movhi
 281:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 715              		.loc 1 281 11 is_stmt 1 view .LVU267
 281:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 716              		.loc 1 281 30 is_stmt 0 view .LVU268
 717 02dc A0F85A30 		strh	r3, [r0, #90]	@ movhi
 282:Src/pwm_curr_fdbk.c ****         }
 718              		.loc 1 282 11 is_stmt 1 view .LVU269
 282:Src/pwm_curr_fdbk.c ****         }
 719              		.loc 1 282 31 is_stmt 0 view .LVU270
 720 02e0 A0F85C20 		strh	r2, [r0, #92]	@ movhi
 721 02e4 D9E6     		b	.L15
 722              	.LVL65:
 723              	.L33:
 324:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhC;
 724              		.loc 1 324 13 is_stmt 1 view .LVU271
 324:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhC;
 725              		.loc 1 324 32 is_stmt 0 view .LVU272
 726 02e6 A0F85820 		strh	r2, [r0, #88]	@ movhi
 325:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhB;
 727              		.loc 1 325 13 is_stmt 1 view .LVU273
 325:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhB;
 728              		.loc 1 325 32 is_stmt 0 view .LVU274
 729 02ea A0F85A30 		strh	r3, [r0, #90]	@ movhi
 326:Src/pwm_curr_fdbk.c ****         }
 730              		.loc 1 326 13 is_stmt 1 view .LVU275
 326:Src/pwm_curr_fdbk.c ****         }
 731              		.loc 1 326 33 is_stmt 0 view .LVU276
 732 02ee A0F85C10 		strh	r1, [r0, #92]	@ movhi
 733 02f2 D2E6     		b	.L15
 734              	.L20:
 260:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhB;
 735              		.loc 1 260 11 is_stmt 1 view .LVU277
 260:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhB;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 24


 736              		.loc 1 260 30 is_stmt 0 view .LVU278
 737 02f4 A0F85830 		strh	r3, [r0, #88]	@ movhi
 261:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 738              		.loc 1 261 11 is_stmt 1 view .LVU279
 261:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 739              		.loc 1 261 30 is_stmt 0 view .LVU280
 740 02f8 A0F85A10 		strh	r1, [r0, #90]	@ movhi
 262:Src/pwm_curr_fdbk.c ****         }
 741              		.loc 1 262 11 is_stmt 1 view .LVU281
 262:Src/pwm_curr_fdbk.c ****         }
 742              		.loc 1 262 31 is_stmt 0 view .LVU282
 743 02fc A0F85C20 		strh	r2, [r0, #92]	@ movhi
 744 0300 CBE6     		b	.L15
 745              	.L38:
 344:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhB;
 746              		.loc 1 344 13 is_stmt 1 view .LVU283
 344:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhB;
 747              		.loc 1 344 32 is_stmt 0 view .LVU284
 748 0302 A0F85820 		strh	r2, [r0, #88]	@ movhi
 345:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhC;
 749              		.loc 1 345 13 is_stmt 1 view .LVU285
 345:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhC;
 750              		.loc 1 345 32 is_stmt 0 view .LVU286
 751 0306 A0F85A10 		strh	r1, [r0, #90]	@ movhi
 346:Src/pwm_curr_fdbk.c ****         }
 752              		.loc 1 346 13 is_stmt 1 view .LVU287
 346:Src/pwm_curr_fdbk.c ****         }
 753              		.loc 1 346 33 is_stmt 0 view .LVU288
 754 030a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 755 030e C4E6     		b	.L15
 756              	.L52:
 757              		.align	2
 758              	.L51:
 759 0310 02000100 		.word	65538
 760 0314 01000200 		.word	131073
 761              		.cfi_endproc
 762              	.LFE1094:
 764              		.section	.text.PWMC_SwitchOffPWM,"ax",%progbits
 765              		.align	1
 766              		.p2align 2,,3
 767              		.weak	PWMC_SwitchOffPWM
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 772              	PWMC_SwitchOffPWM:
 773              	.LVL66:
 774              	.LFB1095:
 391:Src/pwm_curr_fdbk.c **** 
 392:Src/pwm_curr_fdbk.c **** /**
 393:Src/pwm_curr_fdbk.c ****   * @brief  Switches PWM generation off, inactivating the outputs.
 394:Src/pwm_curr_fdbk.c ****   *
 395:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 396:Src/pwm_curr_fdbk.c ****   */
 397:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 398:Src/pwm_curr_fdbk.c **** __weak void PWMC_SwitchOffPWM(PWMC_Handle_t *pHandle)
 399:Src/pwm_curr_fdbk.c **** {
 775              		.loc 1 399 1 is_stmt 1 view -0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 25


 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779              		@ link register save eliminated.
 400:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 401:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 402:Src/pwm_curr_fdbk.c ****   {
 403:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 404:Src/pwm_curr_fdbk.c ****   }
 405:Src/pwm_curr_fdbk.c ****   else
 406:Src/pwm_curr_fdbk.c ****   {
 407:Src/pwm_curr_fdbk.c **** #endif
 408:Src/pwm_curr_fdbk.c ****     pHandle->pFctSwitchOffPwm(pHandle);
 780              		.loc 1 408 5 view .LVU290
 781 0000 4368     		ldr	r3, [r0, #4]
 782 0002 1847     		bx	r3	@ indirect register sibling call
 783              	.LVL67:
 784              		.loc 1 408 5 is_stmt 0 view .LVU291
 785              		.cfi_endproc
 786              	.LFE1095:
 788              		.section	.text.PWMC_SwitchOnPWM,"ax",%progbits
 789              		.align	1
 790              		.p2align 2,,3
 791              		.weak	PWMC_SwitchOnPWM
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 796              	PWMC_SwitchOnPWM:
 797              	.LVL68:
 798              	.LFB1096:
 409:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 410:Src/pwm_curr_fdbk.c ****   }
 411:Src/pwm_curr_fdbk.c **** #endif
 412:Src/pwm_curr_fdbk.c **** }
 413:Src/pwm_curr_fdbk.c **** 
 414:Src/pwm_curr_fdbk.c **** /**
 415:Src/pwm_curr_fdbk.c ****   * @brief  Enables PWM generation on the proper Timer peripheral.
 416:Src/pwm_curr_fdbk.c ****   *
 417:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 418:Src/pwm_curr_fdbk.c ****   */
 419:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 420:Src/pwm_curr_fdbk.c **** __weak void PWMC_SwitchOnPWM(PWMC_Handle_t *pHandle)
 421:Src/pwm_curr_fdbk.c **** {
 799              		.loc 1 421 1 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 422:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 423:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 424:Src/pwm_curr_fdbk.c ****   {
 425:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 426:Src/pwm_curr_fdbk.c ****   }
 427:Src/pwm_curr_fdbk.c ****   else
 428:Src/pwm_curr_fdbk.c ****   {
 429:Src/pwm_curr_fdbk.c **** #endif
 430:Src/pwm_curr_fdbk.c ****     pHandle->pFctSwitchOnPwm(pHandle);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 26


 804              		.loc 1 430 5 view .LVU293
 805 0000 8368     		ldr	r3, [r0, #8]
 806 0002 1847     		bx	r3	@ indirect register sibling call
 807              	.LVL69:
 808              		.loc 1 430 5 is_stmt 0 view .LVU294
 809              		.cfi_endproc
 810              	.LFE1096:
 812              		.section	.text.PWMC_CurrentReadingCalibr,"ax",%progbits
 813              		.align	1
 814              		.p2align 2,,3
 815              		.weak	PWMC_CurrentReadingCalibr
 816              		.syntax unified
 817              		.thumb
 818              		.thumb_func
 820              	PWMC_CurrentReadingCalibr:
 821              	.LVL70:
 822              	.LFB1097:
 431:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 432:Src/pwm_curr_fdbk.c ****   }
 433:Src/pwm_curr_fdbk.c **** #endif
 434:Src/pwm_curr_fdbk.c **** }
 435:Src/pwm_curr_fdbk.c **** 
 436:Src/pwm_curr_fdbk.c **** /**
 437:Src/pwm_curr_fdbk.c ****   * @brief  Calibrates ADC current conversions by reading the offset voltage
 438:Src/pwm_curr_fdbk.c ****   *         present on ADC pins when no motor current is flowing in.
 439:Src/pwm_curr_fdbk.c ****   *
 440:Src/pwm_curr_fdbk.c ****   * This function should be called before each motor start-up.
 441:Src/pwm_curr_fdbk.c ****   *
 442:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 443:Src/pwm_curr_fdbk.c ****   * @param  action: Can be #CRC_START to initialize the offset calibration or
 444:Src/pwm_curr_fdbk.c ****   *         #CRC_EXEC to execute the offset calibration.
 445:Src/pwm_curr_fdbk.c ****   * @retval true if the current calibration has been completed, **false** if it is
 446:Src/pwm_curr_fdbk.c ****   *         still ongoing.
 447:Src/pwm_curr_fdbk.c ****   */
 448:Src/pwm_curr_fdbk.c **** __weak bool PWMC_CurrentReadingCalibr(PWMC_Handle_t *pHandle, CRCAction_t action)
 449:Src/pwm_curr_fdbk.c **** {
 823              		.loc 1 449 1 is_stmt 1 view -0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 8
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 450:Src/pwm_curr_fdbk.c ****   bool retVal = false;
 827              		.loc 1 450 3 view .LVU296
 451:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 452:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 453:Src/pwm_curr_fdbk.c ****   {
 454:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 455:Src/pwm_curr_fdbk.c ****   }
 456:Src/pwm_curr_fdbk.c ****   else
 457:Src/pwm_curr_fdbk.c ****   {
 458:Src/pwm_curr_fdbk.c **** #endif
 459:Src/pwm_curr_fdbk.c ****     if (CRC_START == action)
 828              		.loc 1 459 5 view .LVU297
 449:Src/pwm_curr_fdbk.c ****   bool retVal = false;
 829              		.loc 1 449 1 is_stmt 0 view .LVU298
 830 0000 10B5     		push	{r4, lr}
 831              	.LCFI5:
 832              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 27


 833              		.cfi_offset 4, -8
 834              		.cfi_offset 14, -4
 835 0002 0446     		mov	r4, r0
 836 0004 82B0     		sub	sp, sp, #8
 837              	.LCFI6:
 838              		.cfi_def_cfa_offset 16
 839              		.loc 1 459 8 view .LVU299
 840 0006 99B1     		cbz	r1, .L62
 460:Src/pwm_curr_fdbk.c ****     {
 461:Src/pwm_curr_fdbk.c ****       PWMC_SwitchOffPWM(pHandle);
 462:Src/pwm_curr_fdbk.c ****       pHandle->pFctCurrReadingCalib(pHandle);
 463:Src/pwm_curr_fdbk.c ****       retVal = true;
 464:Src/pwm_curr_fdbk.c ****     }
 465:Src/pwm_curr_fdbk.c ****     else if (CRC_EXEC == action)
 841              		.loc 1 465 10 is_stmt 1 view .LVU300
 842              		.loc 1 465 13 is_stmt 0 view .LVU301
 843 0008 0129     		cmp	r1, #1
 844 000a 02D0     		beq	.L58
 845              	.L59:
 450:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 846              		.loc 1 450 8 view .LVU302
 847 000c 0020     		movs	r0, #0
 848              	.LVL71:
 849              	.L57:
 466:Src/pwm_curr_fdbk.c ****     {
 467:Src/pwm_curr_fdbk.c ****       if (pHandle->OffCalibrWaitTimeCounter > 0u)
 468:Src/pwm_curr_fdbk.c ****       {
 469:Src/pwm_curr_fdbk.c ****         pHandle->OffCalibrWaitTimeCounter--;
 470:Src/pwm_curr_fdbk.c ****         if (0U == pHandle->OffCalibrWaitTimeCounter)
 471:Src/pwm_curr_fdbk.c ****         {
 472:Src/pwm_curr_fdbk.c ****           pHandle->pFctCurrReadingCalib(pHandle);
 473:Src/pwm_curr_fdbk.c ****           retVal = true;
 474:Src/pwm_curr_fdbk.c ****         }
 475:Src/pwm_curr_fdbk.c ****       }
 476:Src/pwm_curr_fdbk.c ****       else
 477:Src/pwm_curr_fdbk.c ****       {
 478:Src/pwm_curr_fdbk.c ****         retVal = true;
 479:Src/pwm_curr_fdbk.c ****       }
 480:Src/pwm_curr_fdbk.c ****     }
 481:Src/pwm_curr_fdbk.c ****     else
 482:Src/pwm_curr_fdbk.c ****     {
 483:Src/pwm_curr_fdbk.c ****       /* Nothing to do */
 484:Src/pwm_curr_fdbk.c ****     }
 850              		.loc 1 484 5 is_stmt 1 view .LVU303
 485:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 486:Src/pwm_curr_fdbk.c ****   }
 487:Src/pwm_curr_fdbk.c **** #endif
 488:Src/pwm_curr_fdbk.c ****   return (retVal);
 851              		.loc 1 488 3 view .LVU304
 489:Src/pwm_curr_fdbk.c **** }
 852              		.loc 1 489 1 is_stmt 0 view .LVU305
 853 000e 02B0     		add	sp, sp, #8
 854              	.LCFI7:
 855              		.cfi_remember_state
 856              		.cfi_def_cfa_offset 8
 857              		@ sp needed
 858 0010 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 28


 859              	.LVL72:
 860              	.L58:
 861              	.LCFI8:
 862              		.cfi_restore_state
 467:Src/pwm_curr_fdbk.c ****       {
 863              		.loc 1 467 7 is_stmt 1 view .LVU306
 467:Src/pwm_curr_fdbk.c ****       {
 864              		.loc 1 467 18 is_stmt 0 view .LVU307
 865 0012 B0F86030 		ldrh	r3, [r0, #96]
 467:Src/pwm_curr_fdbk.c ****       {
 866              		.loc 1 467 10 view .LVU308
 867 0016 9BB1     		cbz	r3, .L60
 469:Src/pwm_curr_fdbk.c ****         if (0U == pHandle->OffCalibrWaitTimeCounter)
 868              		.loc 1 469 9 is_stmt 1 view .LVU309
 469:Src/pwm_curr_fdbk.c ****         if (0U == pHandle->OffCalibrWaitTimeCounter)
 869              		.loc 1 469 42 is_stmt 0 view .LVU310
 870 0018 013B     		subs	r3, r3, #1
 871 001a 9BB2     		uxth	r3, r3
 872 001c 0191     		str	r1, [sp, #4]
 873 001e A0F86030 		strh	r3, [r0, #96]	@ movhi
 470:Src/pwm_curr_fdbk.c ****         {
 874              		.loc 1 470 9 is_stmt 1 view .LVU311
 470:Src/pwm_curr_fdbk.c ****         {
 875              		.loc 1 470 12 is_stmt 0 view .LVU312
 876 0022 002B     		cmp	r3, #0
 877 0024 F2D1     		bne	.L59
 472:Src/pwm_curr_fdbk.c ****           retVal = true;
 878              		.loc 1 472 11 is_stmt 1 view .LVU313
 879 0026 C368     		ldr	r3, [r0, #12]
 880 0028 9847     		blx	r3
 881              	.LVL73:
 473:Src/pwm_curr_fdbk.c ****         }
 882              		.loc 1 473 11 view .LVU314
 473:Src/pwm_curr_fdbk.c ****         }
 883              		.loc 1 473 18 is_stmt 0 view .LVU315
 884 002a 0199     		ldr	r1, [sp, #4]
 885 002c 0846     		mov	r0, r1
 886 002e EEE7     		b	.L57
 887              	.LVL74:
 888              	.L62:
 461:Src/pwm_curr_fdbk.c ****       pHandle->pFctCurrReadingCalib(pHandle);
 889              		.loc 1 461 7 is_stmt 1 view .LVU316
 890 0030 FFF7FEFF 		bl	PWMC_SwitchOffPWM
 891              	.LVL75:
 462:Src/pwm_curr_fdbk.c ****       retVal = true;
 892              		.loc 1 462 7 view .LVU317
 893 0034 2046     		mov	r0, r4
 894 0036 E368     		ldr	r3, [r4, #12]
 895 0038 9847     		blx	r3
 896              	.LVL76:
 463:Src/pwm_curr_fdbk.c ****     }
 897              		.loc 1 463 7 view .LVU318
 463:Src/pwm_curr_fdbk.c ****     }
 898              		.loc 1 463 14 is_stmt 0 view .LVU319
 899 003a 0120     		movs	r0, #1
 900              	.LVL77:
 484:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 29


 901              		.loc 1 484 5 is_stmt 1 view .LVU320
 488:Src/pwm_curr_fdbk.c **** }
 902              		.loc 1 488 3 view .LVU321
 903              		.loc 1 489 1 is_stmt 0 view .LVU322
 904 003c 02B0     		add	sp, sp, #8
 905              	.LCFI9:
 906              		.cfi_remember_state
 907              		.cfi_def_cfa_offset 8
 908              		@ sp needed
 909 003e 10BD     		pop	{r4, pc}
 910              	.LVL78:
 911              	.L60:
 912              	.LCFI10:
 913              		.cfi_restore_state
 478:Src/pwm_curr_fdbk.c ****       }
 914              		.loc 1 478 16 view .LVU323
 915 0040 0846     		mov	r0, r1
 916              	.LVL79:
 484:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 917              		.loc 1 484 5 is_stmt 1 view .LVU324
 488:Src/pwm_curr_fdbk.c **** }
 918              		.loc 1 488 3 view .LVU325
 919              		.loc 1 489 1 is_stmt 0 view .LVU326
 920 0042 02B0     		add	sp, sp, #8
 921              	.LCFI11:
 922              		.cfi_def_cfa_offset 8
 923              		@ sp needed
 924 0044 10BD     		pop	{r4, pc}
 925              		.loc 1 489 1 view .LVU327
 926              		.cfi_endproc
 927              	.LFE1097:
 929 0046 00BF     		.section	.text.PWMC_CalcPhaseCurrentsEst,"ax",%progbits
 930              		.align	1
 931              		.p2align 2,,3
 932              		.global	PWMC_CalcPhaseCurrentsEst
 933              		.syntax unified
 934              		.thumb
 935              		.thumb_func
 937              	PWMC_CalcPhaseCurrentsEst:
 938              	.LVL80:
 939              	.LFB1099:
 490:Src/pwm_curr_fdbk.c **** 
 491:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 492:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 493:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 494:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 495:Src/pwm_curr_fdbk.c **** __attribute__( ( section ( ".ccmram" ) ) )
 496:Src/pwm_curr_fdbk.c **** #endif
 497:Src/pwm_curr_fdbk.c **** #endif
 498:Src/pwm_curr_fdbk.c **** /**
 499:Src/pwm_curr_fdbk.c ****   * @brief  Sets a low pass filter.
 500:Src/pwm_curr_fdbk.c ****   *
 501:Src/pwm_curr_fdbk.c ****   * This function is called for setting low pass filter on Iq and Id, before getting
 502:Src/pwm_curr_fdbk.c ****   * transformed in Ia and Ib by the Reverse Park function.
 503:Src/pwm_curr_fdbk.c ****   *
 504:Src/pwm_curr_fdbk.c ****   * @param in: Value needing to be passed through the filter (Iq and Id).
 505:Src/pwm_curr_fdbk.c ****   * @param out_buf: LPF buffer.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 30


 506:Src/pwm_curr_fdbk.c ****   * @param t: Low pass filter constant.
 507:Src/pwm_curr_fdbk.c ****   * @retval New value after the low pass filter.
 508:Src/pwm_curr_fdbk.c ****   */
 509:Src/pwm_curr_fdbk.c **** static inline int32_t PWMC_LowPassFilter(int32_t in, int32_t *out_buf, int32_t t)
 510:Src/pwm_curr_fdbk.c **** {
 511:Src/pwm_curr_fdbk.c ****   int32_t x;
 512:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 513:Src/pwm_curr_fdbk.c ****   if (MC_NULL == out_buf)
 514:Src/pwm_curr_fdbk.c ****   {
 515:Src/pwm_curr_fdbk.c ****     x = 0;
 516:Src/pwm_curr_fdbk.c ****   }
 517:Src/pwm_curr_fdbk.c ****   else
 518:Src/pwm_curr_fdbk.c ****   {
 519:Src/pwm_curr_fdbk.c **** #endif
 520:Src/pwm_curr_fdbk.c **** #ifndef FULL_MISRA_C_COMPLIANCY_PWM_CURR
 521:Src/pwm_curr_fdbk.c ****     //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 522:Src/pwm_curr_fdbk.c ****     *out_buf = (*out_buf) + ((in - ((*out_buf) >> 15)) * t);
 523:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 524:Src/pwm_curr_fdbk.c **** #else
 525:Src/pwm_curr_fdbk.c ****     *out_buf = (*out_buf) + ((in - ((*out_buf) / 32768)) * t);
 526:Src/pwm_curr_fdbk.c ****     x = (*out_buf) / 32768;
 527:Src/pwm_curr_fdbk.c **** 
 528:Src/pwm_curr_fdbk.c **** #endif
 529:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 530:Src/pwm_curr_fdbk.c ****   }
 531:Src/pwm_curr_fdbk.c **** #endif
 532:Src/pwm_curr_fdbk.c ****   return (x);
 533:Src/pwm_curr_fdbk.c **** }
 534:Src/pwm_curr_fdbk.c **** 
 535:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 536:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 537:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 538:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 539:Src/pwm_curr_fdbk.c **** __attribute__( ( section ( ".ccmram" ) ) )
 540:Src/pwm_curr_fdbk.c **** #endif
 541:Src/pwm_curr_fdbk.c **** #endif
 542:Src/pwm_curr_fdbk.c **** /**
 543:Src/pwm_curr_fdbk.c ****   * @brief  Converts input currents components Iqd into estimated
 544:Src/pwm_curr_fdbk.c ****   *         currents Ia, Ib and Ic.
 545:Src/pwm_curr_fdbk.c ****   *
 546:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 547:Src/pwm_curr_fdbk.c ****   * @param  Iqd: Structure that will receive Iq and Id currents.
 548:Src/pwm_curr_fdbk.c ****   * @param  hElAngledpp: Electrical angle.
 549:Src/pwm_curr_fdbk.c ****   */
 550:Src/pwm_curr_fdbk.c **** void PWMC_CalcPhaseCurrentsEst(PWMC_Handle_t *pHandle, qd_t Iqd, int16_t hElAngledpp)
 551:Src/pwm_curr_fdbk.c **** {
 940              		.loc 1 551 1 is_stmt 1 view -0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 16
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 552:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 553:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 554:Src/pwm_curr_fdbk.c ****   {
 555:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 556:Src/pwm_curr_fdbk.c ****   }
 557:Src/pwm_curr_fdbk.c ****   else
 558:Src/pwm_curr_fdbk.c ****   {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 31


 559:Src/pwm_curr_fdbk.c **** #endif
 560:Src/pwm_curr_fdbk.c ****     qd_t idq_ave;
 944              		.loc 1 560 5 view .LVU329
 561:Src/pwm_curr_fdbk.c ****     alphabeta_t ialpha_beta;
 945              		.loc 1 561 5 view .LVU330
 562:Src/pwm_curr_fdbk.c ****     int32_t temp1, temp2;
 946              		.loc 1 562 5 view .LVU331
 563:Src/pwm_curr_fdbk.c **** 
 564:Src/pwm_curr_fdbk.c ****     idq_ave.q = (int16_t)PWMC_LowPassFilter(Iqd.q, &(pHandle->LPFIqBuf), pHandle->LPFIqd_const);
 947              		.loc 1 564 5 view .LVU332
 551:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 948              		.loc 1 551 1 is_stmt 0 view .LVU333
 949 0000 10B5     		push	{r4, lr}
 950              	.LCFI12:
 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 4, -8
 953              		.cfi_offset 14, -4
 954 0002 84B0     		sub	sp, sp, #16
 955              	.LCFI13:
 956              		.cfi_def_cfa_offset 24
 551:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 957              		.loc 1 551 1 view .LVU334
 958 0004 0446     		mov	r4, r0
 959 0006 0191     		str	r1, [sp, #4]
 960 0008 8E46     		mov	lr, r1
 961              		.loc 1 564 26 view .LVU335
 962 000a 08B2     		sxth	r0, r1
 963              	.LVL81:
 565:Src/pwm_curr_fdbk.c ****     idq_ave.d = (int16_t)PWMC_LowPassFilter(Iqd.d, &(pHandle->LPFIdBuf), pHandle->LPFIqd_const);
 566:Src/pwm_curr_fdbk.c **** 
 567:Src/pwm_curr_fdbk.c ****     ialpha_beta = MCM_Rev_Park(idq_ave, hElAngledpp);
 964              		.loc 1 567 19 view .LVU336
 965 000c 1146     		mov	r1, r2
 966              	.LBB18:
 967              	.LBB19:
 522:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 968              		.loc 1 522 17 view .LVU337
 969 000e D4E90D32 		ldrd	r3, r2, [r4, #52]
 970              	.LVL82:
 522:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 971              		.loc 1 522 17 view .LVU338
 972              	.LBE19:
 973              	.LBE18:
 564:Src/pwm_curr_fdbk.c ****     idq_ave.d = (int16_t)PWMC_LowPassFilter(Iqd.d, &(pHandle->LPFIdBuf), pHandle->LPFIqd_const);
 974              		.loc 1 564 26 view .LVU339
 975 0012 B4F96EC0 		ldrsh	ip, [r4, #110]
 976              	.LVL83:
 977              	.LBB21:
 978              	.LBI18:
 509:Src/pwm_curr_fdbk.c **** {
 979              		.loc 1 509 23 is_stmt 1 view .LVU340
 980              	.LBB20:
 511:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 981              		.loc 1 511 3 view .LVU341
 522:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 982              		.loc 1 522 5 view .LVU342
 522:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 32


 983              		.loc 1 522 34 is_stmt 0 view .LVU343
 984 0016 A0EBE330 		sub	r0, r0, r3, asr #15
 522:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 985              		.loc 1 522 27 view .LVU344
 986 001a 0CFB0033 		mla	r3, ip, r0, r3
 522:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 987              		.loc 1 522 14 view .LVU345
 988 001e 6363     		str	r3, [r4, #52]
 523:Src/pwm_curr_fdbk.c **** #else
 989              		.loc 1 523 5 is_stmt 1 view .LVU346
 990              	.LVL84:
 532:Src/pwm_curr_fdbk.c **** }
 991              		.loc 1 532 3 view .LVU347
 523:Src/pwm_curr_fdbk.c **** #else
 992              		.loc 1 523 7 is_stmt 0 view .LVU348
 993 0020 DB13     		asrs	r3, r3, #15
 994              	.LBE20:
 995              	.LBE21:
 564:Src/pwm_curr_fdbk.c ****     idq_ave.d = (int16_t)PWMC_LowPassFilter(Iqd.d, &(pHandle->LPFIdBuf), pHandle->LPFIqd_const);
 996              		.loc 1 564 17 view .LVU349
 997 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 565:Src/pwm_curr_fdbk.c **** 
 998              		.loc 1 565 5 is_stmt 1 view .LVU350
 999              	.LVL85:
 1000              	.LBB22:
 1001              	.LBI22:
 509:Src/pwm_curr_fdbk.c **** {
 1002              		.loc 1 509 23 view .LVU351
 1003              	.LBB23:
 511:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 1004              		.loc 1 511 3 view .LVU352
 522:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 1005              		.loc 1 522 5 view .LVU353
 522:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 1006              		.loc 1 522 48 is_stmt 0 view .LVU354
 1007 0026 D313     		asrs	r3, r2, #15
 522:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 1008              		.loc 1 522 34 view .LVU355
 1009 0028 C3EB2E43 		rsb	r3, r3, lr, asr #16
 522:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 1010              		.loc 1 522 27 view .LVU356
 1011 002c 0CFB0323 		mla	r3, ip, r3, r2
 523:Src/pwm_curr_fdbk.c **** #else
 1012              		.loc 1 523 7 view .LVU357
 1013 0030 DA13     		asrs	r2, r3, #15
 1014              	.LBE23:
 1015              	.LBE22:
 565:Src/pwm_curr_fdbk.c **** 
 1016              		.loc 1 565 17 view .LVU358
 1017 0032 ADF80A20 		strh	r2, [sp, #10]	@ movhi
 1018              	.LBB26:
 1019              	.LBB24:
 522:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 1020              		.loc 1 522 14 view .LVU359
 1021 0036 A363     		str	r3, [r4, #56]
 1022              	.LBE24:
 1023              	.LBE26:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 33


 1024              		.loc 1 567 19 view .LVU360
 1025 0038 0298     		ldr	r0, [sp, #8]
 1026              	.LBB27:
 1027              	.LBB25:
 523:Src/pwm_curr_fdbk.c **** #else
 1028              		.loc 1 523 5 is_stmt 1 view .LVU361
 1029              	.LVL86:
 532:Src/pwm_curr_fdbk.c **** }
 1030              		.loc 1 532 3 view .LVU362
 532:Src/pwm_curr_fdbk.c **** }
 1031              		.loc 1 532 3 is_stmt 0 view .LVU363
 1032              	.LBE25:
 1033              	.LBE27:
 1034              		.loc 1 567 5 is_stmt 1 view .LVU364
 1035              		.loc 1 567 19 is_stmt 0 view .LVU365
 1036 003a FFF7FEFF 		bl	MCM_Rev_Park
 1037              	.LVL87:
 1038 003e 0FFA80FC 		sxth	ip, r0
 1039              	.LVL88:
 568:Src/pwm_curr_fdbk.c **** 
 569:Src/pwm_curr_fdbk.c ****     /* Reverse Clarke */
 570:Src/pwm_curr_fdbk.c **** 
 571:Src/pwm_curr_fdbk.c ****     /*Ia*/
 572:Src/pwm_curr_fdbk.c ****     pHandle->IaEst = ialpha_beta.alpha;
 1040              		.loc 1 572 5 is_stmt 1 view .LVU366
 573:Src/pwm_curr_fdbk.c **** 
 574:Src/pwm_curr_fdbk.c ****     temp1 = - ialpha_beta.alpha;
 1041              		.loc 1 574 11 is_stmt 0 view .LVU367
 1042 0042 CCF10002 		rsb	r2, ip, #0
 575:Src/pwm_curr_fdbk.c **** #ifndef FULL_MISRA_C_COMPLIANCY_PWM_CURR
 576:Src/pwm_curr_fdbk.c ****     //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 577:Src/pwm_curr_fdbk.c ****     temp2 = (int32_t)(ialpha_beta.beta) * ((int32_t)SQRT3FACTOR >> 15);
 578:Src/pwm_curr_fdbk.c **** #else
 579:Src/pwm_curr_fdbk.c ****     temp2 = (int32_t)(ialpha_beta.beta) * (int32_t)SQRT3FACTOR / 32768;
 580:Src/pwm_curr_fdbk.c **** #endif
 581:Src/pwm_curr_fdbk.c **** 
 582:Src/pwm_curr_fdbk.c ****     /* Ib */
 583:Src/pwm_curr_fdbk.c ****     pHandle->IbEst = (int16_t)(temp1 - temp2)/2;
 1043              		.loc 1 583 38 view .LVU368
 1044 0046 92B2     		uxth	r2, r2
 584:Src/pwm_curr_fdbk.c **** 
 585:Src/pwm_curr_fdbk.c ****     /* Ic */
 586:Src/pwm_curr_fdbk.c ****     pHandle->IcEst = (int16_t)(temp1 + temp2)/2;
 1045              		.loc 1 586 38 view .LVU369
 1046 0048 02EB1043 		add	r3, r2, r0, lsr #16
 583:Src/pwm_curr_fdbk.c **** 
 1047              		.loc 1 583 38 view .LVU370
 1048 004c A2EB1041 		sub	r1, r2, r0, lsr #16
 1049              		.loc 1 586 20 view .LVU371
 1050 0050 C3F3C030 		ubfx	r0, r3, #15, #1
 1051 0054 00FA83F3 		sxtah	r3, r0, r3
 1052 0058 5B10     		asrs	r3, r3, #1
 1053 005a A4F86C30 		strh	r3, [r4, #108]	@ movhi
 583:Src/pwm_curr_fdbk.c **** 
 1054              		.loc 1 583 20 view .LVU372
 1055 005e C1F3C033 		ubfx	r3, r1, #15, #1
 1056 0062 03FA81F1 		sxtah	r1, r3, r1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 34


 1057 0066 4910     		asrs	r1, r1, #1
 572:Src/pwm_curr_fdbk.c **** 
 1058              		.loc 1 572 20 view .LVU373
 1059 0068 A4F868C0 		strh	ip, [r4, #104]	@ movhi
 574:Src/pwm_curr_fdbk.c **** #ifndef FULL_MISRA_C_COMPLIANCY_PWM_CURR
 1060              		.loc 1 574 5 is_stmt 1 view .LVU374
 1061              	.LVL89:
 577:Src/pwm_curr_fdbk.c **** #else
 1062              		.loc 1 577 5 view .LVU375
 583:Src/pwm_curr_fdbk.c **** 
 1063              		.loc 1 583 5 view .LVU376
 583:Src/pwm_curr_fdbk.c **** 
 1064              		.loc 1 583 20 is_stmt 0 view .LVU377
 1065 006c A4F86A10 		strh	r1, [r4, #106]	@ movhi
 1066              		.loc 1 586 5 is_stmt 1 view .LVU378
 1067              	.LVL90:
 587:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 588:Src/pwm_curr_fdbk.c ****   }
 589:Src/pwm_curr_fdbk.c **** #endif
 590:Src/pwm_curr_fdbk.c **** }
 1068              		.loc 1 590 1 is_stmt 0 view .LVU379
 1069 0070 04B0     		add	sp, sp, #16
 1070              	.LCFI14:
 1071              		.cfi_def_cfa_offset 8
 1072              		@ sp needed
 1073 0072 10BD     		pop	{r4, pc}
 1074              		.loc 1 590 1 view .LVU380
 1075              		.cfi_endproc
 1076              	.LFE1099:
 1078              		.section	.text.PWMC_TurnOnLowSides,"ax",%progbits
 1079              		.align	1
 1080              		.p2align 2,,3
 1081              		.weak	PWMC_TurnOnLowSides
 1082              		.syntax unified
 1083              		.thumb
 1084              		.thumb_func
 1086              	PWMC_TurnOnLowSides:
 1087              	.LVL91:
 1088              	.LFB1100:
 591:Src/pwm_curr_fdbk.c **** 
 592:Src/pwm_curr_fdbk.c **** /**
 593:Src/pwm_curr_fdbk.c ****   * @brief  Switches power stage Low Sides transistors on.
 594:Src/pwm_curr_fdbk.c ****   *
 595:Src/pwm_curr_fdbk.c ****   * This function is meant for charging boot capacitors of the driving
 596:Src/pwm_curr_fdbk.c ****   * section. It has to be called on each motor start-up when using high
 597:Src/pwm_curr_fdbk.c ****   * voltage drivers.
 598:Src/pwm_curr_fdbk.c ****   *
 599:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 600:Src/pwm_curr_fdbk.c ****   * @param  ticks: Timer ticks value to be applied.
 601:Src/pwm_curr_fdbk.c ****   *                Min value: 0 (low sides ON)
 602:Src/pwm_curr_fdbk.c ****   *                Max value: PWM_PERIOD_CYCLES/2 (low sides OFF)
 603:Src/pwm_curr_fdbk.c ****   */
 604:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 605:Src/pwm_curr_fdbk.c **** __weak void PWMC_TurnOnLowSides(PWMC_Handle_t *pHandle, uint32_t ticks)
 606:Src/pwm_curr_fdbk.c **** {
 1089              		.loc 1 606 1 is_stmt 1 view -0
 1090              		.cfi_startproc
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 35


 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093              		@ link register save eliminated.
 607:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 608:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 609:Src/pwm_curr_fdbk.c ****   {
 610:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 611:Src/pwm_curr_fdbk.c ****   }
 612:Src/pwm_curr_fdbk.c ****   else
 613:Src/pwm_curr_fdbk.c ****   {
 614:Src/pwm_curr_fdbk.c **** #endif
 615:Src/pwm_curr_fdbk.c ****     pHandle->pFctTurnOnLowSides(pHandle, ticks);
 1094              		.loc 1 615 5 view .LVU382
 1095 0000 0369     		ldr	r3, [r0, #16]
 1096 0002 1847     		bx	r3	@ indirect register sibling call
 1097              	.LVL92:
 1098              		.loc 1 615 5 is_stmt 0 view .LVU383
 1099              		.cfi_endproc
 1100              	.LFE1100:
 1102              		.section	.text.PWMC_OCP_Handler,"ax",%progbits
 1103              		.align	1
 1104              		.p2align 2,,3
 1105              		.weak	PWMC_OCP_Handler
 1106              		.syntax unified
 1107              		.thumb
 1108              		.thumb_func
 1110              	PWMC_OCP_Handler:
 1111              	.LVL93:
 1112              	.LFB1101:
 616:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 617:Src/pwm_curr_fdbk.c ****   }
 618:Src/pwm_curr_fdbk.c **** #endif
 619:Src/pwm_curr_fdbk.c **** }
 620:Src/pwm_curr_fdbk.c **** 
 621:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 622:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 623:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 624:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 625:Src/pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
 626:Src/pwm_curr_fdbk.c **** #endif
 627:Src/pwm_curr_fdbk.c **** #endif
 628:Src/pwm_curr_fdbk.c **** /*
 629:Src/pwm_curr_fdbk.c ****   * @brief  Manages HW overcurrent protection.
 630:Src/pwm_curr_fdbk.c ****   *
 631:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 632:Src/pwm_curr_fdbk.c ****   */
 633:Src/pwm_curr_fdbk.c **** __weak void *PWMC_OCP_Handler(PWMC_Handle_t *pHandle)
 634:Src/pwm_curr_fdbk.c **** {
 1113              		.loc 1 634 1 is_stmt 1 view -0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 0
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 1117              		@ link register save eliminated.
 635:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 1118              		.loc 1 635 3 view .LVU385
 636:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 637:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 36


 638:Src/pwm_curr_fdbk.c ****   {
 639:Src/pwm_curr_fdbk.c ****     tempPointer = MC_NULL;
 640:Src/pwm_curr_fdbk.c ****   }
 641:Src/pwm_curr_fdbk.c ****   else
 642:Src/pwm_curr_fdbk.c ****   {
 643:Src/pwm_curr_fdbk.c **** #endif
 644:Src/pwm_curr_fdbk.c ****     if (false == pHandle->BrakeActionLock)
 1119              		.loc 1 644 5 view .LVU386
 1120              		.loc 1 644 8 is_stmt 0 view .LVU387
 1121 0000 90F88530 		ldrb	r3, [r0, #133]	@ zero_extendqisi2
 1122 0004 1BB9     		cbnz	r3, .L69
 645:Src/pwm_curr_fdbk.c ****     {
 646:Src/pwm_curr_fdbk.c ****       if (ES_GPIO == pHandle->LowSideOutputs)
 1123              		.loc 1 646 7 is_stmt 1 view .LVU388
 1124              		.loc 1 646 10 is_stmt 0 view .LVU389
 1125 0006 90F87D30 		ldrb	r3, [r0, #125]	@ zero_extendqisi2
 1126 000a 022B     		cmp	r3, #2
 1127 000c 04D0     		beq	.L72
 1128              	.L69:
 647:Src/pwm_curr_fdbk.c ****       {
 648:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_u_port, pHandle->pwm_en_u_pin);
 649:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 650:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
 651:Src/pwm_curr_fdbk.c ****       }
 652:Src/pwm_curr_fdbk.c ****       else
 653:Src/pwm_curr_fdbk.c ****       {
 654:Src/pwm_curr_fdbk.c ****         /* Nothing to do */
 655:Src/pwm_curr_fdbk.c ****       }
 656:Src/pwm_curr_fdbk.c ****     }
 657:Src/pwm_curr_fdbk.c ****     else
 658:Src/pwm_curr_fdbk.c ****     {
 659:Src/pwm_curr_fdbk.c ****       /* Nothing to do */
 660:Src/pwm_curr_fdbk.c ****     }
 1129              		.loc 1 660 5 is_stmt 1 view .LVU390
 661:Src/pwm_curr_fdbk.c ****     pHandle->OverCurrentFlag = true;
 1130              		.loc 1 661 5 view .LVU391
 1131              		.loc 1 661 30 is_stmt 0 view .LVU392
 1132 000e 0123     		movs	r3, #1
 1133 0010 80F88230 		strb	r3, [r0, #130]
 662:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1134              		.loc 1 662 5 is_stmt 1 view .LVU393
 1135              	.LVL94:
 663:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 664:Src/pwm_curr_fdbk.c ****   }
 665:Src/pwm_curr_fdbk.c **** #endif
 666:Src/pwm_curr_fdbk.c ****   return (tempPointer);
 1136              		.loc 1 666 3 view .LVU394
 667:Src/pwm_curr_fdbk.c **** }
 1137              		.loc 1 667 1 is_stmt 0 view .LVU395
 1138 0014 7A30     		adds	r0, r0, #122
 1139              	.LVL95:
 1140              		.loc 1 667 1 view .LVU396
 1141 0016 7047     		bx	lr
 1142              	.LVL96:
 1143              	.L72:
 648:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 1144              		.loc 1 648 9 is_stmt 1 view .LVU397
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 37


 649:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
 1145              		.loc 1 649 9 is_stmt 0 view .LVU398
 1146 0018 D0E90F21 		ldrd	r2, r1, [r0, #60]
 634:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 1147              		.loc 1 634 1 view .LVU399
 1148 001c 10B4     		push	{r4}
 1149              	.LCFI15:
 1150              		.cfi_def_cfa_offset 4
 1151              		.cfi_offset 4, -4
 650:Src/pwm_curr_fdbk.c ****       }
 1152              		.loc 1 650 9 view .LVU400
 1153 001e 436C     		ldr	r3, [r0, #68]
 648:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 1154              		.loc 1 648 9 view .LVU401
 1155 0020 B0F84840 		ldrh	r4, [r0, #72]
 1156              	.LVL97:
 1157              	.LBB28:
 1158              	.LBI28:
 1159              		.file 2 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @file    stm32l4xx_ll_gpio.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * All rights reserved.
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * in the root directory of this software component.
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   ******************************************************************************
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #ifndef STM32L4xx_LL_GPIO_H
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define STM32L4xx_LL_GPIO_H
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #ifdef __cplusplus
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** extern "C" {
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #endif
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #include "stm32l4xx.h"
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @addtogroup STM32L4xx_LL_Driver
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 38


  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** MISRA C:2012 deviation rule has been granted for following rules:
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * which may be out of array bounds [..,UNKNOWN] in following APIs:
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_0_7
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_0_7
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_8_15
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_8_15
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** typedef struct
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 39


  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS0 /*!< Select pin 0 */
 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS1 /*!< Select pin 1 */
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS2 /*!< Select pin 2 */
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS3 /*!< Select pin 3 */
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS4 /*!< Select pin 4 */
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS5 /*!< Select pin 5 */
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS6 /*!< Select pin 6 */
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS7 /*!< Select pin 7 */
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS8 /*!< Select pin 8 */
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS9 /*!< Select pin 9 */
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS15 /*!< Select pin 15 */
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS0 | GPIO_BSRR_BS1  | GPIO_BSRR_BS2  | \
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS3  | GPIO_BSRR_BS4  | GPIO_BSRR_BS5  | \
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS6  | GPIO_BSRR_BS7  | GPIO_BSRR_BS8  | \
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS9  | GPIO_BSRR_BS10 | GPIO_BSRR_BS11 | \
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS12 | GPIO_BSRR_BS13 | GPIO_BSRR_BS14 | \
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS15) /*!< Select all pins */
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 40


 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT0 /*!< Select open-drain as output type */
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEED0_0 /*!< Select I/O medium output spe
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEED0_1 /*!< Select I/O fast output speed
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDR_OSPEED0   /*!< Select I/O high output speed
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */
 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 41


 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Register value
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 42


 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(P
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER,
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 43


 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 44


 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) >> POSITION_VAL(Pin));
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U)),
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 2U)));
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 45


 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR,
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(P
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 46


 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(P
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR,
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 47


 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin) * 4U)));
 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 48


 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 49


 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #if defined(GPIO_ASCR_ASC0)
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Connect analog switch to ADC input of several pins for a dedicated port.
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   This bit must be set prior to the ADC conversion.
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         Only the IO which connected to the ADC input are effective.
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         Other IO must be kept reset value
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll ASCR         ASCy          LL_GPIO_EnablePinAnalogControl
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_EnablePinAnalogControl(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   SET_BIT(GPIOx->ASCR, PinMask);
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 50


 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Disconnect analog switch to ADC input of several pins for a dedicated port.
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll ASCR         ASCy          LL_GPIO_DisablePinAnalogControl
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_DisablePinAnalogControl(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   CLEAR_BIT(GPIOx->ASCR, PinMask);
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #endif /* GPIO_ASCR_ASC0 */
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         next reset.
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         (control and alternate function registers).
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 51


 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   __IO uint32_t temp;
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, PinMask) == (PinMask)) ? 1UL : 0UL);
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK)) ? 1UL : 0UL);
 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 52


 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Input data register value of port
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->IDR));
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->IDR, PinMask) == (PinMask)) ? 1UL : 0UL);
 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Write output data register for the port.
 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_WriteOutputPort
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PortValue Level value for each pin of the port
 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_WriteOutputPort(GPIO_TypeDef *GPIOx, uint32_t PortValue)
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->ODR, PortValue);
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return full output data register value for a dedicated port.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 53


 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_ReadOutputPort
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Output data register value of port
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadOutputPort(GPIO_TypeDef *GPIOx)
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->ODR));
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_IsOutputPinSet
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsOutputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->ODR, PinMask) == (PinMask)) ? 1UL : 0UL);
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Set several pins to high level on dedicated gpio port.
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll BSRR         BSy           LL_GPIO_SetOutputPin
 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 54


 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->BSRR, PinMask);
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Set several pins to low level on dedicated gpio port.
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll BRR          BRy           LL_GPIO_ResetOutputPin
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 1160              		.loc 2 985 22 is_stmt 1 view .LVU402
 1161              	.LBB29:
 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->BRR, PinMask);
 1162              		.loc 2 987 3 view .LVU403
 1163 0024 9462     		str	r4, [r2, #40]
 1164              	.LVL98:
 1165              		.loc 2 987 3 is_stmt 0 view .LVU404
 1166              	.LBE29:
 1167              	.LBE28:
 649:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
 1168              		.loc 1 649 9 is_stmt 1 view .LVU405
 1169 0026 B0F84A40 		ldrh	r4, [r0, #74]
 1170              	.LVL99:
 1171              	.LBB30:
 1172              	.LBI30:
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 1173              		.loc 2 985 22 view .LVU406
 1174              	.LBB31:
 1175              		.loc 2 987 3 view .LVU407
 1176              	.LBE31:
 1177              	.LBE30:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 55


 650:Src/pwm_curr_fdbk.c ****       }
 1178              		.loc 1 650 9 is_stmt 0 view .LVU408
 1179 002a B0F84C20 		ldrh	r2, [r0, #76]
 1180              	.LBB33:
 1181              	.LBB32:
 1182              		.loc 2 987 3 view .LVU409
 1183 002e 8C62     		str	r4, [r1, #40]
 1184              	.LVL100:
 1185              		.loc 2 987 3 view .LVU410
 1186              	.LBE32:
 1187              	.LBE33:
 650:Src/pwm_curr_fdbk.c ****       }
 1188              		.loc 1 650 9 is_stmt 1 view .LVU411
 1189              	.LBB34:
 1190              	.LBI34:
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 1191              		.loc 2 985 22 view .LVU412
 1192              	.LBB35:
 1193              		.loc 2 987 3 view .LVU413
 1194              		.loc 2 987 3 is_stmt 0 view .LVU414
 1195              	.LBE35:
 1196              	.LBE34:
 660:Src/pwm_curr_fdbk.c ****     pHandle->OverCurrentFlag = true;
 1197              		.loc 1 660 5 is_stmt 1 view .LVU415
 661:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1198              		.loc 1 661 5 view .LVU416
 1199              	.LBB37:
 1200              	.LBB36:
 1201              		.loc 2 987 3 is_stmt 0 view .LVU417
 1202 0030 9A62     		str	r2, [r3, #40]
 1203              	.LBE36:
 1204              	.LBE37:
 661:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1205              		.loc 1 661 30 view .LVU418
 1206 0032 0123     		movs	r3, #1
 1207 0034 80F88230 		strb	r3, [r0, #130]
 662:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 1208              		.loc 1 662 5 is_stmt 1 view .LVU419
 1209              	.LVL101:
 666:Src/pwm_curr_fdbk.c **** }
 1210              		.loc 1 666 3 view .LVU420
 1211              		.loc 1 667 1 is_stmt 0 view .LVU421
 1212 0038 5DF8044B 		ldr	r4, [sp], #4
 1213              	.LCFI16:
 1214              		.cfi_restore 4
 1215              		.cfi_def_cfa_offset 0
 1216 003c 7A30     		adds	r0, r0, #122
 1217              	.LVL102:
 1218              		.loc 1 667 1 view .LVU422
 1219 003e 7047     		bx	lr
 1220              		.cfi_endproc
 1221              	.LFE1101:
 1223              		.section	.text.PWMC_DP_Handler,"ax",%progbits
 1224              		.align	1
 1225              		.p2align 2,,3
 1226              		.weak	PWMC_DP_Handler
 1227              		.syntax unified
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 56


 1228              		.thumb
 1229              		.thumb_func
 1231              	PWMC_DP_Handler:
 1232              	.LVL103:
 1233              	.LFB1102:
 668:Src/pwm_curr_fdbk.c **** 
 669:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 670:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 671:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 672:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 673:Src/pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
 674:Src/pwm_curr_fdbk.c **** #endif
 675:Src/pwm_curr_fdbk.c **** #endif
 676:Src/pwm_curr_fdbk.c **** /*
 677:Src/pwm_curr_fdbk.c ****   * @brief  manages driver protection.
 678:Src/pwm_curr_fdbk.c ****   *
 679:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 680:Src/pwm_curr_fdbk.c ****   */
 681:Src/pwm_curr_fdbk.c **** __weak void *PWMC_DP_Handler(PWMC_Handle_t *pHandle)
 682:Src/pwm_curr_fdbk.c **** {
 1234              		.loc 1 682 1 is_stmt 1 view -0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 0
 1237              		@ frame_needed = 0, uses_anonymous_args = 0
 1238              		@ link register save eliminated.
 683:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 1239              		.loc 1 683 3 view .LVU424
 684:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 685:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 686:Src/pwm_curr_fdbk.c ****   {
 687:Src/pwm_curr_fdbk.c ****     tempPointer = MC_NULL;
 688:Src/pwm_curr_fdbk.c ****   }
 689:Src/pwm_curr_fdbk.c ****   else
 690:Src/pwm_curr_fdbk.c ****   {
 691:Src/pwm_curr_fdbk.c **** #endif
 692:Src/pwm_curr_fdbk.c ****     if (false == pHandle->BrakeActionLock)
 1240              		.loc 1 692 5 view .LVU425
 1241              		.loc 1 692 8 is_stmt 0 view .LVU426
 1242 0000 90F88530 		ldrb	r3, [r0, #133]	@ zero_extendqisi2
 1243 0004 1BB9     		cbnz	r3, .L76
 693:Src/pwm_curr_fdbk.c ****     {
 694:Src/pwm_curr_fdbk.c ****       if (ES_GPIO == pHandle->LowSideOutputs)
 1244              		.loc 1 694 7 is_stmt 1 view .LVU427
 1245              		.loc 1 694 10 is_stmt 0 view .LVU428
 1246 0006 90F87D30 		ldrb	r3, [r0, #125]	@ zero_extendqisi2
 1247 000a 022B     		cmp	r3, #2
 1248 000c 04D0     		beq	.L79
 1249              	.L76:
 695:Src/pwm_curr_fdbk.c ****       {
 696:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_u_port, pHandle->pwm_en_u_pin);
 697:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 698:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
 699:Src/pwm_curr_fdbk.c ****       }
 700:Src/pwm_curr_fdbk.c ****       else
 701:Src/pwm_curr_fdbk.c ****       {
 702:Src/pwm_curr_fdbk.c ****         /* Nothing to do */
 703:Src/pwm_curr_fdbk.c ****       }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 57


 704:Src/pwm_curr_fdbk.c ****     }
 705:Src/pwm_curr_fdbk.c ****     else
 706:Src/pwm_curr_fdbk.c ****     {
 707:Src/pwm_curr_fdbk.c ****       /* Nothing to do */
 708:Src/pwm_curr_fdbk.c ****     }
 1250              		.loc 1 708 5 is_stmt 1 view .LVU429
 709:Src/pwm_curr_fdbk.c ****     pHandle->driverProtectionFlag = true;
 1251              		.loc 1 709 5 view .LVU430
 1252              		.loc 1 709 35 is_stmt 0 view .LVU431
 1253 000e 0123     		movs	r3, #1
 1254 0010 80F88430 		strb	r3, [r0, #132]
 710:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1255              		.loc 1 710 5 is_stmt 1 view .LVU432
 1256              	.LVL104:
 711:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 712:Src/pwm_curr_fdbk.c ****   }
 713:Src/pwm_curr_fdbk.c **** #endif
 714:Src/pwm_curr_fdbk.c ****   return (tempPointer);
 1257              		.loc 1 714 3 view .LVU433
 715:Src/pwm_curr_fdbk.c **** }
 1258              		.loc 1 715 1 is_stmt 0 view .LVU434
 1259 0014 7A30     		adds	r0, r0, #122
 1260              	.LVL105:
 1261              		.loc 1 715 1 view .LVU435
 1262 0016 7047     		bx	lr
 1263              	.LVL106:
 1264              	.L79:
 696:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 1265              		.loc 1 696 9 is_stmt 1 view .LVU436
 697:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
 1266              		.loc 1 697 9 is_stmt 0 view .LVU437
 1267 0018 D0E90F21 		ldrd	r2, r1, [r0, #60]
 682:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 1268              		.loc 1 682 1 view .LVU438
 1269 001c 10B4     		push	{r4}
 1270              	.LCFI17:
 1271              		.cfi_def_cfa_offset 4
 1272              		.cfi_offset 4, -4
 698:Src/pwm_curr_fdbk.c ****       }
 1273              		.loc 1 698 9 view .LVU439
 1274 001e 436C     		ldr	r3, [r0, #68]
 696:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 1275              		.loc 1 696 9 view .LVU440
 1276 0020 B0F84840 		ldrh	r4, [r0, #72]
 1277              	.LVL107:
 1278              	.LBB38:
 1279              	.LBI38:
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 1280              		.loc 2 985 22 is_stmt 1 view .LVU441
 1281              	.LBB39:
 1282              		.loc 2 987 3 view .LVU442
 1283 0024 9462     		str	r4, [r2, #40]
 1284              	.LVL108:
 1285              		.loc 2 987 3 is_stmt 0 view .LVU443
 1286              	.LBE39:
 1287              	.LBE38:
 697:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 58


 1288              		.loc 1 697 9 is_stmt 1 view .LVU444
 1289 0026 B0F84A40 		ldrh	r4, [r0, #74]
 1290              	.LVL109:
 1291              	.LBB40:
 1292              	.LBI40:
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 1293              		.loc 2 985 22 view .LVU445
 1294              	.LBB41:
 1295              		.loc 2 987 3 view .LVU446
 1296              	.LBE41:
 1297              	.LBE40:
 698:Src/pwm_curr_fdbk.c ****       }
 1298              		.loc 1 698 9 is_stmt 0 view .LVU447
 1299 002a B0F84C20 		ldrh	r2, [r0, #76]
 1300              	.LBB43:
 1301              	.LBB42:
 1302              		.loc 2 987 3 view .LVU448
 1303 002e 8C62     		str	r4, [r1, #40]
 1304              	.LVL110:
 1305              		.loc 2 987 3 view .LVU449
 1306              	.LBE42:
 1307              	.LBE43:
 698:Src/pwm_curr_fdbk.c ****       }
 1308              		.loc 1 698 9 is_stmt 1 view .LVU450
 1309              	.LBB44:
 1310              	.LBI44:
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 1311              		.loc 2 985 22 view .LVU451
 1312              	.LBB45:
 1313              		.loc 2 987 3 view .LVU452
 1314              		.loc 2 987 3 is_stmt 0 view .LVU453
 1315              	.LBE45:
 1316              	.LBE44:
 708:Src/pwm_curr_fdbk.c ****     pHandle->driverProtectionFlag = true;
 1317              		.loc 1 708 5 is_stmt 1 view .LVU454
 709:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1318              		.loc 1 709 5 view .LVU455
 1319              	.LBB47:
 1320              	.LBB46:
 1321              		.loc 2 987 3 is_stmt 0 view .LVU456
 1322 0030 9A62     		str	r2, [r3, #40]
 1323              	.LBE46:
 1324              	.LBE47:
 709:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1325              		.loc 1 709 35 view .LVU457
 1326 0032 0123     		movs	r3, #1
 1327 0034 80F88430 		strb	r3, [r0, #132]
 710:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 1328              		.loc 1 710 5 is_stmt 1 view .LVU458
 1329              	.LVL111:
 714:Src/pwm_curr_fdbk.c **** }
 1330              		.loc 1 714 3 view .LVU459
 1331              		.loc 1 715 1 is_stmt 0 view .LVU460
 1332 0038 5DF8044B 		ldr	r4, [sp], #4
 1333              	.LCFI18:
 1334              		.cfi_restore 4
 1335              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 59


 1336 003c 7A30     		adds	r0, r0, #122
 1337              	.LVL112:
 1338              		.loc 1 715 1 view .LVU461
 1339 003e 7047     		bx	lr
 1340              		.cfi_endproc
 1341              	.LFE1102:
 1343              		.section	.text.PWMC_OVP_Handler,"ax",%progbits
 1344              		.align	1
 1345              		.p2align 2,,3
 1346              		.weak	PWMC_OVP_Handler
 1347              		.syntax unified
 1348              		.thumb
 1349              		.thumb_func
 1351              	PWMC_OVP_Handler:
 1352              	.LVL113:
 1353              	.LFB1103:
 716:Src/pwm_curr_fdbk.c **** 
 717:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 718:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 719:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 720:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 721:Src/pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
 722:Src/pwm_curr_fdbk.c **** #endif
 723:Src/pwm_curr_fdbk.c **** #endif
 724:Src/pwm_curr_fdbk.c **** /*
 725:Src/pwm_curr_fdbk.c ****   * @brief  Manages HW overvoltage protection.
 726:Src/pwm_curr_fdbk.c ****   *
 727:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 728:Src/pwm_curr_fdbk.c ****   *         TIMx: timer used for PWM generation
 729:Src/pwm_curr_fdbk.c ****   */
 730:Src/pwm_curr_fdbk.c **** __weak void *PWMC_OVP_Handler(PWMC_Handle_t *pHandle, TIM_TypeDef *TIMx)
 731:Src/pwm_curr_fdbk.c **** {
 1354              		.loc 1 731 1 is_stmt 1 view -0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 0
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
 1358              		@ link register save eliminated.
 732:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 1359              		.loc 1 732 3 view .LVU463
 733:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 734:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 735:Src/pwm_curr_fdbk.c ****   {
 736:Src/pwm_curr_fdbk.c ****     tempPointer = MC_NULL;
 737:Src/pwm_curr_fdbk.c ****   }
 738:Src/pwm_curr_fdbk.c ****   else
 739:Src/pwm_curr_fdbk.c ****   {
 740:Src/pwm_curr_fdbk.c **** #endif
 741:Src/pwm_curr_fdbk.c ****     TIMx->BDTR |= LL_TIM_OSSI_ENABLE;
 1360              		.loc 1 741 5 view .LVU464
 1361              		.loc 1 741 16 is_stmt 0 view .LVU465
 1362 0000 4A6C     		ldr	r2, [r1, #68]
 731:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 1363              		.loc 1 731 1 view .LVU466
 1364 0002 0346     		mov	r3, r0
 742:Src/pwm_curr_fdbk.c ****     pHandle->OverVoltageFlag = true;
 1365              		.loc 1 742 30 view .LVU467
 1366 0004 4FF0010C 		mov	ip, #1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 60


 741:Src/pwm_curr_fdbk.c ****     pHandle->OverVoltageFlag = true;
 1367              		.loc 1 741 16 view .LVU468
 1368 0008 42F48062 		orr	r2, r2, #1024
 1369 000c 4A64     		str	r2, [r1, #68]
 1370              		.loc 1 742 5 is_stmt 1 view .LVU469
 743:Src/pwm_curr_fdbk.c ****     pHandle->BrakeActionLock = true;
 744:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 745:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 746:Src/pwm_curr_fdbk.c ****   }
 747:Src/pwm_curr_fdbk.c **** #endif
 748:Src/pwm_curr_fdbk.c ****   return (tempPointer);
 749:Src/pwm_curr_fdbk.c **** }
 1371              		.loc 1 749 1 is_stmt 0 view .LVU470
 1372 000e 7A30     		adds	r0, r0, #122
 1373              	.LVL114:
 742:Src/pwm_curr_fdbk.c ****     pHandle->BrakeActionLock = true;
 1374              		.loc 1 742 30 view .LVU471
 1375 0010 83F883C0 		strb	ip, [r3, #131]
 743:Src/pwm_curr_fdbk.c ****     pHandle->BrakeActionLock = true;
 1376              		.loc 1 743 5 is_stmt 1 view .LVU472
 743:Src/pwm_curr_fdbk.c ****     pHandle->BrakeActionLock = true;
 1377              		.loc 1 743 30 is_stmt 0 view .LVU473
 1378 0014 83F885C0 		strb	ip, [r3, #133]
 744:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 1379              		.loc 1 744 5 is_stmt 1 view .LVU474
 1380              	.LVL115:
 748:Src/pwm_curr_fdbk.c **** }
 1381              		.loc 1 748 3 view .LVU475
 1382              		.loc 1 749 1 is_stmt 0 view .LVU476
 1383 0018 7047     		bx	lr
 1384              		.cfi_endproc
 1385              	.LFE1103:
 1387 001a 00BF     		.section	.text.PWMC_IsFaultOccurred,"ax",%progbits
 1388              		.align	1
 1389              		.p2align 2,,3
 1390              		.weak	PWMC_IsFaultOccurred
 1391              		.syntax unified
 1392              		.thumb
 1393              		.thumb_func
 1395              	PWMC_IsFaultOccurred:
 1396              	.LVL116:
 1397              	.LFB1104:
 750:Src/pwm_curr_fdbk.c **** 
 751:Src/pwm_curr_fdbk.c **** /*
 752:Src/pwm_curr_fdbk.c ****   * @brief  Checks if an overcurrent occurred since last call.
 753:Src/pwm_curr_fdbk.c ****   *
 754:Src/pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
 755:Src/pwm_curr_fdbk.c ****   * @retval uint16_t Returns #MC_OVER_CURR if an overcurrent has been
 756:Src/pwm_curr_fdbk.c ****   *                  detected since last method call, #MC_NO_FAULTS otherwise.
 757:Src/pwm_curr_fdbk.c ****   */
 758:Src/pwm_curr_fdbk.c **** __weak uint16_t PWMC_IsFaultOccurred(PWMC_Handle_t *pHandle)
 759:Src/pwm_curr_fdbk.c **** {
 1398              		.loc 1 759 1 is_stmt 1 view -0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 0
 1401              		@ frame_needed = 0, uses_anonymous_args = 0
 1402              		@ link register save eliminated.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 61


 760:Src/pwm_curr_fdbk.c ****   uint16_t retVal = MC_NO_FAULTS;
 1403              		.loc 1 760 3 view .LVU478
 761:Src/pwm_curr_fdbk.c **** 
 762:Src/pwm_curr_fdbk.c ****   if (true == pHandle->OverVoltageFlag)
 1404              		.loc 1 762 3 view .LVU479
 1405              		.loc 1 762 6 is_stmt 0 view .LVU480
 1406 0000 90F88330 		ldrb	r3, [r0, #131]	@ zero_extendqisi2
 1407 0004 B3B1     		cbz	r3, .L85
 763:Src/pwm_curr_fdbk.c ****   {
 764:Src/pwm_curr_fdbk.c ****     retVal = MC_OVER_VOLT;
 1408              		.loc 1 764 5 is_stmt 1 view .LVU481
 1409              	.LVL117:
 765:Src/pwm_curr_fdbk.c ****     pHandle->OverVoltageFlag = false;
 1410              		.loc 1 765 5 view .LVU482
 1411              		.loc 1 765 30 is_stmt 0 view .LVU483
 1412 0006 0023     		movs	r3, #0
 1413 0008 80F88330 		strb	r3, [r0, #131]
 1414 000c 4221     		movs	r1, #66
 764:Src/pwm_curr_fdbk.c ****     pHandle->OverVoltageFlag = false;
 1415              		.loc 1 764 12 view .LVU484
 1416 000e 0223     		movs	r3, #2
 1417              	.LVL118:
 1418              	.L82:
 766:Src/pwm_curr_fdbk.c ****   }
 767:Src/pwm_curr_fdbk.c ****   else
 768:Src/pwm_curr_fdbk.c ****   {
 769:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 770:Src/pwm_curr_fdbk.c ****   }
 1419              		.loc 1 770 3 is_stmt 1 view .LVU485
 771:Src/pwm_curr_fdbk.c **** 
 772:Src/pwm_curr_fdbk.c ****   if (true == pHandle->OverCurrentFlag)
 1420              		.loc 1 772 3 view .LVU486
 1421              		.loc 1 772 6 is_stmt 0 view .LVU487
 1422 0010 90F88220 		ldrb	r2, [r0, #130]	@ zero_extendqisi2
 1423 0014 1AB1     		cbz	r2, .L83
 773:Src/pwm_curr_fdbk.c ****   {
 774:Src/pwm_curr_fdbk.c ****     retVal |= MC_OVER_CURR;
 1424              		.loc 1 774 5 is_stmt 1 view .LVU488
 775:Src/pwm_curr_fdbk.c ****     pHandle->OverCurrentFlag = false;
 1425              		.loc 1 775 5 view .LVU489
 1426              		.loc 1 775 30 is_stmt 0 view .LVU490
 1427 0016 0023     		movs	r3, #0
 1428 0018 80F88230 		strb	r3, [r0, #130]
 1429              	.LVL119:
 774:Src/pwm_curr_fdbk.c ****     pHandle->OverCurrentFlag = false;
 1430              		.loc 1 774 12 view .LVU491
 1431 001c 0B46     		mov	r3, r1
 1432              	.LVL120:
 1433              	.L83:
 776:Src/pwm_curr_fdbk.c ****   }
 777:Src/pwm_curr_fdbk.c ****   else
 778:Src/pwm_curr_fdbk.c ****   {
 779:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 780:Src/pwm_curr_fdbk.c ****   }
 1434              		.loc 1 780 3 is_stmt 1 view .LVU492
 781:Src/pwm_curr_fdbk.c **** 
 782:Src/pwm_curr_fdbk.c ****   if (true == pHandle->driverProtectionFlag)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 62


 1435              		.loc 1 782 3 view .LVU493
 1436              		.loc 1 782 6 is_stmt 0 view .LVU494
 1437 001e 90F88420 		ldrb	r2, [r0, #132]	@ zero_extendqisi2
 1438 0022 2AB1     		cbz	r2, .L84
 783:Src/pwm_curr_fdbk.c ****   {
 784:Src/pwm_curr_fdbk.c ****     retVal |= MC_DP_FAULT;
 1439              		.loc 1 784 5 is_stmt 1 view .LVU495
 1440              		.loc 1 784 12 is_stmt 0 view .LVU496
 1441 0024 43F48063 		orr	r3, r3, #1024
 1442              	.LVL121:
 785:Src/pwm_curr_fdbk.c ****     pHandle->driverProtectionFlag = false;
 1443              		.loc 1 785 35 view .LVU497
 1444 0028 0022     		movs	r2, #0
 784:Src/pwm_curr_fdbk.c ****     pHandle->driverProtectionFlag = false;
 1445              		.loc 1 784 12 view .LVU498
 1446 002a 9BB2     		uxth	r3, r3
 1447              		.loc 1 785 5 is_stmt 1 view .LVU499
 1448              		.loc 1 785 35 is_stmt 0 view .LVU500
 1449 002c 80F88420 		strb	r2, [r0, #132]
 1450              	.LVL122:
 1451              	.L84:
 786:Src/pwm_curr_fdbk.c ****   }
 787:Src/pwm_curr_fdbk.c ****   else
 788:Src/pwm_curr_fdbk.c ****   {
 789:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 790:Src/pwm_curr_fdbk.c ****   }
 1452              		.loc 1 790 3 is_stmt 1 view .LVU501
 791:Src/pwm_curr_fdbk.c **** 
 792:Src/pwm_curr_fdbk.c ****   return (retVal);
 1453              		.loc 1 792 3 view .LVU502
 793:Src/pwm_curr_fdbk.c **** }
 1454              		.loc 1 793 1 is_stmt 0 view .LVU503
 1455 0030 1846     		mov	r0, r3
 1456              	.LVL123:
 1457              		.loc 1 793 1 view .LVU504
 1458 0032 7047     		bx	lr
 1459              	.LVL124:
 1460              	.L85:
 1461              		.loc 1 793 1 view .LVU505
 1462 0034 4021     		movs	r1, #64
 1463 0036 EBE7     		b	.L82
 1464              		.cfi_endproc
 1465              	.LFE1104:
 1467              		.section	.text.PWMC_OCPSetReferenceVoltage,"ax",%progbits
 1468              		.align	1
 1469              		.p2align 2,,3
 1470              		.weak	PWMC_OCPSetReferenceVoltage
 1471              		.syntax unified
 1472              		.thumb
 1473              		.thumb_func
 1475              	PWMC_OCPSetReferenceVoltage:
 1476              	.LVL125:
 1477              	.LFB1105:
 794:Src/pwm_curr_fdbk.c **** 
 795:Src/pwm_curr_fdbk.c **** /**
 796:Src/pwm_curr_fdbk.c ****   * @brief  Sets the over current threshold through the DAC reference voltage.
 797:Src/pwm_curr_fdbk.c ****   *
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 63


 798:Src/pwm_curr_fdbk.c ****   * @param  pHandle:  Handler of the current instance of the PWM component.
 799:Src/pwm_curr_fdbk.c ****   * @param  hDACVref: Value of DAC reference voltage to be applied expressed as a 16bit unsigned in
 800:Src/pwm_curr_fdbk.c ****   *					  Min value: 0 (0 V)
 801:Src/pwm_curr_fdbk.c ****   *                	  Max value: 65536 (VDD_DAC)
 802:Src/pwm_curr_fdbk.c ****   */
 803:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 804:Src/pwm_curr_fdbk.c **** __weak void PWMC_OCPSetReferenceVoltage(PWMC_Handle_t *pHandle, uint16_t hDACVref)
 805:Src/pwm_curr_fdbk.c **** {
 1478              		.loc 1 805 1 is_stmt 1 view -0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 0
 1481              		@ frame_needed = 0, uses_anonymous_args = 0
 1482              		@ link register save eliminated.
 806:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 807:Src/pwm_curr_fdbk.c ****   if ((MC_NULL == pHandle) || (MC_NULL == pHandle->pFctOCPSetReferenceVoltage))
 808:Src/pwm_curr_fdbk.c ****   {
 809:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 810:Src/pwm_curr_fdbk.c ****   }
 811:Src/pwm_curr_fdbk.c ****   else
 812:Src/pwm_curr_fdbk.c ****   {
 813:Src/pwm_curr_fdbk.c **** #endif
 814:Src/pwm_curr_fdbk.c ****     pHandle->pFctOCPSetReferenceVoltage(pHandle, hDACVref);
 1483              		.loc 1 814 5 view .LVU507
 1484 0000 8369     		ldr	r3, [r0, #24]
 1485 0002 1847     		bx	r3	@ indirect register sibling call
 1486              	.LVL126:
 1487              		.loc 1 814 5 is_stmt 0 view .LVU508
 1488              		.cfi_endproc
 1489              	.LFE1105:
 1491              		.section	.text.PWMC_GetTurnOnLowSidesAction,"ax",%progbits
 1492              		.align	1
 1493              		.p2align 2,,3
 1494              		.weak	PWMC_GetTurnOnLowSidesAction
 1495              		.syntax unified
 1496              		.thumb
 1497              		.thumb_func
 1499              	PWMC_GetTurnOnLowSidesAction:
 1500              	.LVL127:
 1501              	.LFB1106:
 815:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 816:Src/pwm_curr_fdbk.c ****   }
 817:Src/pwm_curr_fdbk.c **** #endif
 818:Src/pwm_curr_fdbk.c **** }
 819:Src/pwm_curr_fdbk.c **** 
 820:Src/pwm_curr_fdbk.c **** /**
 821:Src/pwm_curr_fdbk.c ****   * @brief  Retrieves the satus of TurnOnLowSides action.
 822:Src/pwm_curr_fdbk.c ****   *
 823:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWMC component.
 824:Src/pwm_curr_fdbk.c ****   * @retval bool State of TurnOnLowSides action:
 825:Src/pwm_curr_fdbk.c ****   *         **true** if TurnOnLowSides action is active, **false** otherwise.
 826:Src/pwm_curr_fdbk.c ****   */
 827:Src/pwm_curr_fdbk.c **** __weak bool PWMC_GetTurnOnLowSidesAction(const PWMC_Handle_t *pHandle)
 828:Src/pwm_curr_fdbk.c **** {
 1502              		.loc 1 828 1 is_stmt 1 view -0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 64


 1506              		@ link register save eliminated.
 829:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 830:Src/pwm_curr_fdbk.c ****   return ((MC_NULL == pHandle) ? false : pHandle->TurnOnLowSidesAction);
 831:Src/pwm_curr_fdbk.c **** #else
 832:Src/pwm_curr_fdbk.c ****   return (pHandle->TurnOnLowSidesAction);
 1507              		.loc 1 832 3 view .LVU510
 833:Src/pwm_curr_fdbk.c **** #endif
 834:Src/pwm_curr_fdbk.c **** }
 1508              		.loc 1 834 1 is_stmt 0 view .LVU511
 1509 0000 90F87E00 		ldrb	r0, [r0, #126]	@ zero_extendqisi2
 1510              	.LVL128:
 1511              		.loc 1 834 1 view .LVU512
 1512 0004 7047     		bx	lr
 1513              		.cfi_endproc
 1514              	.LFE1106:
 1516 0006 00BF     		.section	.text.PWMC_DPWM_ModeEnable,"ax",%progbits
 1517              		.align	1
 1518              		.p2align 2,,3
 1519              		.weak	PWMC_DPWM_ModeEnable
 1520              		.syntax unified
 1521              		.thumb
 1522              		.thumb_func
 1524              	PWMC_DPWM_ModeEnable:
 1525              	.LVL129:
 1526              	.LFB1107:
 835:Src/pwm_curr_fdbk.c **** 
 836:Src/pwm_curr_fdbk.c **** /** @brief Enables Discontinuous PWM mode using the @p pHandle PWMC component.
 837:Src/pwm_curr_fdbk.c ****   *
 838:Src/pwm_curr_fdbk.c ****   */
 839:Src/pwm_curr_fdbk.c **** __weak void PWMC_DPWM_ModeEnable(PWMC_Handle_t *pHandle)
 840:Src/pwm_curr_fdbk.c **** {
 1527              		.loc 1 840 1 is_stmt 1 view -0
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 0
 1530              		@ frame_needed = 0, uses_anonymous_args = 0
 1531              		@ link register save eliminated.
 841:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 842:Src/pwm_curr_fdbk.c ****   if (MC_NULL ==  pHandle)
 843:Src/pwm_curr_fdbk.c ****   {
 844:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 845:Src/pwm_curr_fdbk.c ****   }
 846:Src/pwm_curr_fdbk.c ****   else
 847:Src/pwm_curr_fdbk.c ****   {
 848:Src/pwm_curr_fdbk.c **** #endif
 849:Src/pwm_curr_fdbk.c ****     pHandle->DPWM_Mode = true;
 1532              		.loc 1 849 5 view .LVU514
 1533              		.loc 1 849 24 is_stmt 0 view .LVU515
 1534 0000 0123     		movs	r3, #1
 1535 0002 80F87F30 		strb	r3, [r0, #127]
 850:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 851:Src/pwm_curr_fdbk.c ****   }
 852:Src/pwm_curr_fdbk.c **** #endif
 853:Src/pwm_curr_fdbk.c **** }
 1536              		.loc 1 853 1 view .LVU516
 1537 0006 7047     		bx	lr
 1538              		.cfi_endproc
 1539              	.LFE1107:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 65


 1541              		.section	.text.PWMC_DPWM_ModeDisable,"ax",%progbits
 1542              		.align	1
 1543              		.p2align 2,,3
 1544              		.weak	PWMC_DPWM_ModeDisable
 1545              		.syntax unified
 1546              		.thumb
 1547              		.thumb_func
 1549              	PWMC_DPWM_ModeDisable:
 1550              	.LVL130:
 1551              	.LFB1108:
 854:Src/pwm_curr_fdbk.c **** 
 855:Src/pwm_curr_fdbk.c **** /** @brief Disables Discontinuous PWM mode using the @p pHandle PWMC component.
 856:Src/pwm_curr_fdbk.c ****   *
 857:Src/pwm_curr_fdbk.c ****   */
 858:Src/pwm_curr_fdbk.c **** __weak void PWMC_DPWM_ModeDisable(PWMC_Handle_t *pHandle)
 859:Src/pwm_curr_fdbk.c **** {
 1552              		.loc 1 859 1 is_stmt 1 view -0
 1553              		.cfi_startproc
 1554              		@ args = 0, pretend = 0, frame = 0
 1555              		@ frame_needed = 0, uses_anonymous_args = 0
 1556              		@ link register save eliminated.
 860:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 861:Src/pwm_curr_fdbk.c ****   if (MC_NULL ==  pHandle)
 862:Src/pwm_curr_fdbk.c ****   {
 863:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 864:Src/pwm_curr_fdbk.c ****   }
 865:Src/pwm_curr_fdbk.c ****   else
 866:Src/pwm_curr_fdbk.c ****   {
 867:Src/pwm_curr_fdbk.c **** #endif
 868:Src/pwm_curr_fdbk.c ****     pHandle->DPWM_Mode = false;
 1557              		.loc 1 868 5 view .LVU518
 1558              		.loc 1 868 24 is_stmt 0 view .LVU519
 1559 0000 0023     		movs	r3, #0
 1560 0002 80F87F30 		strb	r3, [r0, #127]
 869:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 870:Src/pwm_curr_fdbk.c ****   }
 871:Src/pwm_curr_fdbk.c **** #endif
 872:Src/pwm_curr_fdbk.c **** }
 1561              		.loc 1 872 1 view .LVU520
 1562 0006 7047     		bx	lr
 1563              		.cfi_endproc
 1564              	.LFE1108:
 1566              		.section	.text.PWMC_GetDPWM_Mode,"ax",%progbits
 1567              		.align	1
 1568              		.p2align 2,,3
 1569              		.weak	PWMC_GetDPWM_Mode
 1570              		.syntax unified
 1571              		.thumb
 1572              		.thumb_func
 1574              	PWMC_GetDPWM_Mode:
 1575              	.LVL131:
 1576              	.LFB1109:
 873:Src/pwm_curr_fdbk.c **** 
 874:Src/pwm_curr_fdbk.c **** /** @brief  Returns the status of the Discontinuous PWM Mode stored in the @p pHandle PWMC componen
 875:Src/pwm_curr_fdbk.c ****   *
 876:Src/pwm_curr_fdbk.c ****   * @retval true if DPWM Mode is enabled, **false** otherwise.
 877:Src/pwm_curr_fdbk.c ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 66


 878:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13
 879:Src/pwm_curr_fdbk.c **** __weak bool PWMC_GetDPWM_Mode(PWMC_Handle_t *pHandle)
 880:Src/pwm_curr_fdbk.c **** {
 1577              		.loc 1 880 1 is_stmt 1 view -0
 1578              		.cfi_startproc
 1579              		@ args = 0, pretend = 0, frame = 0
 1580              		@ frame_needed = 0, uses_anonymous_args = 0
 1581              		@ link register save eliminated.
 881:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 882:Src/pwm_curr_fdbk.c ****   return ((MC_NULL == pHandle) ? false : pHandle->DPWM_Mode);
 883:Src/pwm_curr_fdbk.c **** #else
 884:Src/pwm_curr_fdbk.c ****   return (pHandle->DPWM_Mode);
 1582              		.loc 1 884 3 view .LVU522
 885:Src/pwm_curr_fdbk.c **** #endif
 886:Src/pwm_curr_fdbk.c **** }
 1583              		.loc 1 886 1 is_stmt 0 view .LVU523
 1584 0000 90F87F00 		ldrb	r0, [r0, #127]	@ zero_extendqisi2
 1585              	.LVL132:
 1586              		.loc 1 886 1 view .LVU524
 1587 0004 7047     		bx	lr
 1588              		.cfi_endproc
 1589              	.LFE1109:
 1591 0006 00BF     		.section	.text.PWMC_RLDetectionModeEnable,"ax",%progbits
 1592              		.align	1
 1593              		.p2align 2,,3
 1594              		.weak	PWMC_RLDetectionModeEnable
 1595              		.syntax unified
 1596              		.thumb
 1597              		.thumb_func
 1599              	PWMC_RLDetectionModeEnable:
 1600              	.LVL133:
 1601              	.LFB1110:
 887:Src/pwm_curr_fdbk.c **** 
 888:Src/pwm_curr_fdbk.c **** /** @brief  Enables the RL detection mode by calling the function in @p pHandle PWMC component.
 889:Src/pwm_curr_fdbk.c ****   *
 890:Src/pwm_curr_fdbk.c ****   */
 891:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 892:Src/pwm_curr_fdbk.c **** __weak void PWMC_RLDetectionModeEnable(PWMC_Handle_t *pHandle)
 893:Src/pwm_curr_fdbk.c **** {
 1602              		.loc 1 893 1 is_stmt 1 view -0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 0
 1605              		@ frame_needed = 0, uses_anonymous_args = 0
 1606              		@ link register save eliminated.
 894:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 895:Src/pwm_curr_fdbk.c ****   if ((MC_NULL == pHandle) || ( MC_NULL == pHandle->pFctRLDetectionModeEnable))
 896:Src/pwm_curr_fdbk.c ****   {
 897:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 898:Src/pwm_curr_fdbk.c ****   }
 899:Src/pwm_curr_fdbk.c ****   else
 900:Src/pwm_curr_fdbk.c ****   {
 901:Src/pwm_curr_fdbk.c **** #endif
 902:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeEnable(pHandle);
 1607              		.loc 1 902 5 view .LVU526
 1608 0000 C369     		ldr	r3, [r0, #28]
 1609 0002 1847     		bx	r3	@ indirect register sibling call
 1610              	.LVL134:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 67


 1611              		.loc 1 902 5 is_stmt 0 view .LVU527
 1612              		.cfi_endproc
 1613              	.LFE1110:
 1615              		.section	.text.PWMC_RLDetectionModeDisable,"ax",%progbits
 1616              		.align	1
 1617              		.p2align 2,,3
 1618              		.weak	PWMC_RLDetectionModeDisable
 1619              		.syntax unified
 1620              		.thumb
 1621              		.thumb_func
 1623              	PWMC_RLDetectionModeDisable:
 1624              	.LVL135:
 1625              	.LFB1111:
 903:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 904:Src/pwm_curr_fdbk.c ****   }
 905:Src/pwm_curr_fdbk.c **** #endif
 906:Src/pwm_curr_fdbk.c **** }
 907:Src/pwm_curr_fdbk.c **** 
 908:Src/pwm_curr_fdbk.c **** /** @brief  Disables the RL detection mode by calling the function in @p pHandle PWMC component.
 909:Src/pwm_curr_fdbk.c ****   *
 910:Src/pwm_curr_fdbk.c ****   */
 911:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 912:Src/pwm_curr_fdbk.c **** __weak void PWMC_RLDetectionModeDisable(PWMC_Handle_t *pHandle)
 913:Src/pwm_curr_fdbk.c **** {
 1626              		.loc 1 913 1 is_stmt 1 view -0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 0
 1629              		@ frame_needed = 0, uses_anonymous_args = 0
 1630              		@ link register save eliminated.
 914:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 915:Src/pwm_curr_fdbk.c ****   if ((MC_NULL == pHandle) || ( MC_NULL == pHandle->pFctRLDetectionModeDisable))
 916:Src/pwm_curr_fdbk.c ****   {
 917:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 918:Src/pwm_curr_fdbk.c ****   }
 919:Src/pwm_curr_fdbk.c ****   else
 920:Src/pwm_curr_fdbk.c ****   {
 921:Src/pwm_curr_fdbk.c **** #endif
 922:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeDisable(pHandle);
 1631              		.loc 1 922 5 view .LVU529
 1632 0000 036A     		ldr	r3, [r0, #32]
 1633 0002 1847     		bx	r3	@ indirect register sibling call
 1634              	.LVL136:
 1635              		.loc 1 922 5 is_stmt 0 view .LVU530
 1636              		.cfi_endproc
 1637              	.LFE1111:
 1639              		.section	.text.PWMC_RLDetectionModeSetDuty,"ax",%progbits
 1640              		.align	1
 1641              		.p2align 2,,3
 1642              		.weak	PWMC_RLDetectionModeSetDuty
 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1647              	PWMC_RLDetectionModeSetDuty:
 1648              	.LVL137:
 1649              	.LFB1112:
 923:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 924:Src/pwm_curr_fdbk.c ****   }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 68


 925:Src/pwm_curr_fdbk.c **** #endif
 926:Src/pwm_curr_fdbk.c **** }
 927:Src/pwm_curr_fdbk.c **** 
 928:Src/pwm_curr_fdbk.c **** /**
 929:Src/pwm_curr_fdbk.c ****   * @brief  Sets the PWM duty cycle to apply in the RL Detection mode.
 930:Src/pwm_curr_fdbk.c ****   *
 931:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWMC component.
 932:Src/pwm_curr_fdbk.c ****   * @param  hDuty: Duty cycle to apply, written in uint16_t.
 933:Src/pwm_curr_fdbk.c ****   * @retval #MC_NO_ERROR if the Duty Cycle could be applied on time for the next PWM period.
 934:Src/pwm_curr_fdbk.c ****   * 		Returns #MC_DURATION otherwise.
 935:Src/pwm_curr_fdbk.c ****   */
 936:Src/pwm_curr_fdbk.c **** __weak uint16_t PWMC_RLDetectionModeSetDuty(PWMC_Handle_t *pHandle, uint16_t hDuty) //cstat !MISRAC
 937:Src/pwm_curr_fdbk.c **** {
 1650              		.loc 1 937 1 is_stmt 1 view -0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 0
 1653              		@ frame_needed = 0, uses_anonymous_args = 0
 1654              		@ link register save eliminated.
 938:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 939:Src/pwm_curr_fdbk.c ****  uint16_t retVal = MC_DURATION;
 940:Src/pwm_curr_fdbk.c **** 
 941:Src/pwm_curr_fdbk.c ****  if ((MC_NULL == pHandle) || ( MC_NULL == pHandle->pFctRLDetectionModeSetDuty))
 942:Src/pwm_curr_fdbk.c ****  {
 943:Src/pwm_curr_fdbk.c ****    /* Nothing to do */
 944:Src/pwm_curr_fdbk.c ****  }
 945:Src/pwm_curr_fdbk.c ****  else
 946:Src/pwm_curr_fdbk.c ****  {
 947:Src/pwm_curr_fdbk.c ****    retVal = pHandle->pFctRLDetectionModeSetDuty(pHandle, hDuty);
 948:Src/pwm_curr_fdbk.c ****  }
 949:Src/pwm_curr_fdbk.c ****  return (retVal);
 950:Src/pwm_curr_fdbk.c **** #else
 951:Src/pwm_curr_fdbk.c ****   return (pHandle->pFctRLDetectionModeSetDuty(pHandle, hDuty));
 1655              		.loc 1 951 3 view .LVU532
 1656              		.loc 1 951 11 is_stmt 0 view .LVU533
 1657 0000 436A     		ldr	r3, [r0, #36]
 1658 0002 1847     		bx	r3
 1659              	.LVL138:
 1660              		.loc 1 951 11 view .LVU534
 1661              		.cfi_endproc
 1662              	.LFE1112:
 1664              		.section	.text.PWMC_RLTurnOnLowSidesAndStart,"ax",%progbits
 1665              		.align	1
 1666              		.p2align 2,,3
 1667              		.weak	PWMC_RLTurnOnLowSidesAndStart
 1668              		.syntax unified
 1669              		.thumb
 1670              		.thumb_func
 1672              	PWMC_RLTurnOnLowSidesAndStart:
 1673              	.LVL139:
 1674              	.LFB1113:
 952:Src/pwm_curr_fdbk.c **** #endif
 953:Src/pwm_curr_fdbk.c **** }
 954:Src/pwm_curr_fdbk.c **** 
 955:Src/pwm_curr_fdbk.c **** /** @brief  Turns on low sides switches and starts ADC triggerin.
 956:Src/pwm_curr_fdbk.c ****   *
 957:Src/pwm_curr_fdbk.c ****   */
 958:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 69


 959:Src/pwm_curr_fdbk.c **** __weak void PWMC_RLTurnOnLowSidesAndStart(PWMC_Handle_t *pHandle)
 960:Src/pwm_curr_fdbk.c **** {
 1675              		.loc 1 960 1 is_stmt 1 view -0
 1676              		.cfi_startproc
 1677              		@ args = 0, pretend = 0, frame = 0
 1678              		@ frame_needed = 0, uses_anonymous_args = 0
 1679              		@ link register save eliminated.
 961:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 962:Src/pwm_curr_fdbk.c ****   if ((MC_NULL == pHandle) || ( MC_NULL == pHandle->pFctRLTurnOnLowSidesAndStart))
 963:Src/pwm_curr_fdbk.c ****   {
 964:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 965:Src/pwm_curr_fdbk.c ****   }
 966:Src/pwm_curr_fdbk.c ****   else
 967:Src/pwm_curr_fdbk.c ****   {
 968:Src/pwm_curr_fdbk.c **** #endif
 969:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLTurnOnLowSidesAndStart(pHandle);
 1680              		.loc 1 969 5 view .LVU536
 1681 0000 836A     		ldr	r3, [r0, #40]
 1682 0002 1847     		bx	r3	@ indirect register sibling call
 1683              	.LVL140:
 1684              		.loc 1 969 5 is_stmt 0 view .LVU537
 1685              		.cfi_endproc
 1686              	.LFE1113:
 1688              		.section	.text.PWMC_SetAlignFlag,"ax",%progbits
 1689              		.align	1
 1690              		.p2align 2,,3
 1691              		.global	PWMC_SetAlignFlag
 1692              		.syntax unified
 1693              		.thumb
 1694              		.thumb_func
 1696              	PWMC_SetAlignFlag:
 1697              	.LVL141:
 1698              	.LFB1114:
 970:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 971:Src/pwm_curr_fdbk.c ****   }
 972:Src/pwm_curr_fdbk.c **** #endif
 973:Src/pwm_curr_fdbk.c **** }
 974:Src/pwm_curr_fdbk.c **** /**
 975:Src/pwm_curr_fdbk.c ****   * @brief  Sets the aligned motor flag.
 976:Src/pwm_curr_fdbk.c ****   *
 977:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWMC component.
 978:Src/pwm_curr_fdbk.c ****   * @param  flag: Value to be applied as an 8 bit unsigned integer.
 979:Src/pwm_curr_fdbk.c ****   *				  1: motor is in aligned stage.
 980:Src/pwm_curr_fdbk.c ****   *               2: motor is not in aligned stage.
 981:Src/pwm_curr_fdbk.c ****   */
 982:Src/pwm_curr_fdbk.c **** void PWMC_SetAlignFlag(PWMC_Handle_t *pHandle, uint8_t flag)
 983:Src/pwm_curr_fdbk.c **** {
 1699              		.loc 1 983 1 is_stmt 1 view -0
 1700              		.cfi_startproc
 1701              		@ args = 0, pretend = 0, frame = 0
 1702              		@ frame_needed = 0, uses_anonymous_args = 0
 1703              		@ link register save eliminated.
 984:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 985:Src/pwm_curr_fdbk.c ****   if (MC_NULL ==  pHandle)
 986:Src/pwm_curr_fdbk.c ****   {
 987:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 988:Src/pwm_curr_fdbk.c ****   }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 70


 989:Src/pwm_curr_fdbk.c ****   else
 990:Src/pwm_curr_fdbk.c ****   {
 991:Src/pwm_curr_fdbk.c **** #endif
 992:Src/pwm_curr_fdbk.c ****     pHandle->AlignFlag = flag;
 1704              		.loc 1 992 5 view .LVU539
 1705              		.loc 1 992 24 is_stmt 0 view .LVU540
 1706 0000 80F87B10 		strb	r1, [r0, #123]
 993:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 994:Src/pwm_curr_fdbk.c ****   }
 995:Src/pwm_curr_fdbk.c **** #endif
 996:Src/pwm_curr_fdbk.c **** }
 1707              		.loc 1 996 1 view .LVU541
 1708 0004 7047     		bx	lr
 1709              		.cfi_endproc
 1710              	.LFE1114:
 1712 0006 00BF     		.section	.text.PWMC_RegisterGetPhaseCurrentsCallBack,"ax",%progbits
 1713              		.align	1
 1714              		.p2align 2,,3
 1715              		.weak	PWMC_RegisterGetPhaseCurrentsCallBack
 1716              		.syntax unified
 1717              		.thumb
 1718              		.thumb_func
 1720              	PWMC_RegisterGetPhaseCurrentsCallBack:
 1721              	.LVL142:
 1722              	.LFB1115:
 997:Src/pwm_curr_fdbk.c **** 
 998:Src/pwm_curr_fdbk.c **** /**
 999:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to get phases current.
1000:Src/pwm_curr_fdbk.c ****  *
1001:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback to get the phase current.
1002:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1003:Src/pwm_curr_fdbk.c ****  */
1004:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterGetPhaseCurrentsCallBack(PWMC_GetPhaseCurr_Cb_t pCallBack, PWMC_Handle_t *
1005:Src/pwm_curr_fdbk.c **** {
 1723              		.loc 1 1005 1 is_stmt 1 view -0
 1724              		.cfi_startproc
 1725              		@ args = 0, pretend = 0, frame = 0
 1726              		@ frame_needed = 0, uses_anonymous_args = 0
 1727              		@ link register save eliminated.
1006:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1007:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1008:Src/pwm_curr_fdbk.c ****   {
1009:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1010:Src/pwm_curr_fdbk.c ****   }
1011:Src/pwm_curr_fdbk.c ****   else
1012:Src/pwm_curr_fdbk.c ****   {
1013:Src/pwm_curr_fdbk.c **** #endif
1014:Src/pwm_curr_fdbk.c ****     pHandle->pFctGetPhaseCurrents = pCallBack;
 1728              		.loc 1 1014 5 view .LVU543
 1729              		.loc 1 1014 35 is_stmt 0 view .LVU544
 1730 0000 0860     		str	r0, [r1]
1015:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1016:Src/pwm_curr_fdbk.c ****   }
1017:Src/pwm_curr_fdbk.c **** #endif
1018:Src/pwm_curr_fdbk.c **** }
 1731              		.loc 1 1018 1 view .LVU545
 1732 0002 7047     		bx	lr
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 71


 1733              		.cfi_endproc
 1734              	.LFE1115:
 1736              		.section	.text.PWMC_RegisterSwitchOffPwmCallBack,"ax",%progbits
 1737              		.align	1
 1738              		.p2align 2,,3
 1739              		.weak	PWMC_RegisterSwitchOffPwmCallBack
 1740              		.syntax unified
 1741              		.thumb
 1742              		.thumb_func
 1744              	PWMC_RegisterSwitchOffPwmCallBack:
 1745              	.LVL143:
 1746              	.LFB1116:
1019:Src/pwm_curr_fdbk.c **** 
1020:Src/pwm_curr_fdbk.c **** /**
1021:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to switch PWM
1022:Src/pwm_curr_fdbk.c ****  *        generation off.
1023:Src/pwm_curr_fdbk.c ****  *
1024:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
1025:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1026:Src/pwm_curr_fdbk.c ****  */
1027:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterSwitchOffPwmCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t *pHandle)
1028:Src/pwm_curr_fdbk.c **** {
 1747              		.loc 1 1028 1 is_stmt 1 view -0
 1748              		.cfi_startproc
 1749              		@ args = 0, pretend = 0, frame = 0
 1750              		@ frame_needed = 0, uses_anonymous_args = 0
 1751              		@ link register save eliminated.
1029:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1030:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1031:Src/pwm_curr_fdbk.c ****   {
1032:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1033:Src/pwm_curr_fdbk.c ****   }
1034:Src/pwm_curr_fdbk.c ****   else
1035:Src/pwm_curr_fdbk.c ****   {
1036:Src/pwm_curr_fdbk.c **** #endif
1037:Src/pwm_curr_fdbk.c ****     pHandle->pFctSwitchOffPwm = pCallBack;
 1752              		.loc 1 1037 5 view .LVU547
 1753              		.loc 1 1037 31 is_stmt 0 view .LVU548
 1754 0000 4860     		str	r0, [r1, #4]
1038:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1039:Src/pwm_curr_fdbk.c ****   }
1040:Src/pwm_curr_fdbk.c **** #endif
1041:Src/pwm_curr_fdbk.c **** }
 1755              		.loc 1 1041 1 view .LVU549
 1756 0002 7047     		bx	lr
 1757              		.cfi_endproc
 1758              	.LFE1116:
 1760              		.section	.text.PWMC_RegisterSwitchonPwmCallBack,"ax",%progbits
 1761              		.align	1
 1762              		.p2align 2,,3
 1763              		.weak	PWMC_RegisterSwitchonPwmCallBack
 1764              		.syntax unified
 1765              		.thumb
 1766              		.thumb_func
 1768              	PWMC_RegisterSwitchonPwmCallBack:
 1769              	.LVL144:
 1770              	.LFB1117:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 72


1042:Src/pwm_curr_fdbk.c **** 
1043:Src/pwm_curr_fdbk.c **** /**
1044:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to switch PWM
1045:Src/pwm_curr_fdbk.c ****  *        generation on.
1046:Src/pwm_curr_fdbk.c ****  *
1047:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
1048:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1049:Src/pwm_curr_fdbk.c ****  */
1050:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterSwitchonPwmCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t *pHandle)
1051:Src/pwm_curr_fdbk.c **** {
 1771              		.loc 1 1051 1 is_stmt 1 view -0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 0
 1774              		@ frame_needed = 0, uses_anonymous_args = 0
 1775              		@ link register save eliminated.
1052:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1053:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1054:Src/pwm_curr_fdbk.c ****   {
1055:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1056:Src/pwm_curr_fdbk.c ****   }
1057:Src/pwm_curr_fdbk.c ****   else
1058:Src/pwm_curr_fdbk.c ****   {
1059:Src/pwm_curr_fdbk.c **** #endif
1060:Src/pwm_curr_fdbk.c ****     pHandle->pFctSwitchOnPwm = pCallBack;
 1776              		.loc 1 1060 5 view .LVU551
 1777              		.loc 1 1060 30 is_stmt 0 view .LVU552
 1778 0000 8860     		str	r0, [r1, #8]
1061:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1062:Src/pwm_curr_fdbk.c ****   }
1063:Src/pwm_curr_fdbk.c **** #endif
1064:Src/pwm_curr_fdbk.c **** }
 1779              		.loc 1 1064 1 view .LVU553
 1780 0002 7047     		bx	lr
 1781              		.cfi_endproc
 1782              	.LFE1117:
 1784              		.section	.text.PWMC_RegisterReadingCalibrationCallBack,"ax",%progbits
 1785              		.align	1
 1786              		.p2align 2,,3
 1787              		.weak	PWMC_RegisterReadingCalibrationCallBack
 1788              		.syntax unified
 1789              		.thumb
 1790              		.thumb_func
 1792              	PWMC_RegisterReadingCalibrationCallBack:
 1793              	.LVL145:
 1794              	.LFB1118:
1065:Src/pwm_curr_fdbk.c **** 
1066:Src/pwm_curr_fdbk.c **** /**
1067:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to execute a calibration
1068:Src/pwm_curr_fdbk.c ****  *        of the current sensing system.
1069:Src/pwm_curr_fdbk.c ****  *
1070:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
1071:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1072:Src/pwm_curr_fdbk.c ****  */
1073:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterReadingCalibrationCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t *pHa
1074:Src/pwm_curr_fdbk.c **** {
 1795              		.loc 1 1074 1 is_stmt 1 view -0
 1796              		.cfi_startproc
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 73


 1797              		@ args = 0, pretend = 0, frame = 0
 1798              		@ frame_needed = 0, uses_anonymous_args = 0
 1799              		@ link register save eliminated.
1075:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1076:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1077:Src/pwm_curr_fdbk.c ****   {
1078:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1079:Src/pwm_curr_fdbk.c ****   }
1080:Src/pwm_curr_fdbk.c ****   else
1081:Src/pwm_curr_fdbk.c ****   {
1082:Src/pwm_curr_fdbk.c **** #endif
1083:Src/pwm_curr_fdbk.c ****     pHandle->pFctCurrReadingCalib = pCallBack;
 1800              		.loc 1 1083 5 view .LVU555
 1801              		.loc 1 1083 35 is_stmt 0 view .LVU556
 1802 0000 C860     		str	r0, [r1, #12]
1084:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1085:Src/pwm_curr_fdbk.c ****   }
1086:Src/pwm_curr_fdbk.c **** #endif
1087:Src/pwm_curr_fdbk.c **** }
 1803              		.loc 1 1087 1 view .LVU557
 1804 0002 7047     		bx	lr
 1805              		.cfi_endproc
 1806              	.LFE1118:
 1808              		.section	.text.PWMC_RegisterTurnOnLowSidesCallBack,"ax",%progbits
 1809              		.align	1
 1810              		.p2align 2,,3
 1811              		.weak	PWMC_RegisterTurnOnLowSidesCallBack
 1812              		.syntax unified
 1813              		.thumb
 1814              		.thumb_func
 1816              	PWMC_RegisterTurnOnLowSidesCallBack:
 1817              	.LVL146:
 1818              	.LFB1119:
1088:Src/pwm_curr_fdbk.c **** 
1089:Src/pwm_curr_fdbk.c **** /**
1090:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to turn low sides on.
1091:Src/pwm_curr_fdbk.c ****  *
1092:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback which turns low sides on.
1093:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1094:Src/pwm_curr_fdbk.c ****  */
1095:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterTurnOnLowSidesCallBack(PWMC_TurnOnLowSides_Cb_t pCallBack, PWMC_Handle_t *
1096:Src/pwm_curr_fdbk.c **** {
 1819              		.loc 1 1096 1 is_stmt 1 view -0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 0
 1822              		@ frame_needed = 0, uses_anonymous_args = 0
 1823              		@ link register save eliminated.
1097:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1098:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1099:Src/pwm_curr_fdbk.c ****   {
1100:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1101:Src/pwm_curr_fdbk.c ****   }
1102:Src/pwm_curr_fdbk.c ****   else
1103:Src/pwm_curr_fdbk.c ****   {
1104:Src/pwm_curr_fdbk.c **** #endif
1105:Src/pwm_curr_fdbk.c ****     pHandle->pFctTurnOnLowSides = pCallBack;
 1824              		.loc 1 1105 5 view .LVU559
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 74


 1825              		.loc 1 1105 33 is_stmt 0 view .LVU560
 1826 0000 0861     		str	r0, [r1, #16]
1106:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1107:Src/pwm_curr_fdbk.c ****   }
1108:Src/pwm_curr_fdbk.c **** #endif
1109:Src/pwm_curr_fdbk.c **** }
 1827              		.loc 1 1109 1 view .LVU561
 1828 0002 7047     		bx	lr
 1829              		.cfi_endproc
 1830              	.LFE1119:
 1832              		.section	.text.PWMC_RegisterSampPointSectXCallBack,"ax",%progbits
 1833              		.align	1
 1834              		.p2align 2,,3
 1835              		.weak	PWMC_RegisterSampPointSectXCallBack
 1836              		.syntax unified
 1837              		.thumb
 1838              		.thumb_func
 1840              	PWMC_RegisterSampPointSectXCallBack:
 1841              	.LVL147:
 1842              	.LFB1120:
1110:Src/pwm_curr_fdbk.c **** 
1111:Src/pwm_curr_fdbk.c **** /**
1112:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to compute ADC sampling point.
1113:Src/pwm_curr_fdbk.c ****  *
1114:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback which sets the sampling point depending on the sector.
1115:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1116:Src/pwm_curr_fdbk.c ****  */
1117:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterSampPointSectXCallBack(PWMC_SetSampPointSectX_Cb_t pCallBack, PWMC_Handle_
1118:Src/pwm_curr_fdbk.c **** {
 1843              		.loc 1 1118 1 is_stmt 1 view -0
 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 0
 1846              		@ frame_needed = 0, uses_anonymous_args = 0
 1847              		@ link register save eliminated.
1119:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1120:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1121:Src/pwm_curr_fdbk.c ****   {
1122:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1123:Src/pwm_curr_fdbk.c ****   }
1124:Src/pwm_curr_fdbk.c ****   else
1125:Src/pwm_curr_fdbk.c ****   {
1126:Src/pwm_curr_fdbk.c **** #endif
1127:Src/pwm_curr_fdbk.c ****     pHandle->pFctSetADCSampPointSectX = pCallBack;
 1848              		.loc 1 1127 5 view .LVU563
 1849              		.loc 1 1127 39 is_stmt 0 view .LVU564
 1850 0000 4861     		str	r0, [r1, #20]
1128:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1129:Src/pwm_curr_fdbk.c ****   }
1130:Src/pwm_curr_fdbk.c **** #endif
1131:Src/pwm_curr_fdbk.c **** }
 1851              		.loc 1 1131 1 view .LVU565
 1852 0002 7047     		bx	lr
 1853              		.cfi_endproc
 1854              	.LFE1120:
 1856              		.section	.text.PWMC_RegisterOCPSetRefVoltageCallBack,"ax",%progbits
 1857              		.align	1
 1858              		.p2align 2,,3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 75


 1859              		.weak	PWMC_RegisterOCPSetRefVoltageCallBack
 1860              		.syntax unified
 1861              		.thumb
 1862              		.thumb_func
 1864              	PWMC_RegisterOCPSetRefVoltageCallBack:
 1865              	.LVL148:
 1866              	.LFB1121:
1132:Src/pwm_curr_fdbk.c **** 
1133:Src/pwm_curr_fdbk.c **** /**
1134:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to set the reference
1135:Src/pwm_curr_fdbk.c ****  *        voltage for the overcurrent protection.
1136:Src/pwm_curr_fdbk.c ****  *
1137:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback which sets the reference voltage.
1138:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1139:Src/pwm_curr_fdbk.c ****  */
1140:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterOCPSetRefVoltageCallBack(PWMC_SetOcpRefVolt_Cb_t pCallBack, PWMC_Handle_t 
1141:Src/pwm_curr_fdbk.c **** {
 1867              		.loc 1 1141 1 is_stmt 1 view -0
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 0
 1870              		@ frame_needed = 0, uses_anonymous_args = 0
 1871              		@ link register save eliminated.
1142:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1143:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1144:Src/pwm_curr_fdbk.c ****   {
1145:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1146:Src/pwm_curr_fdbk.c ****   }
1147:Src/pwm_curr_fdbk.c ****   else
1148:Src/pwm_curr_fdbk.c ****   {
1149:Src/pwm_curr_fdbk.c **** #endif
1150:Src/pwm_curr_fdbk.c ****     pHandle->pFctOCPSetReferenceVoltage = pCallBack;
 1872              		.loc 1 1150 5 view .LVU567
 1873              		.loc 1 1150 41 is_stmt 0 view .LVU568
 1874 0000 8861     		str	r0, [r1, #24]
1151:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1152:Src/pwm_curr_fdbk.c ****   }
1153:Src/pwm_curr_fdbk.c **** #endif
1154:Src/pwm_curr_fdbk.c **** }
 1875              		.loc 1 1154 1 view .LVU569
 1876 0002 7047     		bx	lr
 1877              		.cfi_endproc
 1878              	.LFE1121:
 1880              		.section	.text.PWMC_RegisterRLDetectionModeEnableCallBack,"ax",%progbits
 1881              		.align	1
 1882              		.p2align 2,,3
 1883              		.weak	PWMC_RegisterRLDetectionModeEnableCallBack
 1884              		.syntax unified
 1885              		.thumb
 1886              		.thumb_func
 1888              	PWMC_RegisterRLDetectionModeEnableCallBack:
 1889              	.LVL149:
 1890              	.LFB1122:
1155:Src/pwm_curr_fdbk.c **** 
1156:Src/pwm_curr_fdbk.c **** /**
1157:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to enable the R/L detection mode.
1158:Src/pwm_curr_fdbk.c ****  *
1159:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 76


1160:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1161:Src/pwm_curr_fdbk.c ****  */
1162:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterRLDetectionModeEnableCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t *
1163:Src/pwm_curr_fdbk.c **** {
 1891              		.loc 1 1163 1 is_stmt 1 view -0
 1892              		.cfi_startproc
 1893              		@ args = 0, pretend = 0, frame = 0
 1894              		@ frame_needed = 0, uses_anonymous_args = 0
 1895              		@ link register save eliminated.
1164:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1165:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1166:Src/pwm_curr_fdbk.c ****   {
1167:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1168:Src/pwm_curr_fdbk.c ****   }
1169:Src/pwm_curr_fdbk.c ****   else
1170:Src/pwm_curr_fdbk.c ****   {
1171:Src/pwm_curr_fdbk.c **** #endif
1172:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeEnable = pCallBack;
 1896              		.loc 1 1172 5 view .LVU571
 1897              		.loc 1 1172 40 is_stmt 0 view .LVU572
 1898 0000 C861     		str	r0, [r1, #28]
1173:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1174:Src/pwm_curr_fdbk.c ****   }
1175:Src/pwm_curr_fdbk.c **** #endif
1176:Src/pwm_curr_fdbk.c **** }
 1899              		.loc 1 1176 1 view .LVU573
 1900 0002 7047     		bx	lr
 1901              		.cfi_endproc
 1902              	.LFE1122:
 1904              		.section	.text.PWMC_RegisterRLDetectionModeDisableCallBack,"ax",%progbits
 1905              		.align	1
 1906              		.p2align 2,,3
 1907              		.weak	PWMC_RegisterRLDetectionModeDisableCallBack
 1908              		.syntax unified
 1909              		.thumb
 1910              		.thumb_func
 1912              	PWMC_RegisterRLDetectionModeDisableCallBack:
 1913              	.LVL150:
 1914              	.LFB1123:
1177:Src/pwm_curr_fdbk.c **** 
1178:Src/pwm_curr_fdbk.c **** /**
1179:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to disable the R/L detection mode.
1180:Src/pwm_curr_fdbk.c ****  *
1181:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
1182:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1183:Src/pwm_curr_fdbk.c ****  */
1184:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterRLDetectionModeDisableCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t 
1185:Src/pwm_curr_fdbk.c **** {
 1915              		.loc 1 1185 1 is_stmt 1 view -0
 1916              		.cfi_startproc
 1917              		@ args = 0, pretend = 0, frame = 0
 1918              		@ frame_needed = 0, uses_anonymous_args = 0
 1919              		@ link register save eliminated.
1186:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1187:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1188:Src/pwm_curr_fdbk.c ****   {
1189:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 77


1190:Src/pwm_curr_fdbk.c ****   }
1191:Src/pwm_curr_fdbk.c ****   else
1192:Src/pwm_curr_fdbk.c ****   {
1193:Src/pwm_curr_fdbk.c **** #endif
1194:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeDisable = pCallBack;
 1920              		.loc 1 1194 5 view .LVU575
 1921              		.loc 1 1194 41 is_stmt 0 view .LVU576
 1922 0000 0862     		str	r0, [r1, #32]
1195:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1196:Src/pwm_curr_fdbk.c ****   }
1197:Src/pwm_curr_fdbk.c **** #endif
1198:Src/pwm_curr_fdbk.c **** }
 1923              		.loc 1 1198 1 view .LVU577
 1924 0002 7047     		bx	lr
 1925              		.cfi_endproc
 1926              	.LFE1123:
 1928              		.section	.text.PWMC_RegisterRLDetectionModeSetDutyCallBack,"ax",%progbits
 1929              		.align	1
 1930              		.p2align 2,,3
 1931              		.weak	PWMC_RegisterRLDetectionModeSetDutyCallBack
 1932              		.syntax unified
 1933              		.thumb
 1934              		.thumb_func
 1936              	PWMC_RegisterRLDetectionModeSetDutyCallBack:
 1937              	.LVL151:
 1938              	.LFB1124:
1199:Src/pwm_curr_fdbk.c **** 
1200:Src/pwm_curr_fdbk.c **** /**
1201:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to set the duty cycle
1202:Src/pwm_curr_fdbk.c ****  *        for the R/L detection mode.
1203:Src/pwm_curr_fdbk.c ****  *
1204:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback which sets the duty cycle.
1205:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1206:Src/pwm_curr_fdbk.c ****  */
1207:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterRLDetectionModeSetDutyCallBack(PWMC_RLDetectSetDuty_Cb_t pCallBack, PWMC_H
1208:Src/pwm_curr_fdbk.c **** {
 1939              		.loc 1 1208 1 is_stmt 1 view -0
 1940              		.cfi_startproc
 1941              		@ args = 0, pretend = 0, frame = 0
 1942              		@ frame_needed = 0, uses_anonymous_args = 0
 1943              		@ link register save eliminated.
1209:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1210:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1211:Src/pwm_curr_fdbk.c ****   {
1212:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1213:Src/pwm_curr_fdbk.c ****   }
1214:Src/pwm_curr_fdbk.c ****   else
1215:Src/pwm_curr_fdbk.c ****   {
1216:Src/pwm_curr_fdbk.c **** #endif
1217:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeSetDuty = pCallBack;
 1944              		.loc 1 1217 5 view .LVU579
 1945              		.loc 1 1217 41 is_stmt 0 view .LVU580
 1946 0000 4862     		str	r0, [r1, #36]
1218:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1219:Src/pwm_curr_fdbk.c ****   }
1220:Src/pwm_curr_fdbk.c **** #endif
1221:Src/pwm_curr_fdbk.c **** }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 78


 1947              		.loc 1 1221 1 view .LVU581
 1948 0002 7047     		bx	lr
 1949              		.cfi_endproc
 1950              	.LFE1124:
 1952              		.text
 1953              	.Letext0:
 1954              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 1955              		.file 4 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 1956              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 1957              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_tim.h"
 1958              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h"
 1959              		.file 8 "Inc/mc_type.h"
 1960              		.file 9 "Inc/pwm_curr_fdbk.h"
 1961              		.file 10 "Inc/mc_math.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 79


DEFINED SYMBOLS
                            *ABS*:00000000 pwm_curr_fdbk.c
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:20     .text.PWMC_Clear:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:27     .text.PWMC_Clear:00000000 PWMC_Clear
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:54     .text.PWMC_SetOffsetCalib:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:61     .text.PWMC_SetOffsetCalib:00000000 PWMC_SetOffsetCalib
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:83     .text.PWMC_GetOffsetCalib:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:90     .text.PWMC_GetOffsetCalib:00000000 PWMC_GetOffsetCalib
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:112    .text.PWMC_GetPhaseCurrents:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:119    .text.PWMC_GetPhaseCurrents:00000000 PWMC_GetPhaseCurrents
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:136    .text.PWMC_SetPhaseVoltage:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:143    .text.PWMC_SetPhaseVoltage:00000000 PWMC_SetPhaseVoltage
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:759    .text.PWMC_SetPhaseVoltage:00000310 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:765    .text.PWMC_SwitchOffPWM:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:772    .text.PWMC_SwitchOffPWM:00000000 PWMC_SwitchOffPWM
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:789    .text.PWMC_SwitchOnPWM:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:796    .text.PWMC_SwitchOnPWM:00000000 PWMC_SwitchOnPWM
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:813    .text.PWMC_CurrentReadingCalibr:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:820    .text.PWMC_CurrentReadingCalibr:00000000 PWMC_CurrentReadingCalibr
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:930    .text.PWMC_CalcPhaseCurrentsEst:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:937    .text.PWMC_CalcPhaseCurrentsEst:00000000 PWMC_CalcPhaseCurrentsEst
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1079   .text.PWMC_TurnOnLowSides:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1086   .text.PWMC_TurnOnLowSides:00000000 PWMC_TurnOnLowSides
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1103   .text.PWMC_OCP_Handler:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1110   .text.PWMC_OCP_Handler:00000000 PWMC_OCP_Handler
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1224   .text.PWMC_DP_Handler:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1231   .text.PWMC_DP_Handler:00000000 PWMC_DP_Handler
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1344   .text.PWMC_OVP_Handler:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1351   .text.PWMC_OVP_Handler:00000000 PWMC_OVP_Handler
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1388   .text.PWMC_IsFaultOccurred:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1395   .text.PWMC_IsFaultOccurred:00000000 PWMC_IsFaultOccurred
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1468   .text.PWMC_OCPSetReferenceVoltage:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1475   .text.PWMC_OCPSetReferenceVoltage:00000000 PWMC_OCPSetReferenceVoltage
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1492   .text.PWMC_GetTurnOnLowSidesAction:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1499   .text.PWMC_GetTurnOnLowSidesAction:00000000 PWMC_GetTurnOnLowSidesAction
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1517   .text.PWMC_DPWM_ModeEnable:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1524   .text.PWMC_DPWM_ModeEnable:00000000 PWMC_DPWM_ModeEnable
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1542   .text.PWMC_DPWM_ModeDisable:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1549   .text.PWMC_DPWM_ModeDisable:00000000 PWMC_DPWM_ModeDisable
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1567   .text.PWMC_GetDPWM_Mode:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1574   .text.PWMC_GetDPWM_Mode:00000000 PWMC_GetDPWM_Mode
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1592   .text.PWMC_RLDetectionModeEnable:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1599   .text.PWMC_RLDetectionModeEnable:00000000 PWMC_RLDetectionModeEnable
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1616   .text.PWMC_RLDetectionModeDisable:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1623   .text.PWMC_RLDetectionModeDisable:00000000 PWMC_RLDetectionModeDisable
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1640   .text.PWMC_RLDetectionModeSetDuty:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1647   .text.PWMC_RLDetectionModeSetDuty:00000000 PWMC_RLDetectionModeSetDuty
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1665   .text.PWMC_RLTurnOnLowSidesAndStart:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1672   .text.PWMC_RLTurnOnLowSidesAndStart:00000000 PWMC_RLTurnOnLowSidesAndStart
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1689   .text.PWMC_SetAlignFlag:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1696   .text.PWMC_SetAlignFlag:00000000 PWMC_SetAlignFlag
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1713   .text.PWMC_RegisterGetPhaseCurrentsCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1720   .text.PWMC_RegisterGetPhaseCurrentsCallBack:00000000 PWMC_RegisterGetPhaseCurrentsCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1737   .text.PWMC_RegisterSwitchOffPwmCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1744   .text.PWMC_RegisterSwitchOffPwmCallBack:00000000 PWMC_RegisterSwitchOffPwmCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1761   .text.PWMC_RegisterSwitchonPwmCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1768   .text.PWMC_RegisterSwitchonPwmCallBack:00000000 PWMC_RegisterSwitchonPwmCallBack
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s 			page 80


C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1785   .text.PWMC_RegisterReadingCalibrationCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1792   .text.PWMC_RegisterReadingCalibrationCallBack:00000000 PWMC_RegisterReadingCalibrationCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1809   .text.PWMC_RegisterTurnOnLowSidesCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1816   .text.PWMC_RegisterTurnOnLowSidesCallBack:00000000 PWMC_RegisterTurnOnLowSidesCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1833   .text.PWMC_RegisterSampPointSectXCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1840   .text.PWMC_RegisterSampPointSectXCallBack:00000000 PWMC_RegisterSampPointSectXCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1857   .text.PWMC_RegisterOCPSetRefVoltageCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1864   .text.PWMC_RegisterOCPSetRefVoltageCallBack:00000000 PWMC_RegisterOCPSetRefVoltageCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1881   .text.PWMC_RegisterRLDetectionModeEnableCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1888   .text.PWMC_RegisterRLDetectionModeEnableCallBack:00000000 PWMC_RegisterRLDetectionModeEnableCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1905   .text.PWMC_RegisterRLDetectionModeDisableCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1912   .text.PWMC_RegisterRLDetectionModeDisableCallBack:00000000 PWMC_RegisterRLDetectionModeDisableCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1929   .text.PWMC_RegisterRLDetectionModeSetDutyCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccxRLTGc.s:1936   .text.PWMC_RegisterRLDetectionModeSetDutyCallBack:00000000 PWMC_RegisterRLDetectionModeSetDutyCallBack

UNDEFINED SYMBOLS
MCM_Rev_Park
