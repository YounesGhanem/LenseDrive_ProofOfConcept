ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"mc_math.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MCM_Clarke,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.weak	MCM_Clarke
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MCM_Clarke:
  28              	.LFB1090:
  29              		.file 1 "Src/mc_math.c"
   1:Src/mc_math.c **** 
   2:Src/mc_math.c **** /**
   3:Src/mc_math.c ****   ******************************************************************************
   4:Src/mc_math.c ****   * @file    mc_math.c
   5:Src/mc_math.c ****   * @author  Motor Control SDK Team, ST Microelectronics
   6:Src/mc_math.c ****   * @brief   This file provides mathematics functions useful for and specific to
   7:Src/mc_math.c ****   *          Motor Control.
   8:Src/mc_math.c ****   *
   9:Src/mc_math.c ****   ******************************************************************************
  10:Src/mc_math.c ****   * @attention
  11:Src/mc_math.c ****   *
  12:Src/mc_math.c ****   * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
  13:Src/mc_math.c ****   * All rights reserved.</center></h2>
  14:Src/mc_math.c ****   *
  15:Src/mc_math.c ****   * This software component is licensed by ST under Ultimate Liberty license
  16:Src/mc_math.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  17:Src/mc_math.c ****   * the License. You may obtain a copy of the License at:
  18:Src/mc_math.c ****   *                             www.st.com/SLA0044
  19:Src/mc_math.c ****   *
  20:Src/mc_math.c ****   ******************************************************************************
  21:Src/mc_math.c ****   */
  22:Src/mc_math.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/mc_math.c **** #include "mc_math.h"
  24:Src/mc_math.c **** #include "mc_type.h"
  25:Src/mc_math.c **** 
  26:Src/mc_math.c **** /** @addtogroup MCSDK
  27:Src/mc_math.c ****   * @{
  28:Src/mc_math.c ****   */
  29:Src/mc_math.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 2


  30:Src/mc_math.c **** /** @defgroup MC_Math Motor Control Math functions
  31:Src/mc_math.c ****   * @brief Motor Control Mathematic functions of the Motor Control SDK
  32:Src/mc_math.c ****   *
  33:Src/mc_math.c ****   * @todo Document the Motor Control Math "module".
  34:Src/mc_math.c ****   *
  35:Src/mc_math.c ****   * @{
  36:Src/mc_math.c ****   */
  37:Src/mc_math.c **** 
  38:Src/mc_math.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/mc_math.c **** 
  40:Src/mc_math.c **** #define SIN_COS_TABLE {\
  41:Src/mc_math.c ****     0x0000,0x00C9,0x0192,0x025B,0x0324,0x03ED,0x04B6,0x057F,\
  42:Src/mc_math.c ****     0x0648,0x0711,0x07D9,0x08A2,0x096A,0x0A33,0x0AFB,0x0BC4,\
  43:Src/mc_math.c ****     0x0C8C,0x0D54,0x0E1C,0x0EE3,0x0FAB,0x1072,0x113A,0x1201,\
  44:Src/mc_math.c ****     0x12C8,0x138F,0x1455,0x151C,0x15E2,0x16A8,0x176E,0x1833,\
  45:Src/mc_math.c ****     0x18F9,0x19BE,0x1A82,0x1B47,0x1C0B,0x1CCF,0x1D93,0x1E57,\
  46:Src/mc_math.c ****     0x1F1A,0x1FDD,0x209F,0x2161,0x2223,0x22E5,0x23A6,0x2467,\
  47:Src/mc_math.c ****     0x2528,0x25E8,0x26A8,0x2767,0x2826,0x28E5,0x29A3,0x2A61,\
  48:Src/mc_math.c ****     0x2B1F,0x2BDC,0x2C99,0x2D55,0x2E11,0x2ECC,0x2F87,0x3041,\
  49:Src/mc_math.c ****     0x30FB,0x31B5,0x326E,0x3326,0x33DF,0x3496,0x354D,0x3604,\
  50:Src/mc_math.c ****     0x36BA,0x376F,0x3824,0x38D9,0x398C,0x3A40,0x3AF2,0x3BA5,\
  51:Src/mc_math.c ****     0x3C56,0x3D07,0x3DB8,0x3E68,0x3F17,0x3FC5,0x4073,0x4121,\
  52:Src/mc_math.c ****     0x41CE,0x427A,0x4325,0x43D0,0x447A,0x4524,0x45CD,0x4675,\
  53:Src/mc_math.c ****     0x471C,0x47C3,0x4869,0x490F,0x49B4,0x4A58,0x4AFB,0x4B9D,\
  54:Src/mc_math.c ****     0x4C3F,0x4CE0,0x4D81,0x4E20,0x4EBF,0x4F5D,0x4FFB,0x5097,\
  55:Src/mc_math.c ****     0x5133,0x51CE,0x5268,0x5302,0x539B,0x5432,0x54C9,0x5560,\
  56:Src/mc_math.c ****     0x55F5,0x568A,0x571D,0x57B0,0x5842,0x58D3,0x5964,0x59F3,\
  57:Src/mc_math.c ****     0x5A82,0x5B0F,0x5B9C,0x5C28,0x5CB3,0x5D3E,0x5DC7,0x5E4F,\
  58:Src/mc_math.c ****     0x5ED7,0x5F5D,0x5FE3,0x6068,0x60EB,0x616E,0x61F0,0x6271,\
  59:Src/mc_math.c ****     0x62F1,0x6370,0x63EE,0x646C,0x64E8,0x6563,0x65DD,0x6656,\
  60:Src/mc_math.c ****     0x66CF,0x6746,0x67BC,0x6832,0x68A6,0x6919,0x698B,0x69FD,\
  61:Src/mc_math.c ****     0x6A6D,0x6ADC,0x6B4A,0x6BB7,0x6C23,0x6C8E,0x6CF8,0x6D61,\
  62:Src/mc_math.c ****     0x6DC9,0x6E30,0x6E96,0x6EFB,0x6F5E,0x6FC1,0x7022,0x7083,\
  63:Src/mc_math.c ****     0x70E2,0x7140,0x719D,0x71F9,0x7254,0x72AE,0x7307,0x735E,\
  64:Src/mc_math.c ****     0x73B5,0x740A,0x745F,0x74B2,0x7504,0x7555,0x75A5,0x75F3,\
  65:Src/mc_math.c ****     0x7641,0x768D,0x76D8,0x7722,0x776B,0x77B3,0x77FA,0x783F,\
  66:Src/mc_math.c ****     0x7884,0x78C7,0x7909,0x794A,0x7989,0x79C8,0x7A05,0x7A41,\
  67:Src/mc_math.c ****     0x7A7C,0x7AB6,0x7AEE,0x7B26,0x7B5C,0x7B91,0x7BC5,0x7BF8,\
  68:Src/mc_math.c ****     0x7C29,0x7C59,0x7C88,0x7CB6,0x7CE3,0x7D0E,0x7D39,0x7D62,\
  69:Src/mc_math.c ****     0x7D89,0x7DB0,0x7DD5,0x7DFA,0x7E1D,0x7E3E,0x7E5F,0x7E7E,\
  70:Src/mc_math.c ****     0x7E9C,0x7EB9,0x7ED5,0x7EEF,0x7F09,0x7F21,0x7F37,0x7F4D,\
  71:Src/mc_math.c ****     0x7F61,0x7F74,0x7F86,0x7F97,0x7FA6,0x7FB4,0x7FC1,0x7FCD,\
  72:Src/mc_math.c ****     0x7FD8,0x7FE1,0x7FE9,0x7FF0,0x7FF5,0x7FF9,0x7FFD,0x7FFE}
  73:Src/mc_math.c **** 
  74:Src/mc_math.c **** #define SIN_MASK        0x0300u
  75:Src/mc_math.c **** #define U0_90           0x0200u
  76:Src/mc_math.c **** #define U90_180         0x0300u
  77:Src/mc_math.c **** #define U180_270        0x0000u
  78:Src/mc_math.c **** #define U270_360        0x0100u
  79:Src/mc_math.c **** 
  80:Src/mc_math.c **** /* Private variables ---------------------------------------------------------*/
  81:Src/mc_math.c **** const int16_t hSin_Cos_Table[256] = SIN_COS_TABLE;
  82:Src/mc_math.c **** 
  83:Src/mc_math.c **** #define divSQRT_3 (int32_t)0x49E6    /* 1/sqrt(3) in q1.15 format=0.5773315 */
  84:Src/mc_math.c **** 
  85:Src/mc_math.c **** #if defined (CCMRAM)
  86:Src/mc_math.c **** #if defined (__ICCARM__)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 3


  87:Src/mc_math.c **** #pragma location = ".ccmram"
  88:Src/mc_math.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
  89:Src/mc_math.c **** __attribute__( ( section ( ".ccmram" ) ) )
  90:Src/mc_math.c **** #endif
  91:Src/mc_math.c **** #endif
  92:Src/mc_math.c **** /**
  93:Src/mc_math.c ****   * @brief  This function transforms stator values a and b (which are
  94:Src/mc_math.c ****   *         directed along axes each displaced by 120 degrees) into values
  95:Src/mc_math.c ****   *         alpha and beta in a stationary qd reference frame.
  96:Src/mc_math.c ****   *                               alpha = a
  97:Src/mc_math.c ****   *                       beta = -(2*b+a)/sqrt(3)
  98:Src/mc_math.c ****   * @param  Input: stator values a and b in ab_t format.
  99:Src/mc_math.c ****   * @retval Stator values alpha and beta in alphabeta_t format.
 100:Src/mc_math.c ****   */
 101:Src/mc_math.c **** __weak alphabeta_t MCM_Clarke(ab_t Input)
 102:Src/mc_math.c **** {
  30              		.loc 1 102 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 16
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 103:Src/mc_math.c ****   alphabeta_t Output;
 104:Src/mc_math.c **** 
 105:Src/mc_math.c ****   int32_t a_divSQRT3_tmp;
 106:Src/mc_math.c ****   int32_t b_divSQRT3_tmp;
 107:Src/mc_math.c ****   int32_t wbeta_tmp;
 108:Src/mc_math.c ****   int16_t hbeta_tmp;
 109:Src/mc_math.c **** 
 110:Src/mc_math.c ****   /* qIalpha = qIas*/
 111:Src/mc_math.c ****   Output.alpha = Input.a;
 112:Src/mc_math.c **** 
 113:Src/mc_math.c ****   a_divSQRT3_tmp = divSQRT_3 * ((int32_t)Input.a);
 114:Src/mc_math.c **** 
 115:Src/mc_math.c ****   b_divSQRT3_tmp = divSQRT_3 * ((int32_t)Input.b);
  35              		.loc 1 115 18 is_stmt 0 view .LVU1
  36 0000 44F6E611 		movw	r1, #18918
  37 0004 03B2     		sxth	r3, r0
  38              	.LVL0:
 103:Src/mc_math.c ****   alphabeta_t Output;
  39              		.loc 1 103 3 is_stmt 1 view .LVU2
 105:Src/mc_math.c ****   int32_t b_divSQRT3_tmp;
  40              		.loc 1 105 3 view .LVU3
 106:Src/mc_math.c ****   int32_t wbeta_tmp;
  41              		.loc 1 106 3 view .LVU4
 107:Src/mc_math.c ****   int16_t hbeta_tmp;
  42              		.loc 1 107 3 view .LVU5
 108:Src/mc_math.c **** 
  43              		.loc 1 108 3 view .LVU6
 111:Src/mc_math.c **** 
  44              		.loc 1 111 3 view .LVU7
 113:Src/mc_math.c **** 
  45              		.loc 1 113 3 view .LVU8
  46              		.loc 1 115 3 view .LVU9
 113:Src/mc_math.c **** 
  47              		.loc 1 113 18 is_stmt 0 view .LVU10
  48 0006 13FB01F2 		smulbb	r2, r3, r1
 102:Src/mc_math.c ****   alphabeta_t Output;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 4


  49              		.loc 1 102 1 view .LVU11
  50 000a C0F30F40 		ubfx	r0, r0, #16, #16
  51              		.loc 1 115 18 view .LVU12
  52 000e 10FB01F1 		smulbb	r1, r0, r1
  53              	.LVL1:
 116:Src/mc_math.c **** 
 117:Src/mc_math.c ****   /* qIbeta = -(2*qIbs+qIas)/sqrt(3) */
 118:Src/mc_math.c **** #ifndef FULL_MISRA_C_COMPLIANCY_MC_MATH
 119:Src/mc_math.c ****   /* WARNING: the below instruction is not MISRA compliant, user should verify
 120:Src/mc_math.c ****     that Cortex-M3 assembly instruction ASR (arithmetic shift right) is used by
 121:Src/mc_math.c ****     the compiler to perform the shift (instead of LSR logical shift right) */
 122:Src/mc_math.c ****   //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 123:Src/mc_math.c ****   wbeta_tmp = (-(a_divSQRT3_tmp) - (b_divSQRT3_tmp) - (b_divSQRT3_tmp)) >> 15;
  54              		.loc 1 123 3 is_stmt 1 view .LVU13
  55              		.loc 1 123 16 is_stmt 0 view .LVU14
  56 0012 5042     		rsbs	r0, r2, #0
  57              		.loc 1 123 53 view .LVU15
  58 0014 A0EB4100 		sub	r0, r0, r1, lsl #1
  59              	.LVL2:
 124:Src/mc_math.c **** #else
 125:Src/mc_math.c ****   wbeta_tmp = (-(a_divSQRT3_tmp) - (b_divSQRT3_tmp) - (b_divSQRT3_tmp)) / 32768;
 126:Src/mc_math.c **** #endif
 127:Src/mc_math.c **** 
 128:Src/mc_math.c ****   /* Check saturation of Ibeta */
 129:Src/mc_math.c ****   if (wbeta_tmp > INT16_MAX)
  60              		.loc 1 129 3 is_stmt 1 view .LVU16
  61              		.loc 1 129 6 is_stmt 0 view .LVU17
  62 0018 B0F1804F 		cmp	r0, #1073741824
 102:Src/mc_math.c ****   alphabeta_t Output;
  63              		.loc 1 102 1 view .LVU18
  64 001c 84B0     		sub	sp, sp, #16
  65              	.LCFI0:
  66              		.cfi_def_cfa_offset 16
  67              		.loc 1 129 6 view .LVU19
  68 001e 05DA     		bge	.L3
  69 0020 C113     		asrs	r1, r0, #15
  70              	.LVL3:
 130:Src/mc_math.c ****   {
 131:Src/mc_math.c ****     hbeta_tmp = INT16_MAX;
 132:Src/mc_math.c ****   }
 133:Src/mc_math.c ****   else if (wbeta_tmp < (-32768))
  71              		.loc 1 133 8 is_stmt 1 view .LVU20
  72              		.loc 1 133 11 is_stmt 0 view .LVU21
  73 0022 11F5004F 		cmn	r1, #32768
  74 0026 0CDA     		bge	.L7
  75 0028 094A     		ldr	r2, .L8
  76 002a 01E0     		b	.L2
  77              	.LVL4:
  78              	.L3:
  79              		.loc 1 133 11 view .LVU22
  80 002c 47F6FF72 		movw	r2, #32767
  81              	.LVL5:
  82              	.L2:
 134:Src/mc_math.c ****   {
 135:Src/mc_math.c ****     hbeta_tmp =  ((int16_t)-32768);
 136:Src/mc_math.c ****   }
 137:Src/mc_math.c ****   else
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 5


 138:Src/mc_math.c ****   {
 139:Src/mc_math.c ****     hbeta_tmp = ((int16_t)wbeta_tmp);
 140:Src/mc_math.c ****   }
 141:Src/mc_math.c **** 
 142:Src/mc_math.c ****   Output.beta = hbeta_tmp;
  83              		.loc 1 142 3 is_stmt 1 view .LVU23
 143:Src/mc_math.c **** 
 144:Src/mc_math.c ****   if (((int16_t )-32768) == Output.beta)
  84              		.loc 1 144 3 view .LVU24
 145:Src/mc_math.c ****   {
 146:Src/mc_math.c ****     Output.beta = -32767;
 147:Src/mc_math.c ****   }
 148:Src/mc_math.c ****   else
 149:Src/mc_math.c ****   {
 150:Src/mc_math.c ****     /* Nothing to do */
 151:Src/mc_math.c ****   }
  85              		.loc 1 151 3 view .LVU25
 152:Src/mc_math.c **** 
 153:Src/mc_math.c ****   return (Output);
  86              		.loc 1 153 3 view .LVU26
  87              		.loc 1 153 10 is_stmt 0 view .LVU27
  88 0030 9BB2     		uxth	r3, r3
  89              		.loc 1 153 10 view .LVU28
  90 0032 0020     		movs	r0, #0
  91 0034 63F30F00 		bfi	r0, r3, #0, #16
  92 0038 93B2     		uxth	r3, r2
  93              	.LVL6:
  94              		.loc 1 153 10 view .LVU29
  95 003a 63F31F40 		bfi	r0, r3, #16, #16
 154:Src/mc_math.c **** }
  96              		.loc 1 154 1 view .LVU30
  97 003e 04B0     		add	sp, sp, #16
  98              	.LCFI1:
  99              		.cfi_remember_state
 100              		.cfi_def_cfa_offset 0
 101              		@ sp needed
 102 0040 7047     		bx	lr
 103              	.LVL7:
 104              	.L7:
 105              	.LCFI2:
 106              		.cfi_restore_state
 139:Src/mc_math.c ****   }
 107              		.loc 1 139 5 is_stmt 1 view .LVU31
 139:Src/mc_math.c ****   }
 108              		.loc 1 139 5 is_stmt 0 view .LVU32
 109 0042 0348     		ldr	r0, .L8
 110 0044 0AB2     		sxth	r2, r1
 111 0046 8242     		cmp	r2, r0
 112 0048 B8BF     		it	lt
 113 004a 0246     		movlt	r2, r0
 114 004c F0E7     		b	.L2
 115              	.L9:
 116 004e 00BF     		.align	2
 117              	.L8:
 118 0050 0180FFFF 		.word	-32767
 119              		.cfi_endproc
 120              	.LFE1090:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 6


 122              		.section	.text.MCM_Trig_Functions,"ax",%progbits
 123              		.align	1
 124              		.p2align 2,,3
 125              		.weak	MCM_Trig_Functions
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 130              	MCM_Trig_Functions:
 131              	.LVL8:
 132              	.LFB1093:
 155:Src/mc_math.c **** 
 156:Src/mc_math.c **** #if defined (CCMRAM)
 157:Src/mc_math.c **** #if defined (__ICCARM__)
 158:Src/mc_math.c **** #pragma location = ".ccmram"
 159:Src/mc_math.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 160:Src/mc_math.c **** __attribute__( ( section ( ".ccmram" ) ) )
 161:Src/mc_math.c **** #endif
 162:Src/mc_math.c **** #endif
 163:Src/mc_math.c **** /**
 164:Src/mc_math.c ****   * @brief  This function transforms stator values alpha and beta, which
 165:Src/mc_math.c ****   *         belong to a stationary qd reference frame, to a rotor flux
 166:Src/mc_math.c ****   *         synchronous reference frame (properly oriented), so as q and d.
 167:Src/mc_math.c ****   *                   d= alpha *sin(theta)+ beta *cos(Theta)
 168:Src/mc_math.c ****   *                   q= alpha *cos(Theta)- beta *sin(Theta)
 169:Src/mc_math.c ****   * @param  Input: stator values alpha and beta in alphabeta_t format.
 170:Src/mc_math.c ****   * @param  Theta: rotating frame angular position in q1.15 format.
 171:Src/mc_math.c ****   * @retval Stator values q and d in qd_t format
 172:Src/mc_math.c ****   */
 173:Src/mc_math.c **** __weak qd_t MCM_Park(alphabeta_t Input, int16_t Theta)
 174:Src/mc_math.c **** {
 175:Src/mc_math.c ****   qd_t Output;
 176:Src/mc_math.c ****   int32_t d_tmp_1;
 177:Src/mc_math.c ****   int32_t d_tmp_2;
 178:Src/mc_math.c ****   int32_t q_tmp_1;
 179:Src/mc_math.c ****   int32_t q_tmp_2;
 180:Src/mc_math.c ****   int32_t wqd_tmp;
 181:Src/mc_math.c ****   int16_t hqd_tmp;
 182:Src/mc_math.c ****   Trig_Components Local_Vector_Components;
 183:Src/mc_math.c **** 
 184:Src/mc_math.c ****   Local_Vector_Components = MCM_Trig_Functions(Theta);
 185:Src/mc_math.c **** 
 186:Src/mc_math.c ****   /* No overflow guaranteed */
 187:Src/mc_math.c ****   q_tmp_1 = Input.alpha * ((int32_t )Local_Vector_Components.hCos);
 188:Src/mc_math.c **** 
 189:Src/mc_math.c ****   /* No overflow guaranteed */
 190:Src/mc_math.c ****   q_tmp_2 = Input.beta * ((int32_t)Local_Vector_Components.hSin);
 191:Src/mc_math.c **** 
 192:Src/mc_math.c ****   /* Iq component in Q1.15 Format */
 193:Src/mc_math.c **** #ifndef FULL_MISRA_C_COMPLIANCY_MC_MATH
 194:Src/mc_math.c ****   /* WARNING: the below instruction is not MISRA compliant, user should verify
 195:Src/mc_math.c ****     that Cortex-M3 assembly instruction ASR (arithmetic shift right) is used by
 196:Src/mc_math.c ****     the compiler to perform the shift (instead of LSR logical shift right) */
 197:Src/mc_math.c ****   wqd_tmp = (q_tmp_1 - q_tmp_2) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Ru
 198:Src/mc_math.c **** #else
 199:Src/mc_math.c ****   wqd_tmp = (q_tmp_1 - q_tmp_2) / 32768;
 200:Src/mc_math.c **** #endif
 201:Src/mc_math.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 7


 202:Src/mc_math.c ****   /* Check saturation of Iq */
 203:Src/mc_math.c ****   if (wqd_tmp > INT16_MAX)
 204:Src/mc_math.c ****   {
 205:Src/mc_math.c ****     hqd_tmp = INT16_MAX;
 206:Src/mc_math.c ****   }
 207:Src/mc_math.c ****   else if (wqd_tmp < (-32768))
 208:Src/mc_math.c ****   {
 209:Src/mc_math.c ****     hqd_tmp = ((int16_t)-32768);
 210:Src/mc_math.c ****   }
 211:Src/mc_math.c ****   else
 212:Src/mc_math.c ****   {
 213:Src/mc_math.c ****     hqd_tmp = ((int16_t)wqd_tmp);
 214:Src/mc_math.c ****   }
 215:Src/mc_math.c **** 
 216:Src/mc_math.c ****   Output.q = hqd_tmp;
 217:Src/mc_math.c **** 
 218:Src/mc_math.c ****   if (((int16_t)-32768) == Output.q)
 219:Src/mc_math.c ****   {
 220:Src/mc_math.c ****     Output.q = -32767;
 221:Src/mc_math.c ****   }
 222:Src/mc_math.c ****   else
 223:Src/mc_math.c ****   {
 224:Src/mc_math.c ****     /* Nothing to do */
 225:Src/mc_math.c ****   }
 226:Src/mc_math.c **** 
 227:Src/mc_math.c ****   /* No overflow guaranteed */
 228:Src/mc_math.c ****   d_tmp_1 = Input.alpha * ((int32_t )Local_Vector_Components.hSin);
 229:Src/mc_math.c **** 
 230:Src/mc_math.c ****   /* No overflow guaranteed */
 231:Src/mc_math.c ****   d_tmp_2 = Input.beta * ((int32_t )Local_Vector_Components.hCos);
 232:Src/mc_math.c **** 
 233:Src/mc_math.c ****   /* Id component in Q1.15 Format */
 234:Src/mc_math.c **** #ifndef FULL_MISRA_C_COMPLIANCY_MC_MATH
 235:Src/mc_math.c ****   /* WARNING: the below instruction is not MISRA compliant, user should verify
 236:Src/mc_math.c ****     that Cortex-M3 assembly instruction ASR (arithmetic shift right) is used by
 237:Src/mc_math.c ****     the compiler to perform the shift (instead of LSR logical shift right) */
 238:Src/mc_math.c ****   wqd_tmp = (d_tmp_1 + d_tmp_2) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Ru
 239:Src/mc_math.c **** #else
 240:Src/mc_math.c ****   wqd_tmp = (d_tmp_1 + d_tmp_2) / 32768;
 241:Src/mc_math.c **** #endif
 242:Src/mc_math.c **** 
 243:Src/mc_math.c ****   /* Check saturation of Id */
 244:Src/mc_math.c ****   if (wqd_tmp > INT16_MAX)
 245:Src/mc_math.c ****   {
 246:Src/mc_math.c ****     hqd_tmp = INT16_MAX;
 247:Src/mc_math.c ****   }
 248:Src/mc_math.c ****   else if (wqd_tmp < (-32768))
 249:Src/mc_math.c ****   {
 250:Src/mc_math.c ****     hqd_tmp = ((int16_t)-32768);
 251:Src/mc_math.c ****   }
 252:Src/mc_math.c ****   else
 253:Src/mc_math.c ****   {
 254:Src/mc_math.c ****     hqd_tmp = ((int16_t)wqd_tmp);
 255:Src/mc_math.c ****   }
 256:Src/mc_math.c **** 
 257:Src/mc_math.c ****   Output.d = hqd_tmp;
 258:Src/mc_math.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 8


 259:Src/mc_math.c ****   if (((int16_t)-32768) == Output.d)
 260:Src/mc_math.c ****   {
 261:Src/mc_math.c ****     Output.d = -32767;
 262:Src/mc_math.c ****   }
 263:Src/mc_math.c ****   else
 264:Src/mc_math.c ****   {
 265:Src/mc_math.c ****     /* Nothing to do */
 266:Src/mc_math.c ****   }
 267:Src/mc_math.c **** 
 268:Src/mc_math.c ****   return (Output);
 269:Src/mc_math.c **** }
 270:Src/mc_math.c **** 
 271:Src/mc_math.c **** #if defined (CCMRAM)
 272:Src/mc_math.c **** #if defined (__ICCARM__)
 273:Src/mc_math.c **** #pragma location = ".ccmram"
 274:Src/mc_math.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 275:Src/mc_math.c **** __attribute__( ( section ( ".ccmram" ) ) )
 276:Src/mc_math.c **** #endif
 277:Src/mc_math.c **** #endif
 278:Src/mc_math.c **** /**
 279:Src/mc_math.c ****   * @brief  This function transforms stator voltage qVq and qVd, that belong to
 280:Src/mc_math.c ****   *         a rotor flux synchronous rotating frame, to a stationary reference
 281:Src/mc_math.c ****   *         frame, so as to obtain qValpha and qVbeta:
 282:Src/mc_math.c ****   *                  Valfa= Vq*Cos(theta)+ Vd*Sin(theta)
 283:Src/mc_math.c ****   *                  Vbeta=-Vq*Sin(theta)+ Vd*Cos(theta)
 284:Src/mc_math.c ****   * @param  Input: stator voltage Vq and Vd in qd_t format.
 285:Src/mc_math.c ****   * @param  Theta: rotating frame angular position in q1.15 format.
 286:Src/mc_math.c ****   * @retval Stator voltage Valpha and Vbeta in qd_t format.
 287:Src/mc_math.c ****   */
 288:Src/mc_math.c **** __weak alphabeta_t MCM_Rev_Park(qd_t Input, int16_t Theta)
 289:Src/mc_math.c **** {
 290:Src/mc_math.c ****   int32_t alpha_tmp1;
 291:Src/mc_math.c ****   int32_t alpha_tmp2;
 292:Src/mc_math.c ****   int32_t beta_tmp1;
 293:Src/mc_math.c ****   int32_t beta_tmp2;
 294:Src/mc_math.c ****   Trig_Components Local_Vector_Components;
 295:Src/mc_math.c ****   alphabeta_t Output;
 296:Src/mc_math.c **** 
 297:Src/mc_math.c ****   Local_Vector_Components = MCM_Trig_Functions(Theta);
 298:Src/mc_math.c **** 
 299:Src/mc_math.c ****   /* No overflow guaranteed */
 300:Src/mc_math.c ****   alpha_tmp1 = Input.q * ((int32_t)Local_Vector_Components.hCos);
 301:Src/mc_math.c ****   alpha_tmp2 = Input.d * ((int32_t)Local_Vector_Components.hSin);
 302:Src/mc_math.c **** 
 303:Src/mc_math.c **** #ifndef FULL_MISRA_C_COMPLIANCY_MC_MATH
 304:Src/mc_math.c ****   /* WARNING: the below instruction is not MISRA compliant, user should verify
 305:Src/mc_math.c ****     that Cortex-M3 assembly instruction ASR (arithmetic shift right) is used by
 306:Src/mc_math.c ****     the compiler to perform the shift (instead of LSR logical shift right) */
 307:Src/mc_math.c ****   //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 308:Src/mc_math.c ****   Output.alpha = (int16_t)(((alpha_tmp1) + (alpha_tmp2)) >> 15);
 309:Src/mc_math.c **** #else
 310:Src/mc_math.c ****   Output.alpha = (int16_t)(((alpha_tmp1) + (alpha_tmp2)) / 32768);
 311:Src/mc_math.c **** #endif
 312:Src/mc_math.c **** 
 313:Src/mc_math.c ****   beta_tmp1 = Input.q * ((int32_t)Local_Vector_Components.hSin);
 314:Src/mc_math.c ****   beta_tmp2 = Input.d * ((int32_t)Local_Vector_Components.hCos);
 315:Src/mc_math.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 9


 316:Src/mc_math.c **** #ifndef FULL_MISRA_C_COMPLIANCY_MC_MATH
 317:Src/mc_math.c ****   /* WARNING: the below instruction is not MISRA compliant, user should verify
 318:Src/mc_math.c ****   that Cortex-M3 assembly instruction ASR (arithmetic shift right) is used by
 319:Src/mc_math.c ****   the compiler to perform the shift (instead of LSR logical shift right) */
 320:Src/mc_math.c ****   //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 321:Src/mc_math.c ****   Output.beta = (int16_t)((beta_tmp2 - beta_tmp1) >> 15);
 322:Src/mc_math.c **** #else
 323:Src/mc_math.c ****   Output.beta = (int16_t)((beta_tmp2 - beta_tmp1) / 32768);
 324:Src/mc_math.c **** #endif
 325:Src/mc_math.c **** 
 326:Src/mc_math.c ****   return (Output);
 327:Src/mc_math.c **** }
 328:Src/mc_math.c **** 
 329:Src/mc_math.c **** #if defined (CCMRAM)
 330:Src/mc_math.c **** #if defined (__ICCARM__)
 331:Src/mc_math.c **** #pragma location = ".ccmram"
 332:Src/mc_math.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 333:Src/mc_math.c **** __attribute__( ( section ( ".ccmram" ) ) )
 334:Src/mc_math.c **** #endif
 335:Src/mc_math.c **** #endif
 336:Src/mc_math.c **** /**
 337:Src/mc_math.c ****   * @brief  This function returns cosine and sine functions of the angle fed in input.
 338:Src/mc_math.c ****   * @param  hAngle: angle in q1.15 format.
 339:Src/mc_math.c ****   * @retval Sin(angle) and Cos(angle) in Trig_Components format.
 340:Src/mc_math.c ****   */
 341:Src/mc_math.c **** 
 342:Src/mc_math.c **** __weak Trig_Components MCM_Trig_Functions(int16_t hAngle)
 343:Src/mc_math.c **** {
 133              		.loc 1 343 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 8
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 344:Src/mc_math.c **** 
 345:Src/mc_math.c ****   int32_t shindex;
 138              		.loc 1 345 3 view .LVU34
 346:Src/mc_math.c ****   uint16_t uhindex;
 139              		.loc 1 346 3 view .LVU35
 347:Src/mc_math.c **** 
 348:Src/mc_math.c ****   Trig_Components Local_Components;
 140              		.loc 1 348 3 view .LVU36
 349:Src/mc_math.c **** 
 350:Src/mc_math.c ****   /* 10 bit index computation  */
 351:Src/mc_math.c ****   shindex = (((int32_t)32768) + ((int32_t)hAngle));
 141              		.loc 1 351 3 view .LVU37
 352:Src/mc_math.c ****   uhindex = (uint16_t)shindex;
 142              		.loc 1 352 3 view .LVU38
 351:Src/mc_math.c ****   uhindex = (uint16_t)shindex;
 143              		.loc 1 351 11 is_stmt 0 view .LVU39
 144 0000 00F50040 		add	r0, r0, #32768
 145              	.LVL9:
 353:Src/mc_math.c ****   uhindex /= ((uint16_t)64);
 146              		.loc 1 353 3 is_stmt 1 view .LVU40
 147              		.loc 1 353 11 is_stmt 0 view .LVU41
 148 0004 C0F38910 		ubfx	r0, r0, #6, #10
 149              	.LVL10:
 354:Src/mc_math.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 10


 355:Src/mc_math.c ****   switch (((uint16_t)uhindex) & SIN_MASK)
 150              		.loc 1 355 3 is_stmt 1 view .LVU42
 151 0008 00F44071 		and	r1, r0, #768
 152 000c B1F5007F 		cmp	r1, #512
 343:Src/mc_math.c **** 
 153              		.loc 1 343 1 is_stmt 0 view .LVU43
 154 0010 82B0     		sub	sp, sp, #8
 155              	.LCFI3:
 156              		.cfi_def_cfa_offset 8
 157              		.loc 1 355 3 view .LVU44
 158 0012 28D0     		beq	.L11
 159 0014 4FF00003 		mov	r3, #0
 160 0018 1A46     		mov	r2, r3
 161 001a 16D8     		bhi	.L12
 162 001c 61B3     		cbz	r1, .L13
 163 001e B1F5807F 		cmp	r1, #256
 164 0022 09D1     		bne	.L15
 356:Src/mc_math.c ****   {
 357:Src/mc_math.c ****     case U0_90:
 358:Src/mc_math.c ****     {
 359:Src/mc_math.c ****       Local_Components.hSin = hSin_Cos_Table[( uint8_t )( uhindex )];
 360:Src/mc_math.c ****       Local_Components.hCos = hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 361:Src/mc_math.c ****       break;
 362:Src/mc_math.c ****     }
 363:Src/mc_math.c **** 
 364:Src/mc_math.c ****     case U90_180:
 365:Src/mc_math.c ****     {
 366:Src/mc_math.c ****       Local_Components.hSin = hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 367:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( uhindex )];
 368:Src/mc_math.c ****       break;
 369:Src/mc_math.c ****     }
 370:Src/mc_math.c **** 
 371:Src/mc_math.c ****     case U180_270:
 372:Src/mc_math.c ****     {
 373:Src/mc_math.c ****       Local_Components.hSin = -hSin_Cos_Table[( uint8_t )( uhindex )];
 374:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 375:Src/mc_math.c ****       break;
 376:Src/mc_math.c ****     }
 377:Src/mc_math.c **** 
 378:Src/mc_math.c ****     case U270_360:
 379:Src/mc_math.c ****     {
 380:Src/mc_math.c ****       Local_Components.hSin =  -hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 165              		.loc 1 380 7 is_stmt 1 view .LVU45
 166              		.loc 1 380 69 is_stmt 0 view .LVU46
 167 0024 C0B2     		uxtb	r0, r0
 168              	.LVL11:
 169              		.loc 1 380 48 view .LVU47
 170 0026 C243     		mvns	r2, r0
 171              		.loc 1 380 47 view .LVU48
 172 0028 1A49     		ldr	r1, .L18
 173              		.loc 1 380 48 view .LVU49
 174 002a D2B2     		uxtb	r2, r2
 381:Src/mc_math.c ****       Local_Components.hCos =  hSin_Cos_Table[( uint8_t )( uhindex )];
 175              		.loc 1 381 46 view .LVU50
 176 002c 31F91030 		ldrsh	r3, [r1, r0, lsl #1]
 380:Src/mc_math.c ****       Local_Components.hCos =  hSin_Cos_Table[( uint8_t )( uhindex )];
 177              		.loc 1 380 29 view .LVU51
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 11


 178 0030 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 179 0034 5242     		rsbs	r2, r2, #0
 180 0036 12B2     		sxth	r2, r2
 181              	.LVL12:
 182              		.loc 1 381 7 is_stmt 1 view .LVU52
 382:Src/mc_math.c ****       break;
 183              		.loc 1 382 7 view .LVU53
 184              	.L15:
 383:Src/mc_math.c ****     }
 384:Src/mc_math.c **** 
 385:Src/mc_math.c ****     default:
 386:Src/mc_math.c ****       break;
 387:Src/mc_math.c ****   }
 388:Src/mc_math.c ****   return (Local_Components);
 185              		.loc 1 388 3 view .LVU54
 186              		.loc 1 388 10 is_stmt 0 view .LVU55
 187 0038 9BB2     		uxth	r3, r3
 188 003a 0020     		movs	r0, #0
 189 003c 63F30F00 		bfi	r0, r3, #0, #16
 190 0040 92B2     		uxth	r2, r2
 191 0042 62F31F40 		bfi	r0, r2, #16, #16
 389:Src/mc_math.c **** }
 192              		.loc 1 389 1 view .LVU56
 193 0046 02B0     		add	sp, sp, #8
 194              	.LCFI4:
 195              		.cfi_remember_state
 196              		.cfi_def_cfa_offset 0
 197              		@ sp needed
 198 0048 7047     		bx	lr
 199              	.LVL13:
 200              	.L12:
 201              	.LCFI5:
 202              		.cfi_restore_state
 355:Src/mc_math.c ****   {
 203              		.loc 1 355 3 view .LVU57
 204 004a B1F5407F 		cmp	r1, #768
 205 004e F3D1     		bne	.L15
 366:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( uhindex )];
 206              		.loc 1 366 7 is_stmt 1 view .LVU58
 366:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( uhindex )];
 207              		.loc 1 366 45 is_stmt 0 view .LVU59
 208 0050 1049     		ldr	r1, .L18
 366:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( uhindex )];
 209              		.loc 1 366 67 view .LVU60
 210 0052 C0B2     		uxtb	r0, r0
 211              	.LVL14:
 366:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( uhindex )];
 212              		.loc 1 366 46 view .LVU61
 213 0054 C243     		mvns	r2, r0
 367:Src/mc_math.c ****       break;
 214              		.loc 1 367 29 view .LVU62
 215 0056 31F81030 		ldrh	r3, [r1, r0, lsl #1]
 366:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( uhindex )];
 216              		.loc 1 366 46 view .LVU63
 217 005a D2B2     		uxtb	r2, r2
 367:Src/mc_math.c ****       break;
 218              		.loc 1 367 29 view .LVU64
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 12


 219 005c 5B42     		rsbs	r3, r3, #0
 366:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( uhindex )];
 220              		.loc 1 366 45 view .LVU65
 221 005e 31F91220 		ldrsh	r2, [r1, r2, lsl #1]
 222              	.LVL15:
 367:Src/mc_math.c ****       break;
 223              		.loc 1 367 7 is_stmt 1 view .LVU66
 367:Src/mc_math.c ****       break;
 224              		.loc 1 367 29 is_stmt 0 view .LVU67
 225 0062 1BB2     		sxth	r3, r3
 226              	.LVL16:
 368:Src/mc_math.c ****     }
 227              		.loc 1 368 7 is_stmt 1 view .LVU68
 228 0064 E8E7     		b	.L15
 229              	.LVL17:
 230              	.L11:
 359:Src/mc_math.c ****       Local_Components.hCos = hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 231              		.loc 1 359 7 view .LVU69
 359:Src/mc_math.c ****       Local_Components.hCos = hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 232              		.loc 1 359 46 is_stmt 0 view .LVU70
 233 0066 C0B2     		uxtb	r0, r0
 234              	.LVL18:
 360:Src/mc_math.c ****       break;
 235              		.loc 1 360 46 view .LVU71
 236 0068 C343     		mvns	r3, r0
 359:Src/mc_math.c ****       Local_Components.hCos = hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 237              		.loc 1 359 45 view .LVU72
 238 006a 0A49     		ldr	r1, .L18
 360:Src/mc_math.c ****       break;
 239              		.loc 1 360 46 view .LVU73
 240 006c DBB2     		uxtb	r3, r3
 359:Src/mc_math.c ****       Local_Components.hCos = hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 241              		.loc 1 359 45 view .LVU74
 242 006e 31F91020 		ldrsh	r2, [r1, r0, lsl #1]
 243              	.LVL19:
 360:Src/mc_math.c ****       break;
 244              		.loc 1 360 7 is_stmt 1 view .LVU75
 360:Src/mc_math.c ****       break;
 245              		.loc 1 360 45 is_stmt 0 view .LVU76
 246 0072 31F91330 		ldrsh	r3, [r1, r3, lsl #1]
 247              	.LVL20:
 361:Src/mc_math.c ****     }
 248              		.loc 1 361 7 is_stmt 1 view .LVU77
 249 0076 DFE7     		b	.L15
 250              	.LVL21:
 251              	.L13:
 373:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 252              		.loc 1 373 7 view .LVU78
 373:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 253              		.loc 1 373 47 is_stmt 0 view .LVU79
 254 0078 C0B2     		uxtb	r0, r0
 255              	.LVL22:
 374:Src/mc_math.c ****       break;
 256              		.loc 1 374 47 view .LVU80
 257 007a C343     		mvns	r3, r0
 373:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 258              		.loc 1 373 46 view .LVU81
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 13


 259 007c 0549     		ldr	r1, .L18
 374:Src/mc_math.c ****       break;
 260              		.loc 1 374 47 view .LVU82
 261 007e DBB2     		uxtb	r3, r3
 373:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 262              		.loc 1 373 29 view .LVU83
 263 0080 31F81020 		ldrh	r2, [r1, r0, lsl #1]
 374:Src/mc_math.c ****       break;
 264              		.loc 1 374 29 view .LVU84
 265 0084 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 373:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 266              		.loc 1 373 29 view .LVU85
 267 0088 5242     		rsbs	r2, r2, #0
 374:Src/mc_math.c ****       break;
 268              		.loc 1 374 29 view .LVU86
 269 008a 5B42     		rsbs	r3, r3, #0
 373:Src/mc_math.c ****       Local_Components.hCos = -hSin_Cos_Table[( uint8_t )( 0xFFu - ( uint8_t )( uhindex ) )];
 270              		.loc 1 373 29 view .LVU87
 271 008c 12B2     		sxth	r2, r2
 272              	.LVL23:
 374:Src/mc_math.c ****       break;
 273              		.loc 1 374 7 is_stmt 1 view .LVU88
 374:Src/mc_math.c ****       break;
 274              		.loc 1 374 29 is_stmt 0 view .LVU89
 275 008e 1BB2     		sxth	r3, r3
 276              	.LVL24:
 375:Src/mc_math.c ****     }
 277              		.loc 1 375 7 is_stmt 1 view .LVU90
 278 0090 D2E7     		b	.L15
 279              	.L19:
 280 0092 00BF     		.align	2
 281              	.L18:
 282 0094 00000000 		.word	.LANCHOR0
 283              		.cfi_endproc
 284              	.LFE1093:
 286              		.section	.text.MCM_Park,"ax",%progbits
 287              		.align	1
 288              		.p2align 2,,3
 289              		.weak	MCM_Park
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 294              	MCM_Park:
 295              	.LVL25:
 296              	.LFB1091:
 174:Src/mc_math.c ****   qd_t Output;
 297              		.loc 1 174 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 16
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 174:Src/mc_math.c ****   qd_t Output;
 301              		.loc 1 174 1 is_stmt 0 view .LVU92
 302 0000 30B5     		push	{r4, r5, lr}
 303              	.LCFI6:
 304              		.cfi_def_cfa_offset 12
 305              		.cfi_offset 4, -12
 306              		.cfi_offset 5, -8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 14


 307              		.cfi_offset 14, -4
 308 0002 85B0     		sub	sp, sp, #20
 309              	.LCFI7:
 310              		.cfi_def_cfa_offset 32
 174:Src/mc_math.c ****   qd_t Output;
 311              		.loc 1 174 1 view .LVU93
 312 0004 0346     		mov	r3, r0
 313 0006 0546     		mov	r5, r0	@ movhi
 184:Src/mc_math.c **** 
 314              		.loc 1 184 29 view .LVU94
 315 0008 0846     		mov	r0, r1
 316 000a 1C14     		asrs	r4, r3, #16
 174:Src/mc_math.c ****   qd_t Output;
 317              		.loc 1 174 1 view .LVU95
 318 000c 0193     		str	r3, [sp, #4]
 184:Src/mc_math.c **** 
 319              		.loc 1 184 29 view .LVU96
 320 000e FFF7FEFF 		bl	MCM_Trig_Functions
 321              	.LVL26:
 184:Src/mc_math.c **** 
 322              		.loc 1 184 29 view .LVU97
 323 0012 2DB2     		sxth	r5, r5
 324              	.LVL27:
 175:Src/mc_math.c ****   int32_t d_tmp_1;
 325              		.loc 1 175 3 is_stmt 1 view .LVU98
 176:Src/mc_math.c ****   int32_t d_tmp_2;
 326              		.loc 1 176 3 view .LVU99
 177:Src/mc_math.c ****   int32_t q_tmp_1;
 327              		.loc 1 177 3 view .LVU100
 178:Src/mc_math.c ****   int32_t q_tmp_2;
 328              		.loc 1 178 3 view .LVU101
 179:Src/mc_math.c ****   int32_t wqd_tmp;
 329              		.loc 1 179 3 view .LVU102
 180:Src/mc_math.c ****   int16_t hqd_tmp;
 330              		.loc 1 180 3 view .LVU103
 181:Src/mc_math.c ****   Trig_Components Local_Vector_Components;
 331              		.loc 1 181 3 view .LVU104
 182:Src/mc_math.c **** 
 332              		.loc 1 182 3 view .LVU105
 184:Src/mc_math.c **** 
 333              		.loc 1 184 3 view .LVU106
 184:Src/mc_math.c **** 
 334              		.loc 1 184 29 is_stmt 0 view .LVU107
 335 0014 0FFA80FC 		sxth	ip, r0
 336              	.LVL28:
 184:Src/mc_math.c **** 
 337              		.loc 1 184 29 view .LVU108
 338 0018 0314     		asrs	r3, r0, #16
 339              	.LVL29:
 187:Src/mc_math.c **** 
 340              		.loc 1 187 3 is_stmt 1 view .LVU109
 190:Src/mc_math.c **** 
 341              		.loc 1 190 3 view .LVU110
 197:Src/mc_math.c **** #else
 342              		.loc 1 197 3 view .LVU111
 187:Src/mc_math.c **** 
 343              		.loc 1 187 11 is_stmt 0 view .LVU112
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 15


 344 001a 05FB0CF1 		mul	r1, r5, ip
 197:Src/mc_math.c **** #else
 345              		.loc 1 197 22 view .LVU113
 346 001e 04FB1311 		mls	r1, r4, r3, r1
 347              	.LVL30:
 203:Src/mc_math.c ****   {
 348              		.loc 1 203 3 is_stmt 1 view .LVU114
 203:Src/mc_math.c ****   {
 349              		.loc 1 203 6 is_stmt 0 view .LVU115
 350 0022 B1F1804F 		cmp	r1, #1073741824
 351 0026 05DA     		bge	.L23
 352 0028 CA13     		asrs	r2, r1, #15
 353              	.LVL31:
 207:Src/mc_math.c ****   {
 354              		.loc 1 207 8 is_stmt 1 view .LVU116
 207:Src/mc_math.c ****   {
 355              		.loc 1 207 11 is_stmt 0 view .LVU117
 356 002a 12F5004F 		cmn	r2, #32768
 357 002e 22DA     		bge	.L28
 358 0030 1449     		ldr	r1, .L30
 359 0032 01E0     		b	.L21
 360              	.LVL32:
 361              	.L23:
 207:Src/mc_math.c ****   {
 362              		.loc 1 207 11 view .LVU118
 363 0034 47F6FF71 		movw	r1, #32767
 364              	.LVL33:
 365              	.L21:
 216:Src/mc_math.c **** 
 366              		.loc 1 216 3 is_stmt 1 view .LVU119
 218:Src/mc_math.c ****   {
 367              		.loc 1 218 3 view .LVU120
 225:Src/mc_math.c **** 
 368              		.loc 1 225 3 view .LVU121
 228:Src/mc_math.c **** 
 369              		.loc 1 228 3 view .LVU122
 231:Src/mc_math.c **** 
 370              		.loc 1 231 3 view .LVU123
 238:Src/mc_math.c **** #else
 371              		.loc 1 238 3 view .LVU124
 231:Src/mc_math.c **** 
 372              		.loc 1 231 11 is_stmt 0 view .LVU125
 373 0038 0CFB04F4 		mul	r4, ip, r4
 374              	.LVL34:
 238:Src/mc_math.c **** #else
 375              		.loc 1 238 22 view .LVU126
 376 003c 05FB0344 		mla	r4, r5, r3, r4
 244:Src/mc_math.c ****   {
 377              		.loc 1 244 6 view .LVU127
 378 0040 B4F1804F 		cmp	r4, #1073741824
 238:Src/mc_math.c **** #else
 379              		.loc 1 238 11 view .LVU128
 380 0044 4FEAE432 		asr	r2, r4, #15
 381              	.LVL35:
 244:Src/mc_math.c ****   {
 382              		.loc 1 244 3 is_stmt 1 view .LVU129
 244:Src/mc_math.c ****   {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 16


 383              		.loc 1 244 6 is_stmt 0 view .LVU130
 384 0048 04DA     		bge	.L25
 248:Src/mc_math.c ****   {
 385              		.loc 1 248 8 is_stmt 1 view .LVU131
 248:Src/mc_math.c ****   {
 386              		.loc 1 248 11 is_stmt 0 view .LVU132
 387 004a 12F5004F 		cmn	r2, #32768
 388 004e 0CDA     		bge	.L29
 389 0050 0C4B     		ldr	r3, .L30
 390              	.LVL36:
 248:Src/mc_math.c ****   {
 391              		.loc 1 248 11 view .LVU133
 392 0052 01E0     		b	.L22
 393              	.LVL37:
 394              	.L25:
 248:Src/mc_math.c ****   {
 395              		.loc 1 248 11 view .LVU134
 396 0054 47F6FF73 		movw	r3, #32767
 397              	.LVL38:
 398              	.L22:
 257:Src/mc_math.c **** 
 399              		.loc 1 257 3 is_stmt 1 view .LVU135
 259:Src/mc_math.c ****   {
 400              		.loc 1 259 3 view .LVU136
 266:Src/mc_math.c **** 
 401              		.loc 1 266 3 view .LVU137
 268:Src/mc_math.c **** }
 402              		.loc 1 268 3 view .LVU138
 268:Src/mc_math.c **** }
 403              		.loc 1 268 10 is_stmt 0 view .LVU139
 404 0058 8AB2     		uxth	r2, r1
 405              	.LVL39:
 268:Src/mc_math.c **** }
 406              		.loc 1 268 10 view .LVU140
 407 005a 0020     		movs	r0, #0
 408 005c 62F30F00 		bfi	r0, r2, #0, #16
 409 0060 9BB2     		uxth	r3, r3
 410 0062 63F31F40 		bfi	r0, r3, #16, #16
 269:Src/mc_math.c **** 
 411              		.loc 1 269 1 view .LVU141
 412 0066 05B0     		add	sp, sp, #20
 413              	.LCFI8:
 414              		.cfi_remember_state
 415              		.cfi_def_cfa_offset 12
 416              		@ sp needed
 417 0068 30BD     		pop	{r4, r5, pc}
 418              	.LVL40:
 419              	.L29:
 420              	.LCFI9:
 421              		.cfi_restore_state
 254:Src/mc_math.c ****   }
 422              		.loc 1 254 5 is_stmt 1 view .LVU142
 254:Src/mc_math.c ****   }
 423              		.loc 1 254 5 is_stmt 0 view .LVU143
 424 006a 0648     		ldr	r0, .L30
 425 006c 13B2     		sxth	r3, r2
 426              	.LVL41:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 17


 254:Src/mc_math.c ****   }
 427              		.loc 1 254 5 view .LVU144
 428 006e 8342     		cmp	r3, r0
 429 0070 B8BF     		it	lt
 430 0072 0346     		movlt	r3, r0
 431 0074 F0E7     		b	.L22
 432              	.LVL42:
 433              	.L28:
 213:Src/mc_math.c ****   }
 434              		.loc 1 213 5 is_stmt 1 view .LVU145
 213:Src/mc_math.c ****   }
 435              		.loc 1 213 5 is_stmt 0 view .LVU146
 436 0076 0349     		ldr	r1, .L30
 437 0078 12B2     		sxth	r2, r2
 438              	.LVL43:
 213:Src/mc_math.c ****   }
 439              		.loc 1 213 5 view .LVU147
 440 007a 9142     		cmp	r1, r2
 441 007c B8BF     		it	lt
 442 007e 1146     		movlt	r1, r2
 443 0080 DAE7     		b	.L21
 444              	.L31:
 445 0082 00BF     		.align	2
 446              	.L30:
 447 0084 0180FFFF 		.word	-32767
 448              		.cfi_endproc
 449              	.LFE1091:
 451              		.section	.text.MCM_Rev_Park,"ax",%progbits
 452              		.align	1
 453              		.p2align 2,,3
 454              		.weak	MCM_Rev_Park
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 459              	MCM_Rev_Park:
 460              	.LVL44:
 461              	.LFB1092:
 289:Src/mc_math.c ****   int32_t alpha_tmp1;
 462              		.loc 1 289 1 is_stmt 1 view -0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 16
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 289:Src/mc_math.c ****   int32_t alpha_tmp1;
 466              		.loc 1 289 1 is_stmt 0 view .LVU149
 467 0000 30B5     		push	{r4, r5, lr}
 468              	.LCFI10:
 469              		.cfi_def_cfa_offset 12
 470              		.cfi_offset 4, -12
 471              		.cfi_offset 5, -8
 472              		.cfi_offset 14, -4
 473 0002 85B0     		sub	sp, sp, #20
 474              	.LCFI11:
 475              		.cfi_def_cfa_offset 32
 289:Src/mc_math.c ****   int32_t alpha_tmp1;
 476              		.loc 1 289 1 view .LVU150
 477 0004 0446     		mov	r4, r0
 478 0006 0546     		mov	r5, r0	@ movhi
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 18


 297:Src/mc_math.c **** 
 479              		.loc 1 297 29 view .LVU151
 480 0008 0846     		mov	r0, r1
 289:Src/mc_math.c ****   int32_t alpha_tmp1;
 481              		.loc 1 289 1 view .LVU152
 482 000a 0194     		str	r4, [sp, #4]
 297:Src/mc_math.c **** 
 483              		.loc 1 297 29 view .LVU153
 484 000c FFF7FEFF 		bl	MCM_Trig_Functions
 485              	.LVL45:
 297:Src/mc_math.c **** 
 486              		.loc 1 297 29 view .LVU154
 487 0010 2414     		asrs	r4, r4, #16
 488 0012 0214     		asrs	r2, r0, #16
 489 0014 2DB2     		sxth	r5, r5
 490              	.LVL46:
 290:Src/mc_math.c ****   int32_t alpha_tmp2;
 491              		.loc 1 290 3 is_stmt 1 view .LVU155
 291:Src/mc_math.c ****   int32_t beta_tmp1;
 492              		.loc 1 291 3 view .LVU156
 292:Src/mc_math.c ****   int32_t beta_tmp2;
 493              		.loc 1 292 3 view .LVU157
 293:Src/mc_math.c ****   Trig_Components Local_Vector_Components;
 494              		.loc 1 293 3 view .LVU158
 294:Src/mc_math.c ****   alphabeta_t Output;
 495              		.loc 1 294 3 view .LVU159
 295:Src/mc_math.c **** 
 496              		.loc 1 295 3 view .LVU160
 297:Src/mc_math.c **** 
 497              		.loc 1 297 3 view .LVU161
 297:Src/mc_math.c **** 
 498              		.loc 1 297 29 is_stmt 0 view .LVU162
 499 0016 00B2     		sxth	r0, r0
 500              	.LVL47:
 300:Src/mc_math.c ****   alpha_tmp2 = Input.d * ((int32_t)Local_Vector_Components.hSin);
 501              		.loc 1 300 3 is_stmt 1 view .LVU163
 301:Src/mc_math.c **** 
 502              		.loc 1 301 3 view .LVU164
 308:Src/mc_math.c **** #else
 503              		.loc 1 308 3 view .LVU165
 313:Src/mc_math.c ****   beta_tmp2 = Input.d * ((int32_t)Local_Vector_Components.hCos);
 504              		.loc 1 313 3 view .LVU166
 314:Src/mc_math.c **** 
 505              		.loc 1 314 3 view .LVU167
 321:Src/mc_math.c **** #else
 506              		.loc 1 321 3 view .LVU168
 326:Src/mc_math.c **** }
 507              		.loc 1 326 3 view .LVU169
 301:Src/mc_math.c **** 
 508              		.loc 1 301 14 is_stmt 0 view .LVU170
 509 0018 04FB02F3 		mul	r3, r4, r2
 308:Src/mc_math.c **** #else
 510              		.loc 1 308 42 view .LVU171
 511 001c 05FB0033 		mla	r3, r5, r0, r3
 314:Src/mc_math.c **** 
 512              		.loc 1 314 13 view .LVU172
 513 0020 00FB04F4 		mul	r4, r0, r4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 19


 514              	.LVL48:
 321:Src/mc_math.c **** #else
 515              		.loc 1 321 38 view .LVU173
 516 0024 05FB1244 		mls	r4, r5, r2, r4
 326:Src/mc_math.c **** }
 517              		.loc 1 326 10 view .LVU174
 518 0028 C3F3CF33 		ubfx	r3, r3, #15, #16
 519 002c 0020     		movs	r0, #0
 520              	.LVL49:
 326:Src/mc_math.c **** }
 521              		.loc 1 326 10 view .LVU175
 522 002e 63F30F00 		bfi	r0, r3, #0, #16
 523 0032 C4F3CF34 		ubfx	r4, r4, #15, #16
 524 0036 64F31F40 		bfi	r0, r4, #16, #16
 327:Src/mc_math.c **** 
 525              		.loc 1 327 1 view .LVU176
 526 003a 05B0     		add	sp, sp, #20
 527              	.LCFI12:
 528              		.cfi_def_cfa_offset 12
 529              		@ sp needed
 530 003c 30BD     		pop	{r4, r5, pc}
 327:Src/mc_math.c **** 
 531              		.loc 1 327 1 view .LVU177
 532              		.cfi_endproc
 533              	.LFE1092:
 535 003e 00BF     		.section	.text.MCM_Sqrt,"ax",%progbits
 536              		.align	1
 537              		.p2align 2,,3
 538              		.weak	MCM_Sqrt
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 543              	MCM_Sqrt:
 544              	.LVL50:
 545              	.LFB1094:
 390:Src/mc_math.c **** 
 391:Src/mc_math.c **** #if defined (CCMRAM)
 392:Src/mc_math.c **** #if defined (__ICCARM__)
 393:Src/mc_math.c **** #pragma location = ".ccmram"
 394:Src/mc_math.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 395:Src/mc_math.c **** __attribute__( ( section ( ".ccmram" ) ) )
 396:Src/mc_math.c **** #endif
 397:Src/mc_math.c **** #endif
 398:Src/mc_math.c **** /**
 399:Src/mc_math.c ****   * @brief  It calculates the square root of a non-negative int32_t. It returns 0 for negative int3
 400:Src/mc_math.c ****   * @param  Input int32_t number.
 401:Src/mc_math.c ****   * @retval int32_t Square root of Input (0 if Input<0).
 402:Src/mc_math.c ****   */
 403:Src/mc_math.c **** __weak int32_t MCM_Sqrt(int32_t wInput)
 404:Src/mc_math.c **** {
 546              		.loc 1 404 1 is_stmt 1 view -0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 405:Src/mc_math.c ****   int32_t wtemprootnew;
 551              		.loc 1 405 3 view .LVU179
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 20


 406:Src/mc_math.c **** 
 407:Src/mc_math.c ****   if (wInput > 0)
 552              		.loc 1 407 3 view .LVU180
 553              		.loc 1 407 6 is_stmt 0 view .LVU181
 554 0000 031E     		subs	r3, r0, #0
 555 0002 35DD     		ble	.L39
 556              	.LBB2:
 408:Src/mc_math.c ****   {
 409:Src/mc_math.c ****   uint8_t biter = 0u;
 557              		.loc 1 409 3 is_stmt 1 view .LVU182
 558              	.LVL51:
 410:Src/mc_math.c ****   int32_t wtemproot;
 559              		.loc 1 410 3 view .LVU183
 411:Src/mc_math.c **** 
 412:Src/mc_math.c ****     if (wInput <= ((int32_t)2097152))
 560              		.loc 1 412 5 view .LVU184
 561              		.loc 1 412 8 is_stmt 0 view .LVU185
 562 0004 B3F5001F 		cmp	r3, #2097152
 563 0008 2BDD     		ble	.L44
 564              	.LVL52:
 413:Src/mc_math.c ****     {
 414:Src/mc_math.c ****       wtemproot = ((int32_t)128);
 415:Src/mc_math.c ****     }
 416:Src/mc_math.c ****     else
 417:Src/mc_math.c ****     {
 418:Src/mc_math.c ****       wtemproot = ((int32_t)8192);
 419:Src/mc_math.c ****     }
 420:Src/mc_math.c **** 
 421:Src/mc_math.c ****     do
 565              		.loc 1 421 5 is_stmt 1 view .LVU186
 422:Src/mc_math.c ****     {
 423:Src/mc_math.c ****       wtemprootnew = (wtemproot + (wInput / wtemproot)) / (int32_t)2;
 566              		.loc 1 423 7 view .LVU187
 567              		.loc 1 423 43 is_stmt 0 view .LVU188
 568 000a 5A13     		asrs	r2, r3, #13
 569              		.loc 1 423 33 view .LVU189
 570 000c 02F50052 		add	r2, r2, #8192
 571              		.loc 1 423 20 view .LVU190
 572 0010 5210     		asrs	r2, r2, #1
 573              	.LVL53:
 424:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 574              		.loc 1 424 7 is_stmt 1 view .LVU191
 575              		.loc 1 424 10 is_stmt 0 view .LVU192
 576 0012 B2F5005F 		cmp	r2, #8192
 577 0016 29D0     		beq	.L41
 578              	.LVL54:
 579              	.L38:
 425:Src/mc_math.c ****       {
 426:Src/mc_math.c ****         biter = 6U;
 427:Src/mc_math.c ****       }
 428:Src/mc_math.c ****       else
 429:Src/mc_math.c ****       {
 430:Src/mc_math.c ****         biter ++;
 580              		.loc 1 430 9 is_stmt 1 view .LVU193
 431:Src/mc_math.c ****         wtemproot = wtemprootnew;
 581              		.loc 1 431 9 view .LVU194
 432:Src/mc_math.c ****       }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 21


 433:Src/mc_math.c ****     }
 434:Src/mc_math.c ****     while (biter < 6U);
 582              		.loc 1 434 11 view .LVU195
 421:Src/mc_math.c ****     {
 583              		.loc 1 421 5 view .LVU196
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 584              		.loc 1 423 7 view .LVU197
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 585              		.loc 1 423 43 is_stmt 0 view .LVU198
 586 0018 93FBF2F1 		sdiv	r1, r3, r2
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 587              		.loc 1 423 33 view .LVU199
 588 001c 1144     		add	r1, r1, r2
 424:Src/mc_math.c ****       {
 589              		.loc 1 424 10 view .LVU200
 590 001e B2EB610F 		cmp	r2, r1, asr #1
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 591              		.loc 1 423 20 view .LVU201
 592 0022 4FEA6100 		asr	r0, r1, #1
 593              	.LVL55:
 424:Src/mc_math.c ****       {
 594              		.loc 1 424 7 is_stmt 1 view .LVU202
 424:Src/mc_math.c ****       {
 595              		.loc 1 424 10 is_stmt 0 view .LVU203
 596 0026 24D0     		beq	.L34
 430:Src/mc_math.c ****         wtemproot = wtemprootnew;
 597              		.loc 1 430 9 is_stmt 1 view .LVU204
 431:Src/mc_math.c ****       }
 598              		.loc 1 431 9 view .LVU205
 599              	.LVL56:
 600              		.loc 1 434 11 view .LVU206
 421:Src/mc_math.c ****     {
 601              		.loc 1 421 5 view .LVU207
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 602              		.loc 1 423 7 view .LVU208
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 603              		.loc 1 423 43 is_stmt 0 view .LVU209
 604 0028 93FBF0F2 		sdiv	r2, r3, r0
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 605              		.loc 1 423 33 view .LVU210
 606 002c 0244     		add	r2, r2, r0
 424:Src/mc_math.c ****       {
 607              		.loc 1 424 10 view .LVU211
 608 002e B0EB620F 		cmp	r0, r2, asr #1
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 609              		.loc 1 423 20 view .LVU212
 610 0032 4FEA6201 		asr	r1, r2, #1
 611              	.LVL57:
 424:Src/mc_math.c ****       {
 612              		.loc 1 424 7 is_stmt 1 view .LVU213
 424:Src/mc_math.c ****       {
 613              		.loc 1 424 10 is_stmt 0 view .LVU214
 614 0036 1CD0     		beq	.L34
 430:Src/mc_math.c ****         wtemproot = wtemprootnew;
 615              		.loc 1 430 9 is_stmt 1 view .LVU215
 431:Src/mc_math.c ****       }
 616              		.loc 1 431 9 view .LVU216
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 22


 617              	.LVL58:
 618              		.loc 1 434 11 view .LVU217
 421:Src/mc_math.c ****     {
 619              		.loc 1 421 5 view .LVU218
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 620              		.loc 1 423 7 view .LVU219
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 621              		.loc 1 423 43 is_stmt 0 view .LVU220
 622 0038 93FBF1F2 		sdiv	r2, r3, r1
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 623              		.loc 1 423 33 view .LVU221
 624 003c 0A44     		add	r2, r2, r1
 424:Src/mc_math.c ****       {
 625              		.loc 1 424 10 view .LVU222
 626 003e B1EB620F 		cmp	r1, r2, asr #1
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 627              		.loc 1 423 20 view .LVU223
 628 0042 4FEA6200 		asr	r0, r2, #1
 629              	.LVL59:
 424:Src/mc_math.c ****       {
 630              		.loc 1 424 7 is_stmt 1 view .LVU224
 424:Src/mc_math.c ****       {
 631              		.loc 1 424 10 is_stmt 0 view .LVU225
 632 0046 14D0     		beq	.L34
 430:Src/mc_math.c ****         wtemproot = wtemprootnew;
 633              		.loc 1 430 9 is_stmt 1 view .LVU226
 431:Src/mc_math.c ****       }
 634              		.loc 1 431 9 view .LVU227
 635              	.LVL60:
 636              		.loc 1 434 11 view .LVU228
 421:Src/mc_math.c ****     {
 637              		.loc 1 421 5 view .LVU229
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 638              		.loc 1 423 7 view .LVU230
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 639              		.loc 1 423 43 is_stmt 0 view .LVU231
 640 0048 93FBF0F2 		sdiv	r2, r3, r0
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 641              		.loc 1 423 33 view .LVU232
 642 004c 0244     		add	r2, r2, r0
 424:Src/mc_math.c ****       {
 643              		.loc 1 424 10 view .LVU233
 644 004e B0EB620F 		cmp	r0, r2, asr #1
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 645              		.loc 1 423 20 view .LVU234
 646 0052 4FEA6201 		asr	r1, r2, #1
 647              	.LVL61:
 424:Src/mc_math.c ****       {
 648              		.loc 1 424 7 is_stmt 1 view .LVU235
 424:Src/mc_math.c ****       {
 649              		.loc 1 424 10 is_stmt 0 view .LVU236
 650 0056 0CD0     		beq	.L34
 430:Src/mc_math.c ****         wtemproot = wtemprootnew;
 651              		.loc 1 430 9 is_stmt 1 view .LVU237
 431:Src/mc_math.c ****       }
 652              		.loc 1 431 9 view .LVU238
 653              	.LVL62:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 23


 654              		.loc 1 434 11 view .LVU239
 421:Src/mc_math.c ****     {
 655              		.loc 1 421 5 view .LVU240
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 656              		.loc 1 423 7 view .LVU241
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 657              		.loc 1 423 43 is_stmt 0 view .LVU242
 658 0058 93FBF1F0 		sdiv	r0, r3, r1
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 659              		.loc 1 423 33 view .LVU243
 660 005c 0844     		add	r0, r0, r1
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 661              		.loc 1 423 20 view .LVU244
 662 005e 4010     		asrs	r0, r0, #1
 663              	.LVL63:
 424:Src/mc_math.c ****       {
 664              		.loc 1 424 7 is_stmt 1 view .LVU245
 665 0060 7047     		bx	lr
 666              	.LVL64:
 667              	.L44:
 421:Src/mc_math.c ****     {
 668              		.loc 1 421 5 view .LVU246
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 669              		.loc 1 423 7 view .LVU247
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 670              		.loc 1 423 43 is_stmt 0 view .LVU248
 671 0062 DA11     		asrs	r2, r3, #7
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 672              		.loc 1 423 33 view .LVU249
 673 0064 8032     		adds	r2, r2, #128
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 674              		.loc 1 423 20 view .LVU250
 675 0066 5210     		asrs	r2, r2, #1
 676              	.LVL65:
 424:Src/mc_math.c ****       {
 677              		.loc 1 424 7 is_stmt 1 view .LVU251
 424:Src/mc_math.c ****       {
 678              		.loc 1 424 10 is_stmt 0 view .LVU252
 679 0068 802A     		cmp	r2, #128
 680 006a D5D1     		bne	.L38
 681              	.LVL66:
 682              	.L41:
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 683              		.loc 1 423 20 view .LVU253
 684 006c 1046     		mov	r0, r2
 685              	.LVL67:
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 686              		.loc 1 423 20 view .LVU254
 687 006e 7047     		bx	lr
 688              	.LVL68:
 689              	.L39:
 423:Src/mc_math.c ****       if ((wtemprootnew == wtemproot) || ((int32_t)0 == wtemproot))
 690              		.loc 1 423 20 view .LVU255
 691              	.LBE2:
 435:Src/mc_math.c **** 
 436:Src/mc_math.c ****   }
 437:Src/mc_math.c ****   else
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 24


 438:Src/mc_math.c ****   {
 439:Src/mc_math.c ****     wtemprootnew = (int32_t)0;
 692              		.loc 1 439 18 view .LVU256
 693 0070 0020     		movs	r0, #0
 694              	.LVL69:
 440:Src/mc_math.c ****   }
 441:Src/mc_math.c **** 
 442:Src/mc_math.c ****   return (wtemprootnew);
 695              		.loc 1 442 3 is_stmt 1 view .LVU257
 696              	.L34:
 443:Src/mc_math.c **** }
 697              		.loc 1 443 1 is_stmt 0 view .LVU258
 698 0072 7047     		bx	lr
 699              		.cfi_endproc
 700              	.LFE1094:
 702              		.section	.text.MCM_floatToIntBit,"ax",%progbits
 703              		.align	1
 704              		.p2align 2,,3
 705              		.weak	MCM_floatToIntBit
 706              		.syntax unified
 707              		.thumb
 708              		.thumb_func
 710              	MCM_floatToIntBit:
 711              	.LVL70:
 712              	.LFB1095:
 444:Src/mc_math.c **** 
 445:Src/mc_math.c **** /**
 446:Src/mc_math.c ****   * @brief  This function codify a floating point number into the relative 32bit integer.
 447:Src/mc_math.c ****   * @param  float Floating point number to be coded.
 448:Src/mc_math.c ****   * @retval uint32_t Coded 32bit integer.
 449:Src/mc_math.c ****   */
 450:Src/mc_math.c **** __weak uint32_t MCM_floatToIntBit( float_t x ) //cstat !MISRAC2012-Dir-4.6_a
 451:Src/mc_math.c **** {
 713              		.loc 1 451 1 is_stmt 1 view -0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 8
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              		@ link register save eliminated.
 452:Src/mc_math.c ****   const uint32_t *pInt;
 718              		.loc 1 452 3 view .LVU260
 453:Src/mc_math.c ****   pInt = (uint32_t *)(&x); //cstat !MISRAC2012-Rule-11.3
 719              		.loc 1 453 3 view .LVU261
 454:Src/mc_math.c ****   return (*pInt);
 720              		.loc 1 454 3 view .LVU262
 451:Src/mc_math.c ****   const uint32_t *pInt;
 721              		.loc 1 451 1 is_stmt 0 view .LVU263
 722 0000 82B0     		sub	sp, sp, #8
 723              	.LCFI13:
 724              		.cfi_def_cfa_offset 8
 451:Src/mc_math.c ****   const uint32_t *pInt;
 725              		.loc 1 451 1 view .LVU264
 726 0002 8DED010A 		vstr.32	s0, [sp, #4]
 727              		.loc 1 454 11 view .LVU265
 728 0006 0198     		ldr	r0, [sp, #4]
 455:Src/mc_math.c **** }
 729              		.loc 1 455 1 view .LVU266
 730 0008 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 25


 731              	.LCFI14:
 732              		.cfi_def_cfa_offset 0
 733              		@ sp needed
 734 000a 7047     		bx	lr
 735              		.cfi_endproc
 736              	.LFE1095:
 738              		.global	hSin_Cos_Table
 739              		.section	.rodata.hSin_Cos_Table,"a"
 740              		.align	2
 741              		.set	.LANCHOR0,. + 0
 744              	hSin_Cos_Table:
 745 0000 0000     		.short	0
 746 0002 C900     		.short	201
 747 0004 9201     		.short	402
 748 0006 5B02     		.short	603
 749 0008 2403     		.short	804
 750 000a ED03     		.short	1005
 751 000c B604     		.short	1206
 752 000e 7F05     		.short	1407
 753 0010 4806     		.short	1608
 754 0012 1107     		.short	1809
 755 0014 D907     		.short	2009
 756 0016 A208     		.short	2210
 757 0018 6A09     		.short	2410
 758 001a 330A     		.short	2611
 759 001c FB0A     		.short	2811
 760 001e C40B     		.short	3012
 761 0020 8C0C     		.short	3212
 762 0022 540D     		.short	3412
 763 0024 1C0E     		.short	3612
 764 0026 E30E     		.short	3811
 765 0028 AB0F     		.short	4011
 766 002a 7210     		.short	4210
 767 002c 3A11     		.short	4410
 768 002e 0112     		.short	4609
 769 0030 C812     		.short	4808
 770 0032 8F13     		.short	5007
 771 0034 5514     		.short	5205
 772 0036 1C15     		.short	5404
 773 0038 E215     		.short	5602
 774 003a A816     		.short	5800
 775 003c 6E17     		.short	5998
 776 003e 3318     		.short	6195
 777 0040 F918     		.short	6393
 778 0042 BE19     		.short	6590
 779 0044 821A     		.short	6786
 780 0046 471B     		.short	6983
 781 0048 0B1C     		.short	7179
 782 004a CF1C     		.short	7375
 783 004c 931D     		.short	7571
 784 004e 571E     		.short	7767
 785 0050 1A1F     		.short	7962
 786 0052 DD1F     		.short	8157
 787 0054 9F20     		.short	8351
 788 0056 6121     		.short	8545
 789 0058 2322     		.short	8739
 790 005a E522     		.short	8933
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 26


 791 005c A623     		.short	9126
 792 005e 6724     		.short	9319
 793 0060 2825     		.short	9512
 794 0062 E825     		.short	9704
 795 0064 A826     		.short	9896
 796 0066 6727     		.short	10087
 797 0068 2628     		.short	10278
 798 006a E528     		.short	10469
 799 006c A329     		.short	10659
 800 006e 612A     		.short	10849
 801 0070 1F2B     		.short	11039
 802 0072 DC2B     		.short	11228
 803 0074 992C     		.short	11417
 804 0076 552D     		.short	11605
 805 0078 112E     		.short	11793
 806 007a CC2E     		.short	11980
 807 007c 872F     		.short	12167
 808 007e 4130     		.short	12353
 809 0080 FB30     		.short	12539
 810 0082 B531     		.short	12725
 811 0084 6E32     		.short	12910
 812 0086 2633     		.short	13094
 813 0088 DF33     		.short	13279
 814 008a 9634     		.short	13462
 815 008c 4D35     		.short	13645
 816 008e 0436     		.short	13828
 817 0090 BA36     		.short	14010
 818 0092 6F37     		.short	14191
 819 0094 2438     		.short	14372
 820 0096 D938     		.short	14553
 821 0098 8C39     		.short	14732
 822 009a 403A     		.short	14912
 823 009c F23A     		.short	15090
 824 009e A53B     		.short	15269
 825 00a0 563C     		.short	15446
 826 00a2 073D     		.short	15623
 827 00a4 B83D     		.short	15800
 828 00a6 683E     		.short	15976
 829 00a8 173F     		.short	16151
 830 00aa C53F     		.short	16325
 831 00ac 7340     		.short	16499
 832 00ae 2141     		.short	16673
 833 00b0 CE41     		.short	16846
 834 00b2 7A42     		.short	17018
 835 00b4 2543     		.short	17189
 836 00b6 D043     		.short	17360
 837 00b8 7A44     		.short	17530
 838 00ba 2445     		.short	17700
 839 00bc CD45     		.short	17869
 840 00be 7546     		.short	18037
 841 00c0 1C47     		.short	18204
 842 00c2 C347     		.short	18371
 843 00c4 6948     		.short	18537
 844 00c6 0F49     		.short	18703
 845 00c8 B449     		.short	18868
 846 00ca 584A     		.short	19032
 847 00cc FB4A     		.short	19195
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 27


 848 00ce 9D4B     		.short	19357
 849 00d0 3F4C     		.short	19519
 850 00d2 E04C     		.short	19680
 851 00d4 814D     		.short	19841
 852 00d6 204E     		.short	20000
 853 00d8 BF4E     		.short	20159
 854 00da 5D4F     		.short	20317
 855 00dc FB4F     		.short	20475
 856 00de 9750     		.short	20631
 857 00e0 3351     		.short	20787
 858 00e2 CE51     		.short	20942
 859 00e4 6852     		.short	21096
 860 00e6 0253     		.short	21250
 861 00e8 9B53     		.short	21403
 862 00ea 3254     		.short	21554
 863 00ec C954     		.short	21705
 864 00ee 6055     		.short	21856
 865 00f0 F555     		.short	22005
 866 00f2 8A56     		.short	22154
 867 00f4 1D57     		.short	22301
 868 00f6 B057     		.short	22448
 869 00f8 4258     		.short	22594
 870 00fa D358     		.short	22739
 871 00fc 6459     		.short	22884
 872 00fe F359     		.short	23027
 873 0100 825A     		.short	23170
 874 0102 0F5B     		.short	23311
 875 0104 9C5B     		.short	23452
 876 0106 285C     		.short	23592
 877 0108 B35C     		.short	23731
 878 010a 3E5D     		.short	23870
 879 010c C75D     		.short	24007
 880 010e 4F5E     		.short	24143
 881 0110 D75E     		.short	24279
 882 0112 5D5F     		.short	24413
 883 0114 E35F     		.short	24547
 884 0116 6860     		.short	24680
 885 0118 EB60     		.short	24811
 886 011a 6E61     		.short	24942
 887 011c F061     		.short	25072
 888 011e 7162     		.short	25201
 889 0120 F162     		.short	25329
 890 0122 7063     		.short	25456
 891 0124 EE63     		.short	25582
 892 0126 6C64     		.short	25708
 893 0128 E864     		.short	25832
 894 012a 6365     		.short	25955
 895 012c DD65     		.short	26077
 896 012e 5666     		.short	26198
 897 0130 CF66     		.short	26319
 898 0132 4667     		.short	26438
 899 0134 BC67     		.short	26556
 900 0136 3268     		.short	26674
 901 0138 A668     		.short	26790
 902 013a 1969     		.short	26905
 903 013c 8B69     		.short	27019
 904 013e FD69     		.short	27133
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 28


 905 0140 6D6A     		.short	27245
 906 0142 DC6A     		.short	27356
 907 0144 4A6B     		.short	27466
 908 0146 B76B     		.short	27575
 909 0148 236C     		.short	27683
 910 014a 8E6C     		.short	27790
 911 014c F86C     		.short	27896
 912 014e 616D     		.short	28001
 913 0150 C96D     		.short	28105
 914 0152 306E     		.short	28208
 915 0154 966E     		.short	28310
 916 0156 FB6E     		.short	28411
 917 0158 5E6F     		.short	28510
 918 015a C16F     		.short	28609
 919 015c 2270     		.short	28706
 920 015e 8370     		.short	28803
 921 0160 E270     		.short	28898
 922 0162 4071     		.short	28992
 923 0164 9D71     		.short	29085
 924 0166 F971     		.short	29177
 925 0168 5472     		.short	29268
 926 016a AE72     		.short	29358
 927 016c 0773     		.short	29447
 928 016e 5E73     		.short	29534
 929 0170 B573     		.short	29621
 930 0172 0A74     		.short	29706
 931 0174 5F74     		.short	29791
 932 0176 B274     		.short	29874
 933 0178 0475     		.short	29956
 934 017a 5575     		.short	30037
 935 017c A575     		.short	30117
 936 017e F375     		.short	30195
 937 0180 4176     		.short	30273
 938 0182 8D76     		.short	30349
 939 0184 D876     		.short	30424
 940 0186 2277     		.short	30498
 941 0188 6B77     		.short	30571
 942 018a B377     		.short	30643
 943 018c FA77     		.short	30714
 944 018e 3F78     		.short	30783
 945 0190 8478     		.short	30852
 946 0192 C778     		.short	30919
 947 0194 0979     		.short	30985
 948 0196 4A79     		.short	31050
 949 0198 8979     		.short	31113
 950 019a C879     		.short	31176
 951 019c 057A     		.short	31237
 952 019e 417A     		.short	31297
 953 01a0 7C7A     		.short	31356
 954 01a2 B67A     		.short	31414
 955 01a4 EE7A     		.short	31470
 956 01a6 267B     		.short	31526
 957 01a8 5C7B     		.short	31580
 958 01aa 917B     		.short	31633
 959 01ac C57B     		.short	31685
 960 01ae F87B     		.short	31736
 961 01b0 297C     		.short	31785
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 29


 962 01b2 597C     		.short	31833
 963 01b4 887C     		.short	31880
 964 01b6 B67C     		.short	31926
 965 01b8 E37C     		.short	31971
 966 01ba 0E7D     		.short	32014
 967 01bc 397D     		.short	32057
 968 01be 627D     		.short	32098
 969 01c0 897D     		.short	32137
 970 01c2 B07D     		.short	32176
 971 01c4 D57D     		.short	32213
 972 01c6 FA7D     		.short	32250
 973 01c8 1D7E     		.short	32285
 974 01ca 3E7E     		.short	32318
 975 01cc 5F7E     		.short	32351
 976 01ce 7E7E     		.short	32382
 977 01d0 9C7E     		.short	32412
 978 01d2 B97E     		.short	32441
 979 01d4 D57E     		.short	32469
 980 01d6 EF7E     		.short	32495
 981 01d8 097F     		.short	32521
 982 01da 217F     		.short	32545
 983 01dc 377F     		.short	32567
 984 01de 4D7F     		.short	32589
 985 01e0 617F     		.short	32609
 986 01e2 747F     		.short	32628
 987 01e4 867F     		.short	32646
 988 01e6 977F     		.short	32663
 989 01e8 A67F     		.short	32678
 990 01ea B47F     		.short	32692
 991 01ec C17F     		.short	32705
 992 01ee CD7F     		.short	32717
 993 01f0 D87F     		.short	32728
 994 01f2 E17F     		.short	32737
 995 01f4 E97F     		.short	32745
 996 01f6 F07F     		.short	32752
 997 01f8 F57F     		.short	32757
 998 01fa F97F     		.short	32761
 999 01fc FD7F     		.short	32765
 1000 01fe FE7F     		.short	32766
 1001              		.text
 1002              	.Letext0:
 1003              		.file 2 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 1004              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 1005              		.file 4 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_tim.h"
 1006              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h"
 1007              		.file 6 "Inc/mc_type.h"
 1008              		.file 7 "Inc/mc_math.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 mc_math.c
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:20     .text.MCM_Clarke:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:27     .text.MCM_Clarke:00000000 MCM_Clarke
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:118    .text.MCM_Clarke:00000050 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:123    .text.MCM_Trig_Functions:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:130    .text.MCM_Trig_Functions:00000000 MCM_Trig_Functions
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:282    .text.MCM_Trig_Functions:00000094 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:287    .text.MCM_Park:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:294    .text.MCM_Park:00000000 MCM_Park
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:447    .text.MCM_Park:00000084 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:452    .text.MCM_Rev_Park:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:459    .text.MCM_Rev_Park:00000000 MCM_Rev_Park
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:536    .text.MCM_Sqrt:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:543    .text.MCM_Sqrt:00000000 MCM_Sqrt
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:703    .text.MCM_floatToIntBit:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:710    .text.MCM_floatToIntBit:00000000 MCM_floatToIntBit
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:744    .rodata.hSin_Cos_Table:00000000 hSin_Cos_Table
C:\Users\ep_ygh\AppData\Local\Temp\ccECz642.s:740    .rodata.hSin_Cos_Table:00000000 $d

NO UNDEFINED SYMBOLS
