ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"system_stm32l4xx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SystemInit,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.global	SystemInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	SystemInit:
  28              	.LFB317:
  29              		.file 1 "Src/system_stm32l4xx.c"
   1:Src/system_stm32l4xx.c **** /**
   2:Src/system_stm32l4xx.c ****   ******************************************************************************
   3:Src/system_stm32l4xx.c ****   * @file    system_stm32l4xx.c
   4:Src/system_stm32l4xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32l4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Src/system_stm32l4xx.c ****   *
   7:Src/system_stm32l4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Src/system_stm32l4xx.c ****   *   user application:
   9:Src/system_stm32l4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Src/system_stm32l4xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32l4xx.c ****   *                      the "startup_stm32l4xx.s" file.
  12:Src/system_stm32l4xx.c ****   *
  13:Src/system_stm32l4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32l4xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32l4xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32l4xx.c ****   *
  17:Src/system_stm32l4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32l4xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32l4xx.c ****   *                                 during program execution.
  20:Src/system_stm32l4xx.c ****   *
  21:Src/system_stm32l4xx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:Src/system_stm32l4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32l4xx.s" file, to
  23:Src/system_stm32l4xx.c ****   *   configure the system clock before to branch to main program.
  24:Src/system_stm32l4xx.c ****   *
  25:Src/system_stm32l4xx.c ****   *   This file configures the system clock as follows:
  26:Src/system_stm32l4xx.c ****   *=============================================================================
  27:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  28:Src/system_stm32l4xx.c ****   *        System Clock source                    | MSI
  29:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s 			page 2


  30:Src/system_stm32l4xx.c ****   *        SYSCLK(Hz)                             | 4000000
  31:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  32:Src/system_stm32l4xx.c ****   *        HCLK(Hz)                               | 4000000
  33:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  34:Src/system_stm32l4xx.c ****   *        AHB Prescaler                          | 1
  35:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  36:Src/system_stm32l4xx.c ****   *        APB1 Prescaler                         | 1
  37:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  38:Src/system_stm32l4xx.c ****   *        APB2 Prescaler                         | 1
  39:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  40:Src/system_stm32l4xx.c ****   *        PLL_M                                  | 1
  41:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  42:Src/system_stm32l4xx.c ****   *        PLL_N                                  | 8
  43:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  44:Src/system_stm32l4xx.c ****   *        PLL_P                                  | 7
  45:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  46:Src/system_stm32l4xx.c ****   *        PLL_Q                                  | 2
  47:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  48:Src/system_stm32l4xx.c ****   *        PLL_R                                  | 2
  49:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  50:Src/system_stm32l4xx.c ****   *        PLLSAI1_P                              | NA
  51:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  52:Src/system_stm32l4xx.c ****   *        PLLSAI1_Q                              | NA
  53:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  54:Src/system_stm32l4xx.c ****   *        PLLSAI1_R                              | NA
  55:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  56:Src/system_stm32l4xx.c ****   *        PLLSAI2_P                              | NA
  57:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  58:Src/system_stm32l4xx.c ****   *        PLLSAI2_Q                              | NA
  59:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  60:Src/system_stm32l4xx.c ****   *        PLLSAI2_R                              | NA
  61:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  62:Src/system_stm32l4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  63:Src/system_stm32l4xx.c ****   *        SDIO and RNG clock                     |
  64:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  65:Src/system_stm32l4xx.c ****   *=============================================================================
  66:Src/system_stm32l4xx.c ****   ******************************************************************************
  67:Src/system_stm32l4xx.c ****   * @attention
  68:Src/system_stm32l4xx.c ****   *
  69:Src/system_stm32l4xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  70:Src/system_stm32l4xx.c ****   * All rights reserved.
  71:Src/system_stm32l4xx.c ****   *
  72:Src/system_stm32l4xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  73:Src/system_stm32l4xx.c ****   * in the root directory of this software component.
  74:Src/system_stm32l4xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  75:Src/system_stm32l4xx.c ****   *
  76:Src/system_stm32l4xx.c ****   ******************************************************************************
  77:Src/system_stm32l4xx.c ****   */
  78:Src/system_stm32l4xx.c **** 
  79:Src/system_stm32l4xx.c **** /** @addtogroup CMSIS
  80:Src/system_stm32l4xx.c ****   * @{
  81:Src/system_stm32l4xx.c ****   */
  82:Src/system_stm32l4xx.c **** 
  83:Src/system_stm32l4xx.c **** /** @addtogroup stm32l4xx_system
  84:Src/system_stm32l4xx.c ****   * @{
  85:Src/system_stm32l4xx.c ****   */
  86:Src/system_stm32l4xx.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s 			page 3


  87:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Includes
  88:Src/system_stm32l4xx.c ****   * @{
  89:Src/system_stm32l4xx.c ****   */
  90:Src/system_stm32l4xx.c **** 
  91:Src/system_stm32l4xx.c **** #include "stm32l4xx.h"
  92:Src/system_stm32l4xx.c **** 
  93:Src/system_stm32l4xx.c **** /**
  94:Src/system_stm32l4xx.c ****   * @}
  95:Src/system_stm32l4xx.c ****   */
  96:Src/system_stm32l4xx.c **** 
  97:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_TypesDefinitions
  98:Src/system_stm32l4xx.c ****   * @{
  99:Src/system_stm32l4xx.c ****   */
 100:Src/system_stm32l4xx.c **** 
 101:Src/system_stm32l4xx.c **** /**
 102:Src/system_stm32l4xx.c ****   * @}
 103:Src/system_stm32l4xx.c ****   */
 104:Src/system_stm32l4xx.c **** 
 105:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Defines
 106:Src/system_stm32l4xx.c ****   * @{
 107:Src/system_stm32l4xx.c ****   */
 108:Src/system_stm32l4xx.c **** 
 109:Src/system_stm32l4xx.c **** #if !defined  (HSE_VALUE)
 110:Src/system_stm32l4xx.c ****   #define HSE_VALUE    8000000U  /*!< Value of the External oscillator in Hz */
 111:Src/system_stm32l4xx.c **** #endif /* HSE_VALUE */
 112:Src/system_stm32l4xx.c **** 
 113:Src/system_stm32l4xx.c **** #if !defined  (MSI_VALUE)
 114:Src/system_stm32l4xx.c ****   #define MSI_VALUE    4000000U  /*!< Value of the Internal oscillator in Hz*/
 115:Src/system_stm32l4xx.c **** #endif /* MSI_VALUE */
 116:Src/system_stm32l4xx.c **** 
 117:Src/system_stm32l4xx.c **** #if !defined  (HSI_VALUE)
 118:Src/system_stm32l4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
 119:Src/system_stm32l4xx.c **** #endif /* HSI_VALUE */
 120:Src/system_stm32l4xx.c **** 
 121:Src/system_stm32l4xx.c **** /* Note: Following vector table addresses must be defined in line with linker
 122:Src/system_stm32l4xx.c ****          configuration. */
 123:Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
 124:Src/system_stm32l4xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
 125:Src/system_stm32l4xx.c ****      remap of boot address selected */
 126:Src/system_stm32l4xx.c **** /* #define USER_VECT_TAB_ADDRESS */
 127:Src/system_stm32l4xx.c **** 
 128:Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 129:Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 130:Src/system_stm32l4xx.c ****      in Sram else user remap will be done in Flash. */
 131:Src/system_stm32l4xx.c **** /* #define VECT_TAB_SRAM */
 132:Src/system_stm32l4xx.c **** 
 133:Src/system_stm32l4xx.c **** #if defined(VECT_TAB_SRAM)
 134:Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM1_BASE      /*!< Vector Table base address field.
 135:Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 136:Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 137:Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 138:Src/system_stm32l4xx.c **** #else
 139:Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 140:Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 141:Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 142:Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 143:Src/system_stm32l4xx.c **** #endif /* VECT_TAB_SRAM */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s 			page 4


 144:Src/system_stm32l4xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 145:Src/system_stm32l4xx.c **** 
 146:Src/system_stm32l4xx.c **** /******************************************************************************/
 147:Src/system_stm32l4xx.c **** /**
 148:Src/system_stm32l4xx.c ****   * @}
 149:Src/system_stm32l4xx.c ****   */
 150:Src/system_stm32l4xx.c **** 
 151:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Macros
 152:Src/system_stm32l4xx.c ****   * @{
 153:Src/system_stm32l4xx.c ****   */
 154:Src/system_stm32l4xx.c **** 
 155:Src/system_stm32l4xx.c **** /**
 156:Src/system_stm32l4xx.c ****   * @}
 157:Src/system_stm32l4xx.c ****   */
 158:Src/system_stm32l4xx.c **** 
 159:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Variables
 160:Src/system_stm32l4xx.c ****   * @{
 161:Src/system_stm32l4xx.c ****   */
 162:Src/system_stm32l4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 163:Src/system_stm32l4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 164:Src/system_stm32l4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 165:Src/system_stm32l4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 166:Src/system_stm32l4xx.c ****          Note: If you use this function to configure the system clock; then there
 167:Src/system_stm32l4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 168:Src/system_stm32l4xx.c ****                variable is updated automatically.
 169:Src/system_stm32l4xx.c ****   */
 170:Src/system_stm32l4xx.c ****   uint32_t SystemCoreClock = 4000000U;
 171:Src/system_stm32l4xx.c **** 
 172:Src/system_stm32l4xx.c ****   const uint8_t  AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9
 173:Src/system_stm32l4xx.c ****   const uint8_t  APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 174:Src/system_stm32l4xx.c ****   const uint32_t MSIRangeTable[12] = {100000U,   200000U,   400000U,   800000U,  1000000U,  2000000
 175:Src/system_stm32l4xx.c ****                                       4000000U, 8000000U, 16000000U, 24000000U, 32000000U, 48000000
 176:Src/system_stm32l4xx.c **** /**
 177:Src/system_stm32l4xx.c ****   * @}
 178:Src/system_stm32l4xx.c ****   */
 179:Src/system_stm32l4xx.c **** 
 180:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_FunctionPrototypes
 181:Src/system_stm32l4xx.c ****   * @{
 182:Src/system_stm32l4xx.c ****   */
 183:Src/system_stm32l4xx.c **** 
 184:Src/system_stm32l4xx.c **** /**
 185:Src/system_stm32l4xx.c ****   * @}
 186:Src/system_stm32l4xx.c ****   */
 187:Src/system_stm32l4xx.c **** 
 188:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Functions
 189:Src/system_stm32l4xx.c ****   * @{
 190:Src/system_stm32l4xx.c ****   */
 191:Src/system_stm32l4xx.c **** 
 192:Src/system_stm32l4xx.c **** /**
 193:Src/system_stm32l4xx.c ****   * @brief  Setup the microcontroller system.
 194:Src/system_stm32l4xx.c ****   * @retval None
 195:Src/system_stm32l4xx.c ****   */
 196:Src/system_stm32l4xx.c **** 
 197:Src/system_stm32l4xx.c **** void SystemInit(void)
 198:Src/system_stm32l4xx.c **** {
  30              		.loc 1 198 1 view -0
  31              		.cfi_startproc
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s 			page 5


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 199:Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 200:Src/system_stm32l4xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 201:Src/system_stm32l4xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
 202:Src/system_stm32l4xx.c **** #endif
 203:Src/system_stm32l4xx.c **** 
 204:Src/system_stm32l4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 205:Src/system_stm32l4xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 206:Src/system_stm32l4xx.c ****   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  35              		.loc 1 206 3 view .LVU1
  36              		.loc 1 206 14 is_stmt 0 view .LVU2
  37 0000 034A     		ldr	r2, .L3
  38 0002 D2F88830 		ldr	r3, [r2, #136]
  39 0006 43F47003 		orr	r3, r3, #15728640
  40 000a C2F88830 		str	r3, [r2, #136]
 207:Src/system_stm32l4xx.c **** #endif
 208:Src/system_stm32l4xx.c **** }
  41              		.loc 1 208 1 view .LVU3
  42 000e 7047     		bx	lr
  43              	.L4:
  44              		.align	2
  45              	.L3:
  46 0010 00ED00E0 		.word	-536810240
  47              		.cfi_endproc
  48              	.LFE317:
  50              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  51              		.align	1
  52              		.p2align 2,,3
  53              		.global	SystemCoreClockUpdate
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  58              	SystemCoreClockUpdate:
  59              	.LFB318:
 209:Src/system_stm32l4xx.c **** 
 210:Src/system_stm32l4xx.c **** /**
 211:Src/system_stm32l4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 212:Src/system_stm32l4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 213:Src/system_stm32l4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 214:Src/system_stm32l4xx.c ****   *         other parameters.
 215:Src/system_stm32l4xx.c ****   *
 216:Src/system_stm32l4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 217:Src/system_stm32l4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 218:Src/system_stm32l4xx.c ****   *         based on this variable will be incorrect.
 219:Src/system_stm32l4xx.c ****   *
 220:Src/system_stm32l4xx.c ****   * @note   - The system frequency computed by this function is not the real
 221:Src/system_stm32l4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 222:Src/system_stm32l4xx.c ****   *           constant and the selected clock source:
 223:Src/system_stm32l4xx.c ****   *
 224:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 225:Src/system_stm32l4xx.c ****   *
 226:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 227:Src/system_stm32l4xx.c ****   *
 228:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 229:Src/system_stm32l4xx.c ****   *
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s 			page 6


 230:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 231:Src/system_stm32l4xx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 232:Src/system_stm32l4xx.c ****   *
 233:Src/system_stm32l4xx.c ****   *         (*) MSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 234:Src/system_stm32l4xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 235:Src/system_stm32l4xx.c ****   *             in voltage and temperature.
 236:Src/system_stm32l4xx.c ****   *
 237:Src/system_stm32l4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 238:Src/system_stm32l4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 239:Src/system_stm32l4xx.c ****   *              in voltage and temperature.
 240:Src/system_stm32l4xx.c ****   *
 241:Src/system_stm32l4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 242:Src/system_stm32l4xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 243:Src/system_stm32l4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 244:Src/system_stm32l4xx.c ****   *              have wrong result.
 245:Src/system_stm32l4xx.c ****   *
 246:Src/system_stm32l4xx.c ****   *         - The result of this function could be not correct when using fractional
 247:Src/system_stm32l4xx.c ****   *           value for HSE crystal.
 248:Src/system_stm32l4xx.c ****   *
 249:Src/system_stm32l4xx.c ****   * @retval None
 250:Src/system_stm32l4xx.c ****   */
 251:Src/system_stm32l4xx.c **** void SystemCoreClockUpdate(void)
 252:Src/system_stm32l4xx.c **** {
  60              		.loc 1 252 1 is_stmt 1 view -0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
 253:Src/system_stm32l4xx.c ****   uint32_t tmp, msirange, pllvco, pllsource, pllm, pllr;
  65              		.loc 1 253 3 view .LVU5
 254:Src/system_stm32l4xx.c **** 
 255:Src/system_stm32l4xx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 256:Src/system_stm32l4xx.c ****   if ((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
  66              		.loc 1 256 3 view .LVU6
 257:Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
 258:Src/system_stm32l4xx.c ****     msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
  67              		.loc 1 258 5 view .LVU7
 256:Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
  68              		.loc 1 256 11 is_stmt 0 view .LVU8
  69 0000 254B     		ldr	r3, .L17
 259:Src/system_stm32l4xx.c ****   }
 260:Src/system_stm32l4xx.c ****   else
 261:Src/system_stm32l4xx.c ****   { /* MSIRANGE from RCC_CR applies */
 262:Src/system_stm32l4xx.c ****     msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 263:Src/system_stm32l4xx.c ****   }
 264:Src/system_stm32l4xx.c ****   /*MSI frequency range in HZ*/
 265:Src/system_stm32l4xx.c ****   msirange = MSIRangeTable[msirange];
 266:Src/system_stm32l4xx.c **** 
 267:Src/system_stm32l4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 268:Src/system_stm32l4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  70              		.loc 1 268 14 view .LVU9
  71 0002 2549     		ldr	r1, .L17
 256:Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
  72              		.loc 1 256 11 view .LVU10
  73 0004 1A68     		ldr	r2, [r3]
 265:Src/system_stm32l4xx.c **** 
  74              		.loc 1 265 12 view .LVU11
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s 			page 7


  75 0006 2548     		ldr	r0, .L17+4
 256:Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
  76              		.loc 1 256 6 view .LVU12
  77 0008 1207     		lsls	r2, r2, #28
 258:Src/system_stm32l4xx.c ****   }
  78              		.loc 1 258 20 view .LVU13
  79 000a 54BF     		ite	pl
  80 000c D3F89430 		ldrpl	r3, [r3, #148]
 262:Src/system_stm32l4xx.c ****   }
  81              		.loc 1 262 20 view .LVU14
  82 0010 1B68     		ldrmi	r3, [r3]
  83              		.loc 1 268 14 view .LVU15
  84 0012 8A68     		ldr	r2, [r1, #8]
 258:Src/system_stm32l4xx.c ****   }
  85              		.loc 1 258 14 view .LVU16
  86 0014 54BF     		ite	pl
  87 0016 C3F30323 		ubfxpl	r3, r3, #8, #4
 262:Src/system_stm32l4xx.c ****   }
  88              		.loc 1 262 5 is_stmt 1 view .LVU17
 262:Src/system_stm32l4xx.c ****   }
  89              		.loc 1 262 14 is_stmt 0 view .LVU18
  90 001a C3F30313 		ubfxmi	r3, r3, #4, #4
  91              	.LVL0:
 265:Src/system_stm32l4xx.c **** 
  92              		.loc 1 265 3 is_stmt 1 view .LVU19
  93              		.loc 1 268 21 is_stmt 0 view .LVU20
  94 001e 02F00C02 		and	r2, r2, #12
  95              		.loc 1 268 3 view .LVU21
  96 0022 082A     		cmp	r2, #8
 265:Src/system_stm32l4xx.c **** 
  97              		.loc 1 265 12 view .LVU22
  98 0024 50F82330 		ldr	r3, [r0, r3, lsl #2]
  99              	.LVL1:
 100              		.loc 1 268 3 is_stmt 1 view .LVU23
 101 0028 0FD0     		beq	.L14
 102 002a 0C2A     		cmp	r2, #12
 103 002c 0FD0     		beq	.L9
 104 002e 1C49     		ldr	r1, .L17+8
 105 0030 042A     		cmp	r2, #4
 106 0032 08BF     		it	eq
 107 0034 0B46     		moveq	r3, r1
 108              	.LVL2:
 109              	.L8:
 269:Src/system_stm32l4xx.c ****   {
 270:Src/system_stm32l4xx.c ****     case 0x00:  /* MSI used as system clock source */
 271:Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 272:Src/system_stm32l4xx.c ****       break;
 273:Src/system_stm32l4xx.c **** 
 274:Src/system_stm32l4xx.c ****     case 0x04:  /* HSI used as system clock source */
 275:Src/system_stm32l4xx.c ****       SystemCoreClock = HSI_VALUE;
 276:Src/system_stm32l4xx.c ****       break;
 277:Src/system_stm32l4xx.c **** 
 278:Src/system_stm32l4xx.c ****     case 0x08:  /* HSE used as system clock source */
 279:Src/system_stm32l4xx.c ****       SystemCoreClock = HSE_VALUE;
 280:Src/system_stm32l4xx.c ****       break;
 281:Src/system_stm32l4xx.c **** 
 282:Src/system_stm32l4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s 			page 8


 283:Src/system_stm32l4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 284:Src/system_stm32l4xx.c ****          SYSCLK = PLL_VCO / PLLR
 285:Src/system_stm32l4xx.c ****          */
 286:Src/system_stm32l4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 287:Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 288:Src/system_stm32l4xx.c **** 
 289:Src/system_stm32l4xx.c ****       switch (pllsource)
 290:Src/system_stm32l4xx.c ****       {
 291:Src/system_stm32l4xx.c ****         case 0x02:  /* HSI used as PLL clock source */
 292:Src/system_stm32l4xx.c ****           pllvco = (HSI_VALUE / pllm);
 293:Src/system_stm32l4xx.c ****           break;
 294:Src/system_stm32l4xx.c **** 
 295:Src/system_stm32l4xx.c ****         case 0x03:  /* HSE used as PLL clock source */
 296:Src/system_stm32l4xx.c ****           pllvco = (HSE_VALUE / pllm);
 297:Src/system_stm32l4xx.c ****           break;
 298:Src/system_stm32l4xx.c **** 
 299:Src/system_stm32l4xx.c ****         default:    /* MSI used as PLL clock source */
 300:Src/system_stm32l4xx.c ****           pllvco = (msirange / pllm);
 301:Src/system_stm32l4xx.c ****           break;
 302:Src/system_stm32l4xx.c ****       }
 303:Src/system_stm32l4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 304:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 305:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 306:Src/system_stm32l4xx.c ****       break;
 307:Src/system_stm32l4xx.c **** 
 308:Src/system_stm32l4xx.c ****     default:
 309:Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 310:Src/system_stm32l4xx.c ****       break;
 311:Src/system_stm32l4xx.c ****   }
 312:Src/system_stm32l4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 313:Src/system_stm32l4xx.c ****   /* Get HCLK prescaler */
 314:Src/system_stm32l4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 110              		.loc 1 314 3 view .LVU24
 111              		.loc 1 314 28 is_stmt 0 view .LVU25
 112 0036 184A     		ldr	r2, .L17
 113              		.loc 1 314 22 view .LVU26
 114 0038 1A48     		ldr	r0, .L17+12
 115              		.loc 1 314 28 view .LVU27
 116 003a 9268     		ldr	r2, [r2, #8]
 117              	.LVL3:
 315:Src/system_stm32l4xx.c ****   /* HCLK clock frequency */
 316:Src/system_stm32l4xx.c ****   SystemCoreClock >>= tmp;
 118              		.loc 1 316 3 is_stmt 1 view .LVU28
 119              		.loc 1 316 19 is_stmt 0 view .LVU29
 120 003c 1A49     		ldr	r1, .L17+16
 314:Src/system_stm32l4xx.c ****   /* HCLK clock frequency */
 121              		.loc 1 314 52 view .LVU30
 122 003e C2F30312 		ubfx	r2, r2, #4, #4
 123              	.LVL4:
 314:Src/system_stm32l4xx.c ****   /* HCLK clock frequency */
 124              		.loc 1 314 7 view .LVU31
 125 0042 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 126              		.loc 1 316 19 view .LVU32
 127 0044 D340     		lsrs	r3, r3, r2
 128 0046 0B60     		str	r3, [r1]
 317:Src/system_stm32l4xx.c **** }
 129              		.loc 1 317 1 view .LVU33
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s 			page 9


 130 0048 7047     		bx	lr
 131              	.LVL5:
 132              	.L14:
 268:Src/system_stm32l4xx.c ****   {
 133              		.loc 1 268 3 view .LVU34
 134 004a 184B     		ldr	r3, .L17+20
 135              	.LVL6:
 268:Src/system_stm32l4xx.c ****   {
 136              		.loc 1 268 3 view .LVU35
 137 004c F3E7     		b	.L8
 138              	.LVL7:
 139              	.L9:
 286:Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 140              		.loc 1 286 7 is_stmt 1 view .LVU36
 286:Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 141              		.loc 1 286 23 is_stmt 0 view .LVU37
 142 004e C868     		ldr	r0, [r1, #12]
 287:Src/system_stm32l4xx.c **** 
 143              		.loc 1 287 19 view .LVU38
 144 0050 CA68     		ldr	r2, [r1, #12]
 286:Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 145              		.loc 1 286 17 view .LVU39
 146 0052 00F00301 		and	r1, r0, #3
 147              	.LVL8:
 287:Src/system_stm32l4xx.c **** 
 148              		.loc 1 287 7 is_stmt 1 view .LVU40
 287:Src/system_stm32l4xx.c **** 
 149              		.loc 1 287 49 is_stmt 0 view .LVU41
 150 0056 C2F30212 		ubfx	r2, r2, #4, #3
 151 005a 0229     		cmp	r1, #2
 287:Src/system_stm32l4xx.c **** 
 152              		.loc 1 287 12 view .LVU42
 153 005c 02F10102 		add	r2, r2, #1
 154              	.LVL9:
 289:Src/system_stm32l4xx.c ****       {
 155              		.loc 1 289 7 is_stmt 1 view .LVU43
 156 0060 15D0     		beq	.L10
 157 0062 0329     		cmp	r1, #3
 158 0064 10D1     		bne	.L16
 296:Src/system_stm32l4xx.c ****           break;
 159              		.loc 1 296 11 view .LVU44
 296:Src/system_stm32l4xx.c ****           break;
 160              		.loc 1 296 18 is_stmt 0 view .LVU45
 161 0066 114B     		ldr	r3, .L17+20
 162              	.LVL10:
 296:Src/system_stm32l4xx.c ****           break;
 163              		.loc 1 296 18 view .LVU46
 164 0068 B3FBF2F3 		udiv	r3, r3, r2
 165              	.LVL11:
 297:Src/system_stm32l4xx.c **** 
 166              		.loc 1 297 11 is_stmt 1 view .LVU47
 167              	.L13:
 303:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 168              		.loc 1 303 7 view .LVU48
 303:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 169              		.loc 1 303 30 is_stmt 0 view .LVU49
 170 006c 0A4A     		ldr	r2, .L17
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s 			page 10


 171              	.LVL12:
 303:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 172              		.loc 1 303 30 view .LVU50
 173 006e D168     		ldr	r1, [r2, #12]
 174              	.LVL13:
 304:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 175              		.loc 1 304 7 is_stmt 1 view .LVU51
 304:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 176              		.loc 1 304 20 is_stmt 0 view .LVU52
 177 0070 D268     		ldr	r2, [r2, #12]
 178              	.LVL14:
 305:Src/system_stm32l4xx.c ****       break;
 179              		.loc 1 305 7 is_stmt 1 view .LVU53
 304:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 180              		.loc 1 304 50 is_stmt 0 view .LVU54
 181 0072 C2F34162 		ubfx	r2, r2, #25, #2
 182              	.LVL15:
 303:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 183              		.loc 1 303 60 view .LVU55
 184 0076 C1F30621 		ubfx	r1, r1, #8, #7
 185              	.LVL16:
 304:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 186              		.loc 1 304 58 view .LVU56
 187 007a 0132     		adds	r2, r2, #1
 303:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 188              		.loc 1 303 14 view .LVU57
 189 007c 01FB03F3 		mul	r3, r1, r3
 304:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 190              		.loc 1 304 12 view .LVU58
 191 0080 5200     		lsls	r2, r2, #1
 305:Src/system_stm32l4xx.c ****       break;
 192              		.loc 1 305 31 view .LVU59
 193 0082 B3FBF2F3 		udiv	r3, r3, r2
 306:Src/system_stm32l4xx.c **** 
 194              		.loc 1 306 7 is_stmt 1 view .LVU60
 195 0086 D6E7     		b	.L8
 196              	.LVL17:
 197              	.L16:
 300:Src/system_stm32l4xx.c ****           break;
 198              		.loc 1 300 11 view .LVU61
 300:Src/system_stm32l4xx.c ****           break;
 199              		.loc 1 300 18 is_stmt 0 view .LVU62
 200 0088 B3FBF2F3 		udiv	r3, r3, r2
 201              	.LVL18:
 301:Src/system_stm32l4xx.c ****       }
 202              		.loc 1 301 11 is_stmt 1 view .LVU63
 203 008c EEE7     		b	.L13
 204              	.LVL19:
 205              	.L10:
 292:Src/system_stm32l4xx.c ****           break;
 206              		.loc 1 292 11 view .LVU64
 292:Src/system_stm32l4xx.c ****           break;
 207              		.loc 1 292 18 is_stmt 0 view .LVU65
 208 008e 044B     		ldr	r3, .L17+8
 209              	.LVL20:
 292:Src/system_stm32l4xx.c ****           break;
 210              		.loc 1 292 18 view .LVU66
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s 			page 11


 211 0090 B3FBF2F3 		udiv	r3, r3, r2
 212              	.LVL21:
 293:Src/system_stm32l4xx.c **** 
 213              		.loc 1 293 11 is_stmt 1 view .LVU67
 214 0094 EAE7     		b	.L13
 215              	.L18:
 216 0096 00BF     		.align	2
 217              	.L17:
 218 0098 00100240 		.word	1073876992
 219 009c 00000000 		.word	.LANCHOR0
 220 00a0 0024F400 		.word	16000000
 221 00a4 00000000 		.word	.LANCHOR2
 222 00a8 00000000 		.word	.LANCHOR1
 223 00ac 00127A00 		.word	8000000
 224              		.cfi_endproc
 225              	.LFE318:
 227              		.global	MSIRangeTable
 228              		.global	APBPrescTable
 229              		.global	AHBPrescTable
 230              		.global	SystemCoreClock
 231              		.section	.data.SystemCoreClock,"aw"
 232              		.align	2
 233              		.set	.LANCHOR1,. + 0
 236              	SystemCoreClock:
 237 0000 00093D00 		.word	4000000
 238              		.section	.rodata.AHBPrescTable,"a"
 239              		.align	2
 240              		.set	.LANCHOR2,. + 0
 243              	AHBPrescTable:
 244 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 244      00000000 
 244      01020304 
 244      06
 245 000d 070809   		.ascii	"\007\010\011"
 246              		.section	.rodata.APBPrescTable,"a"
 247              		.align	2
 250              	APBPrescTable:
 251 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 251      01020304 
 252              		.section	.rodata.MSIRangeTable,"a"
 253              		.align	2
 254              		.set	.LANCHOR0,. + 0
 257              	MSIRangeTable:
 258 0000 A0860100 		.word	100000
 259 0004 400D0300 		.word	200000
 260 0008 801A0600 		.word	400000
 261 000c 00350C00 		.word	800000
 262 0010 40420F00 		.word	1000000
 263 0014 80841E00 		.word	2000000
 264 0018 00093D00 		.word	4000000
 265 001c 00127A00 		.word	8000000
 266 0020 0024F400 		.word	16000000
 267 0024 00366E01 		.word	24000000
 268 0028 0048E801 		.word	32000000
 269 002c 006CDC02 		.word	48000000
 270              		.text
 271              	.Letext0:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s 			page 12


 272              		.file 2 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 273              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 274              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 275              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 276              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32l4xx.c
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:20     .text.SystemInit:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:27     .text.SystemInit:00000000 SystemInit
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:46     .text.SystemInit:00000010 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:51     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:58     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:218    .text.SystemCoreClockUpdate:00000098 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:257    .rodata.MSIRangeTable:00000000 MSIRangeTable
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:250    .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:243    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:236    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:232    .data.SystemCoreClock:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:239    .rodata.AHBPrescTable:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:247    .rodata.APBPrescTable:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccU4FQj4.s:253    .rodata.MSIRangeTable:00000000 $d

NO UNDEFINED SYMBOLS
