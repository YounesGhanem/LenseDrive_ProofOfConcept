ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"mc_tasks.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.FOC_Clear,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.weak	FOC_Clear
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	FOC_Clear:
  28              	.LVL0:
  29              	.LFB1100:
  30              		.file 1 "Src/mc_tasks.c"
   1:Src/mc_tasks.c **** 
   2:Src/mc_tasks.c **** /**
   3:Src/mc_tasks.c ****   ******************************************************************************
   4:Src/mc_tasks.c ****   * @file    mc_tasks.c
   5:Src/mc_tasks.c ****   * @author  Motor Control SDK Team, ST Microelectronics
   6:Src/mc_tasks.c ****   * @brief   This file implements tasks definition
   7:Src/mc_tasks.c ****   *
   8:Src/mc_tasks.c ****   ******************************************************************************
   9:Src/mc_tasks.c ****   * @attention
  10:Src/mc_tasks.c ****   *
  11:Src/mc_tasks.c ****   * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
  12:Src/mc_tasks.c ****   * All rights reserved.</center></h2>
  13:Src/mc_tasks.c ****   *
  14:Src/mc_tasks.c ****   * This software component is licensed by ST under Ultimate Liberty license
  15:Src/mc_tasks.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  16:Src/mc_tasks.c ****   * the License. You may obtain a copy of the License at:
  17:Src/mc_tasks.c ****   *                             www.st.com/SLA0044
  18:Src/mc_tasks.c ****   *
  19:Src/mc_tasks.c ****   ******************************************************************************
  20:Src/mc_tasks.c ****   */
  21:Src/mc_tasks.c **** 
  22:Src/mc_tasks.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/mc_tasks.c **** //cstat -MISRAC2012-Rule-21.1
  24:Src/mc_tasks.c **** #include "main.h"
  25:Src/mc_tasks.c **** //cstat +MISRAC2012-Rule-21.1
  26:Src/mc_tasks.c **** #include "mc_type.h"
  27:Src/mc_tasks.c **** #include "mc_math.h"
  28:Src/mc_tasks.c **** #include "motorcontrol.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 2


  29:Src/mc_tasks.c **** #include "regular_conversion_manager.h"
  30:Src/mc_tasks.c **** #include "cmsis_os.h"
  31:Src/mc_tasks.c **** #include "mc_interface.h"
  32:Src/mc_tasks.c **** #include "digital_output.h"
  33:Src/mc_tasks.c **** #include "pwm_common.h"
  34:Src/mc_tasks.c **** #include "mc_tasks.h"
  35:Src/mc_tasks.c **** #include "parameters_conversion.h"
  36:Src/mc_tasks.c **** #include "mcp_config.h"
  37:Src/mc_tasks.c **** #include "mc_app_hooks.h"
  38:Src/mc_tasks.c **** 
  39:Src/mc_tasks.c **** /* USER CODE BEGIN Includes */
  40:Src/mc_tasks.c **** 
  41:Src/mc_tasks.c **** /* USER CODE END Includes */
  42:Src/mc_tasks.c **** 
  43:Src/mc_tasks.c **** /* USER CODE BEGIN Private define */
  44:Src/mc_tasks.c **** /* Private define ------------------------------------------------------------*/
  45:Src/mc_tasks.c **** /* Un-Comment this macro define in order to activate the smooth
  46:Src/mc_tasks.c ****    braking action on over voltage */
  47:Src/mc_tasks.c **** /* #define  MC.SMOOTH_BRAKING_ACTION_ON_OVERVOLTAGE */
  48:Src/mc_tasks.c **** 
  49:Src/mc_tasks.c **** #define STOPPERMANENCY_MS              ((uint16_t)400)
  50:Src/mc_tasks.c **** #define STOPPERMANENCY_MS2             ((uint16_t)400)
  51:Src/mc_tasks.c **** #define STOPPERMANENCY_TICKS           (uint16_t)((SYS_TICK_FREQUENCY * STOPPERMANENCY_MS)  / ((uin
  52:Src/mc_tasks.c **** #define STOPPERMANENCY_TICKS2          (uint16_t)((SYS_TICK_FREQUENCY * STOPPERMANENCY_MS2) / ((uin
  53:Src/mc_tasks.c **** /* USER CODE END Private define */
  54:Src/mc_tasks.c **** 
  55:Src/mc_tasks.c **** #define VBUS_TEMP_ERR_MASK (MC_OVER_VOLT| MC_UNDER_VOLT| MC_OVER_TEMP)
  56:Src/mc_tasks.c **** /* Private variables----------------------------------------------------------*/
  57:Src/mc_tasks.c **** 
  58:Src/mc_tasks.c **** static FOCVars_t FOCVars[NBR_OF_MOTORS];
  59:Src/mc_tasks.c **** 
  60:Src/mc_tasks.c **** static PWMC_Handle_t *pwmcHandle[NBR_OF_MOTORS];
  61:Src/mc_tasks.c **** //cstat !MISRAC2012-Rule-8.9_a
  62:Src/mc_tasks.c **** static RampExtMngr_Handle_t *pREMNG[NBR_OF_MOTORS];   /*!< Ramp manager used to modify the Iq ref
  63:Src/mc_tasks.c ****                                                     during the start-up switch over. */
  64:Src/mc_tasks.c **** OpenLoop_Handle_t *pOpenLoop[1] = {MC_NULL};          /* Only if M1 has OPEN LOOP */
  65:Src/mc_tasks.c **** 
  66:Src/mc_tasks.c **** static uint16_t hMFTaskCounterM1 = 0; //cstat !MISRAC2012-Rule-8.9_a
  67:Src/mc_tasks.c **** static volatile uint16_t hBootCapDelayCounterM1 = ((uint16_t)0);
  68:Src/mc_tasks.c **** static volatile uint16_t hStopPermanencyCounterM1 = ((uint16_t)0);
  69:Src/mc_tasks.c **** 
  70:Src/mc_tasks.c **** static volatile uint8_t bMCBootCompleted = ((uint8_t)0);
  71:Src/mc_tasks.c **** 
  72:Src/mc_tasks.c **** #define M1_CHARGE_BOOT_CAP_TICKS          (((uint16_t)SYS_TICK_FREQUENCY * (uint16_t)10) / 1000U)
  73:Src/mc_tasks.c **** #define M1_CHARGE_BOOT_CAP_DUTY_CYCLES ((uint32_t)0.000\
  74:Src/mc_tasks.c ****                                       * ((uint32_t)PWM_PERIOD_CYCLES / 2U))
  75:Src/mc_tasks.c **** #define M2_CHARGE_BOOT_CAP_TICKS         (((uint16_t)SYS_TICK_FREQUENCY * (uint16_t)10) / 1000U)
  76:Src/mc_tasks.c **** #define M2_CHARGE_BOOT_CAP_DUTY_CYCLES ((uint32_t)0\
  77:Src/mc_tasks.c ****                                       * ((uint32_t)PWM_PERIOD_CYCLES2 / 2U))
  78:Src/mc_tasks.c **** 
  79:Src/mc_tasks.c **** /* USER CODE BEGIN Private Variables */
  80:Src/mc_tasks.c **** 
  81:Src/mc_tasks.c **** /* USER CODE END Private Variables */
  82:Src/mc_tasks.c **** 
  83:Src/mc_tasks.c **** /* Private functions ---------------------------------------------------------*/
  84:Src/mc_tasks.c **** void TSK_MediumFrequencyTaskM1(void);
  85:Src/mc_tasks.c **** void FOC_Clear(uint8_t bMotor);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 3


  86:Src/mc_tasks.c **** void FOC_InitAdditionalMethods(uint8_t bMotor);
  87:Src/mc_tasks.c **** void FOC_CalcCurrRef(uint8_t bMotor);
  88:Src/mc_tasks.c **** void TSK_MF_StopProcessing(uint8_t motor);
  89:Src/mc_tasks.c **** MCI_Handle_t *GetMCI(uint8_t bMotor);
  90:Src/mc_tasks.c **** static uint16_t FOC_CurrControllerM1(void);
  91:Src/mc_tasks.c **** void TSK_SetChargeBootCapDelayM1(uint16_t hTickCount);
  92:Src/mc_tasks.c **** bool TSK_ChargeBootCapDelayHasElapsedM1(void);
  93:Src/mc_tasks.c **** void TSK_SetStopPermanencyTimeM1(uint16_t hTickCount);
  94:Src/mc_tasks.c **** bool TSK_StopPermanencyTimeHasElapsedM1(void);
  95:Src/mc_tasks.c **** void TSK_SafetyTask_PWMOFF(uint8_t motor);
  96:Src/mc_tasks.c **** 
  97:Src/mc_tasks.c **** /* USER CODE BEGIN Private Functions */
  98:Src/mc_tasks.c **** 
  99:Src/mc_tasks.c **** /* USER CODE END Private Functions */
 100:Src/mc_tasks.c **** /**
 101:Src/mc_tasks.c ****   * @brief  It initializes the whole MC core according to user defined
 102:Src/mc_tasks.c ****   *         parameters.
 103:Src/mc_tasks.c ****   * @param  pMCIList pointer to the vector of MCInterface objects that will be
 104:Src/mc_tasks.c ****   *         created and initialized. The vector must have length equal to the
 105:Src/mc_tasks.c ****   *         number of motor drives.
 106:Src/mc_tasks.c ****   */
 107:Src/mc_tasks.c **** __weak void MCboot( MCI_Handle_t* pMCIList[NBR_OF_MOTORS] )
 108:Src/mc_tasks.c **** {
 109:Src/mc_tasks.c ****   /* USER CODE BEGIN MCboot 0 */
 110:Src/mc_tasks.c **** 
 111:Src/mc_tasks.c ****   /* USER CODE END MCboot 0 */
 112:Src/mc_tasks.c **** 
 113:Src/mc_tasks.c ****   if (MC_NULL == pMCIList)
 114:Src/mc_tasks.c ****   {
 115:Src/mc_tasks.c ****     /* Nothing to do */
 116:Src/mc_tasks.c ****   }
 117:Src/mc_tasks.c ****   else
 118:Src/mc_tasks.c ****   {
 119:Src/mc_tasks.c **** 
 120:Src/mc_tasks.c ****     bMCBootCompleted = (uint8_t )0;
 121:Src/mc_tasks.c **** 
 122:Src/mc_tasks.c ****     /**********************************************************/
 123:Src/mc_tasks.c ****     /*    PWM and current sensing component initialization    */
 124:Src/mc_tasks.c ****     /**********************************************************/
 125:Src/mc_tasks.c ****     pwmcHandle[M1] = &PWM_Handle_M1._Super;
 126:Src/mc_tasks.c ****     R3_1_Init(&PWM_Handle_M1);
 127:Src/mc_tasks.c ****     ASPEP_start(&aspepOverUartA);
 128:Src/mc_tasks.c **** 
 129:Src/mc_tasks.c ****     /* USER CODE BEGIN MCboot 1 */
 130:Src/mc_tasks.c **** 
 131:Src/mc_tasks.c ****     /* USER CODE END MCboot 1 */
 132:Src/mc_tasks.c **** 
 133:Src/mc_tasks.c ****     /**************************************/
 134:Src/mc_tasks.c ****     /*    Start timers synchronously      */
 135:Src/mc_tasks.c ****     /**************************************/
 136:Src/mc_tasks.c ****     startTimers();
 137:Src/mc_tasks.c **** 
 138:Src/mc_tasks.c ****     /******************************************************/
 139:Src/mc_tasks.c ****     /*   PID component initialization: speed regulation   */
 140:Src/mc_tasks.c ****     /******************************************************/
 141:Src/mc_tasks.c ****     PID_HandleInit(&PIDSpeedHandle_M1);
 142:Src/mc_tasks.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 4


 143:Src/mc_tasks.c ****     /******************************************************/
 144:Src/mc_tasks.c ****     /*   Main speed sensor component initialization       */
 145:Src/mc_tasks.c ****     /******************************************************/
 146:Src/mc_tasks.c ****     STO_PLL_Init (&STO_PLL_M1);
 147:Src/mc_tasks.c **** 
 148:Src/mc_tasks.c ****     /******************************************************/
 149:Src/mc_tasks.c ****     /*   Speed & torque component initialization          */
 150:Src/mc_tasks.c ****     /******************************************************/
 151:Src/mc_tasks.c ****     STC_Init(pSTC[M1],&PIDSpeedHandle_M1, &STO_PLL_M1._Super);
 152:Src/mc_tasks.c **** 
 153:Src/mc_tasks.c ****     /****************************************************/
 154:Src/mc_tasks.c ****     /*   Virtual speed sensor component initialization  */
 155:Src/mc_tasks.c ****     /****************************************************/
 156:Src/mc_tasks.c ****     VSS_Init(&VirtualSpeedSensorM1);
 157:Src/mc_tasks.c **** 
 158:Src/mc_tasks.c ****     /**************************************/
 159:Src/mc_tasks.c ****     /*   Rev-up component initialization  */
 160:Src/mc_tasks.c ****     /**************************************/
 161:Src/mc_tasks.c ****     RUC_Init(&RevUpControlM1, pSTC[M1], &VirtualSpeedSensorM1, &STO_M1, pwmcHandle[M1]);
 162:Src/mc_tasks.c **** 
 163:Src/mc_tasks.c ****     /********************************************************/
 164:Src/mc_tasks.c ****     /*   PID component initialization: current regulation   */
 165:Src/mc_tasks.c ****     /********************************************************/
 166:Src/mc_tasks.c ****     PID_HandleInit(&PIDIqHandle_M1);
 167:Src/mc_tasks.c ****     PID_HandleInit(&PIDIdHandle_M1);
 168:Src/mc_tasks.c **** 
 169:Src/mc_tasks.c ****     /********************************************************/
 170:Src/mc_tasks.c ****     /*   Bus voltage sensor component initialization        */
 171:Src/mc_tasks.c ****     /********************************************************/
 172:Src/mc_tasks.c ****     (void)RCM_RegisterRegConv(&VbusRegConv_M1);
 173:Src/mc_tasks.c ****     RVBS_Init(&BusVoltageSensor_M1);
 174:Src/mc_tasks.c **** 
 175:Src/mc_tasks.c ****     /*************************************************/
 176:Src/mc_tasks.c ****     /*   Power measurement component initialization  */
 177:Src/mc_tasks.c ****     /*************************************************/
 178:Src/mc_tasks.c ****     pMPM[M1]->pVBS = &(BusVoltageSensor_M1._Super);
 179:Src/mc_tasks.c ****     pMPM[M1]->pFOCVars = &FOCVars[M1];
 180:Src/mc_tasks.c **** 
 181:Src/mc_tasks.c ****     /*******************************************************/
 182:Src/mc_tasks.c ****     /*   Temperature measurement component initialization  */
 183:Src/mc_tasks.c ****     /*******************************************************/
 184:Src/mc_tasks.c ****     (void)RCM_RegisterRegConv(&TempRegConv_M1);
 185:Src/mc_tasks.c ****     NTC_Init(&TempSensor_M1);
 186:Src/mc_tasks.c **** 
 187:Src/mc_tasks.c ****     OL_Init(&OpenLoop_ParamsM1, &VirtualSpeedSensorM1);     /* Only if M1 has open loop */
 188:Src/mc_tasks.c ****     pOpenLoop[M1] = &OpenLoop_ParamsM1;
 189:Src/mc_tasks.c **** 
 190:Src/mc_tasks.c ****     pREMNG[M1] = &RampExtMngrHFParamsM1;
 191:Src/mc_tasks.c ****     REMNG_Init(pREMNG[M1]);
 192:Src/mc_tasks.c **** 
 193:Src/mc_tasks.c ****     FOC_Clear(M1);
 194:Src/mc_tasks.c ****     FOCVars[M1].bDriveInput = EXTERNAL;
 195:Src/mc_tasks.c ****     FOCVars[M1].Iqdref = STC_GetDefaultIqdref(pSTC[M1]);
 196:Src/mc_tasks.c ****     FOCVars[M1].UserIdref = STC_GetDefaultIqdref(pSTC[M1]).d;
 197:Src/mc_tasks.c ****     MCI_Init(&Mci[M1], pSTC[M1], &FOCVars[M1],pwmcHandle[M1] );
 198:Src/mc_tasks.c ****     Mci[M1].pVSS =  &VirtualSpeedSensorM1;
 199:Src/mc_tasks.c ****     MCI_SetSpeedMode(&Mci[M1]);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 5


 200:Src/mc_tasks.c ****    Mci[M1].pScale = &scaleParams_M1;
 201:Src/mc_tasks.c **** 
 202:Src/mc_tasks.c ****     MCI_ExecSpeedRamp(&Mci[M1],
 203:Src/mc_tasks.c ****     STC_GetMecSpeedRefUnitDefault(pSTC[M1]),0); /* First command to STC */
 204:Src/mc_tasks.c ****     pMCIList[M1] = &Mci[M1];
 205:Src/mc_tasks.c **** 
 206:Src/mc_tasks.c ****     /* Applicative hook in MCBoot() */
 207:Src/mc_tasks.c ****     MC_APP_BootHook();
 208:Src/mc_tasks.c **** 
 209:Src/mc_tasks.c ****     /* USER CODE BEGIN MCboot 2 */
 210:Src/mc_tasks.c **** 
 211:Src/mc_tasks.c ****     /* USER CODE END MCboot 2 */
 212:Src/mc_tasks.c **** 
 213:Src/mc_tasks.c ****     bMCBootCompleted = 1U;
 214:Src/mc_tasks.c ****   }
 215:Src/mc_tasks.c **** }
 216:Src/mc_tasks.c **** 
 217:Src/mc_tasks.c **** /**
 218:Src/mc_tasks.c ****  * @brief Runs all the Tasks of the Motor Control cockpit
 219:Src/mc_tasks.c ****  *
 220:Src/mc_tasks.c ****  * This function is to be called periodically at least at the Medium Frequency task
 221:Src/mc_tasks.c ****  * rate (It is typically called on the Systick interrupt). Exact invokation rate is
 222:Src/mc_tasks.c ****  * the Speed regulator execution rate set in the Motor Contorl Workbench.
 223:Src/mc_tasks.c ****  *
 224:Src/mc_tasks.c ****  * The following tasks are executed in this order:
 225:Src/mc_tasks.c ****  *
 226:Src/mc_tasks.c ****  * - Medium Frequency Tasks of each motors.
 227:Src/mc_tasks.c ****  * - Safety Task.
 228:Src/mc_tasks.c ****  * - Power Factor Correction Task (if enabled).
 229:Src/mc_tasks.c ****  * - User Interface task.
 230:Src/mc_tasks.c ****  */
 231:Src/mc_tasks.c **** __weak void MC_RunMotorControlTasks(void)
 232:Src/mc_tasks.c **** {
 233:Src/mc_tasks.c ****   if (0U == bMCBootCompleted)
 234:Src/mc_tasks.c ****   {
 235:Src/mc_tasks.c ****     /* Nothing to do */
 236:Src/mc_tasks.c ****   }
 237:Src/mc_tasks.c ****   else
 238:Src/mc_tasks.c ****   {
 239:Src/mc_tasks.c ****     /* ** Medium Frequency Tasks ** */
 240:Src/mc_tasks.c ****     MC_Scheduler();
 241:Src/mc_tasks.c ****   }
 242:Src/mc_tasks.c **** }
 243:Src/mc_tasks.c **** 
 244:Src/mc_tasks.c **** /**
 245:Src/mc_tasks.c ****  * @brief Performs stop process and update the state machine.This function
 246:Src/mc_tasks.c ****  *        shall be called only during medium frequency task.
 247:Src/mc_tasks.c ****  */
 248:Src/mc_tasks.c **** void TSK_MF_StopProcessing(uint8_t motor)
 249:Src/mc_tasks.c **** {
 250:Src/mc_tasks.c ****     R3_1_SwitchOffPWM(pwmcHandle[motor]);
 251:Src/mc_tasks.c **** 
 252:Src/mc_tasks.c ****   FOC_Clear(motor);
 253:Src/mc_tasks.c ****   PQD_Clear(pMPM[motor]);
 254:Src/mc_tasks.c ****   TSK_SetStopPermanencyTimeM1(STOPPERMANENCY_TICKS);
 255:Src/mc_tasks.c ****   Mci[motor].State = STOP;
 256:Src/mc_tasks.c **** }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 6


 257:Src/mc_tasks.c **** 
 258:Src/mc_tasks.c **** /**
 259:Src/mc_tasks.c ****  * @brief  Executes the Medium Frequency Task functions for each drive instance.
 260:Src/mc_tasks.c ****  *
 261:Src/mc_tasks.c ****  * It is to be clocked at the Systick frequency.
 262:Src/mc_tasks.c ****  */
 263:Src/mc_tasks.c **** __weak void MC_Scheduler(void)
 264:Src/mc_tasks.c **** {
 265:Src/mc_tasks.c **** /* USER CODE BEGIN MC_Scheduler 0 */
 266:Src/mc_tasks.c **** 
 267:Src/mc_tasks.c **** /* USER CODE END MC_Scheduler 0 */
 268:Src/mc_tasks.c **** 
 269:Src/mc_tasks.c ****   if (((uint8_t)1) == bMCBootCompleted)
 270:Src/mc_tasks.c ****   {
 271:Src/mc_tasks.c ****     if(hMFTaskCounterM1 > 0u)
 272:Src/mc_tasks.c ****     {
 273:Src/mc_tasks.c ****       hMFTaskCounterM1--;
 274:Src/mc_tasks.c ****     }
 275:Src/mc_tasks.c ****     else
 276:Src/mc_tasks.c ****     {
 277:Src/mc_tasks.c ****       TSK_MediumFrequencyTaskM1();
 278:Src/mc_tasks.c **** 
 279:Src/mc_tasks.c ****       /* Applicative hook at end of Medium Frequency for Motor 1 */
 280:Src/mc_tasks.c ****       MC_APP_PostMediumFrequencyHook_M1();
 281:Src/mc_tasks.c **** 
 282:Src/mc_tasks.c ****       MCP_Over_UartA.rxBuffer = MCP_Over_UartA.pTransportLayer->fRXPacketProcess(MCP_Over_UartA.pTr
 283:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 284:Src/mc_tasks.c ****       if ( 0U == MCP_Over_UartA.rxBuffer)
 285:Src/mc_tasks.c ****       {
 286:Src/mc_tasks.c ****         /* Nothing to do */
 287:Src/mc_tasks.c ****       }
 288:Src/mc_tasks.c ****       else
 289:Src/mc_tasks.c ****       {
 290:Src/mc_tasks.c ****         /* Synchronous answer */
 291:Src/mc_tasks.c ****         if (0U == MCP_Over_UartA.pTransportLayer->fGetBuffer(MCP_Over_UartA.pTransportLayer,
 292:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 293:Src/mc_tasks.c ****                                                      MCTL_SYNC))
 294:Src/mc_tasks.c ****         {
 295:Src/mc_tasks.c ****           /* No buffer available to build the answer ... should not occur */
 296:Src/mc_tasks.c ****         }
 297:Src/mc_tasks.c ****         else
 298:Src/mc_tasks.c ****         {
 299:Src/mc_tasks.c ****           MCP_ReceivedPacket(&MCP_Over_UartA);
 300:Src/mc_tasks.c ****           MCP_Over_UartA.pTransportLayer->fSendPacket(MCP_Over_UartA.pTransportLayer, MCP_Over_Uart
 301:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 302:Src/mc_tasks.c ****           /* No buffer available to build the answer ... should not occur */
 303:Src/mc_tasks.c ****         }
 304:Src/mc_tasks.c ****       }
 305:Src/mc_tasks.c **** 
 306:Src/mc_tasks.c ****       /* USER CODE BEGIN MC_Scheduler 1 */
 307:Src/mc_tasks.c **** 
 308:Src/mc_tasks.c ****       /* USER CODE END MC_Scheduler 1 */
 309:Src/mc_tasks.c ****       hMFTaskCounterM1 = (uint16_t)MF_TASK_OCCURENCE_TICKS;
 310:Src/mc_tasks.c ****     }
 311:Src/mc_tasks.c ****     if(hBootCapDelayCounterM1 > 0U)
 312:Src/mc_tasks.c ****     {
 313:Src/mc_tasks.c ****       hBootCapDelayCounterM1--;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 7


 314:Src/mc_tasks.c ****     }
 315:Src/mc_tasks.c ****     else
 316:Src/mc_tasks.c ****     {
 317:Src/mc_tasks.c ****       /* Nothing to do */
 318:Src/mc_tasks.c ****     }
 319:Src/mc_tasks.c ****     if(hStopPermanencyCounterM1 > 0U)
 320:Src/mc_tasks.c ****     {
 321:Src/mc_tasks.c ****       hStopPermanencyCounterM1--;
 322:Src/mc_tasks.c ****     }
 323:Src/mc_tasks.c ****     else
 324:Src/mc_tasks.c ****     {
 325:Src/mc_tasks.c ****       /* Nothing to do */
 326:Src/mc_tasks.c ****     }
 327:Src/mc_tasks.c ****   }
 328:Src/mc_tasks.c ****   else
 329:Src/mc_tasks.c ****   {
 330:Src/mc_tasks.c ****     /* Nothing to do */
 331:Src/mc_tasks.c ****   }
 332:Src/mc_tasks.c ****   /* USER CODE BEGIN MC_Scheduler 2 */
 333:Src/mc_tasks.c **** 
 334:Src/mc_tasks.c ****   /* USER CODE END MC_Scheduler 2 */
 335:Src/mc_tasks.c **** }
 336:Src/mc_tasks.c **** 
 337:Src/mc_tasks.c **** /**
 338:Src/mc_tasks.c ****   * @brief Executes medium frequency periodic Motor Control tasks
 339:Src/mc_tasks.c ****   *
 340:Src/mc_tasks.c ****   * This function performs some of the control duties on Motor 1 according to the
 341:Src/mc_tasks.c ****   * present state of its state machine. In particular, duties requiring a periodic
 342:Src/mc_tasks.c ****   * execution at a medium frequency rate (such as the speed controller for instance)
 343:Src/mc_tasks.c ****   * are executed here.
 344:Src/mc_tasks.c ****   */
 345:Src/mc_tasks.c **** __weak void TSK_MediumFrequencyTaskM1(void)
 346:Src/mc_tasks.c **** {
 347:Src/mc_tasks.c ****   /* USER CODE BEGIN MediumFrequencyTask M1 0 */
 348:Src/mc_tasks.c **** 
 349:Src/mc_tasks.c ****   /* USER CODE END MediumFrequencyTask M1 0 */
 350:Src/mc_tasks.c **** 
 351:Src/mc_tasks.c ****   int16_t wAux = 0;
 352:Src/mc_tasks.c ****   MC_ControlMode_t mode;
 353:Src/mc_tasks.c **** 
 354:Src/mc_tasks.c ****   mode = MCI_GetControlMode(&Mci[M1]);
 355:Src/mc_tasks.c ****   bool IsSpeedReliable = STO_PLL_CalcAvrgMecSpeedUnit(&STO_PLL_M1, &wAux);
 356:Src/mc_tasks.c ****   PQD_CalcElMotorPower(pMPM[M1]);
 357:Src/mc_tasks.c **** 
 358:Src/mc_tasks.c ****   if (MCI_GetCurrentFaults(&Mci[M1]) == MC_NO_FAULTS)
 359:Src/mc_tasks.c ****   {
 360:Src/mc_tasks.c ****     if (MCI_GetOccurredFaults(&Mci[M1]) == MC_NO_FAULTS)
 361:Src/mc_tasks.c ****     {
 362:Src/mc_tasks.c ****       switch (Mci[M1].State)
 363:Src/mc_tasks.c ****       {
 364:Src/mc_tasks.c **** 
 365:Src/mc_tasks.c ****         case IDLE:
 366:Src/mc_tasks.c ****         {
 367:Src/mc_tasks.c ****           if ((MCI_START == Mci[M1].DirectCommand) || (MCI_MEASURE_OFFSETS == Mci[M1].DirectCommand
 368:Src/mc_tasks.c ****           {
 369:Src/mc_tasks.c ****             if ( mode != MCM_OPEN_LOOP_VOLTAGE_MODE && mode != MCM_OPEN_LOOP_CURRENT_MODE)
 370:Src/mc_tasks.c ****             {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 8


 371:Src/mc_tasks.c ****               RUC_Clear(&RevUpControlM1, MCI_GetImposedMotorDirection(&Mci[M1]));
 372:Src/mc_tasks.c ****             }
 373:Src/mc_tasks.c ****             else
 374:Src/mc_tasks.c ****             {
 375:Src/mc_tasks.c ****               /* Nothing to do */
 376:Src/mc_tasks.c ****             }
 377:Src/mc_tasks.c ****             if (pwmcHandle[M1]->offsetCalibStatus == false)
 378:Src/mc_tasks.c ****             {
 379:Src/mc_tasks.c ****               (void)PWMC_CurrentReadingCalibr(pwmcHandle[M1], CRC_START);
 380:Src/mc_tasks.c ****               Mci[M1].State = OFFSET_CALIB;
 381:Src/mc_tasks.c ****             }
 382:Src/mc_tasks.c ****             else
 383:Src/mc_tasks.c ****             {
 384:Src/mc_tasks.c ****               /* Calibration already done. Enables only TIM channels */
 385:Src/mc_tasks.c ****               pwmcHandle[M1]->OffCalibrWaitTimeCounter = 1u;
 386:Src/mc_tasks.c ****               (void)PWMC_CurrentReadingCalibr(pwmcHandle[M1], CRC_EXEC);
 387:Src/mc_tasks.c ****               R3_1_TurnOnLowSides(pwmcHandle[M1],M1_CHARGE_BOOT_CAP_DUTY_CYCLES);
 388:Src/mc_tasks.c ****               TSK_SetChargeBootCapDelayM1(M1_CHARGE_BOOT_CAP_TICKS);
 389:Src/mc_tasks.c ****               Mci[M1].State = CHARGE_BOOT_CAP;
 390:Src/mc_tasks.c ****             }
 391:Src/mc_tasks.c ****           }
 392:Src/mc_tasks.c ****           else
 393:Src/mc_tasks.c ****           {
 394:Src/mc_tasks.c ****             /* Nothing to be done, FW stays in IDLE state */
 395:Src/mc_tasks.c ****           }
 396:Src/mc_tasks.c ****           break;
 397:Src/mc_tasks.c ****         }
 398:Src/mc_tasks.c **** 
 399:Src/mc_tasks.c ****         case OFFSET_CALIB:
 400:Src/mc_tasks.c ****         {
 401:Src/mc_tasks.c ****           if (MCI_STOP == Mci[M1].DirectCommand)
 402:Src/mc_tasks.c ****           {
 403:Src/mc_tasks.c ****             TSK_MF_StopProcessing(M1);
 404:Src/mc_tasks.c ****           }
 405:Src/mc_tasks.c ****           else
 406:Src/mc_tasks.c ****           {
 407:Src/mc_tasks.c ****             if (PWMC_CurrentReadingCalibr(pwmcHandle[M1], CRC_EXEC))
 408:Src/mc_tasks.c ****             {
 409:Src/mc_tasks.c ****               if (MCI_MEASURE_OFFSETS == Mci[M1].DirectCommand)
 410:Src/mc_tasks.c ****               {
 411:Src/mc_tasks.c ****                 FOC_Clear(M1);
 412:Src/mc_tasks.c ****                 PQD_Clear(pMPM[M1]);
 413:Src/mc_tasks.c ****                 Mci[M1].DirectCommand = MCI_NO_COMMAND;
 414:Src/mc_tasks.c ****                 Mci[M1].State = IDLE;
 415:Src/mc_tasks.c ****               }
 416:Src/mc_tasks.c ****               else
 417:Src/mc_tasks.c ****               {
 418:Src/mc_tasks.c ****                 R3_1_TurnOnLowSides(pwmcHandle[M1],M1_CHARGE_BOOT_CAP_DUTY_CYCLES);
 419:Src/mc_tasks.c ****                 TSK_SetChargeBootCapDelayM1(M1_CHARGE_BOOT_CAP_TICKS);
 420:Src/mc_tasks.c ****                 Mci[M1].State = CHARGE_BOOT_CAP;
 421:Src/mc_tasks.c ****               }
 422:Src/mc_tasks.c ****             }
 423:Src/mc_tasks.c ****             else
 424:Src/mc_tasks.c ****             {
 425:Src/mc_tasks.c ****               /* Nothing to be done, FW waits for offset calibration to finish */
 426:Src/mc_tasks.c ****             }
 427:Src/mc_tasks.c ****           }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 9


 428:Src/mc_tasks.c ****           break;
 429:Src/mc_tasks.c ****         }
 430:Src/mc_tasks.c **** 
 431:Src/mc_tasks.c ****         case CHARGE_BOOT_CAP:
 432:Src/mc_tasks.c ****         {
 433:Src/mc_tasks.c ****           if (MCI_STOP == Mci[M1].DirectCommand)
 434:Src/mc_tasks.c ****           {
 435:Src/mc_tasks.c ****             TSK_MF_StopProcessing(M1);
 436:Src/mc_tasks.c ****           }
 437:Src/mc_tasks.c ****           else
 438:Src/mc_tasks.c ****           {
 439:Src/mc_tasks.c ****             if (TSK_ChargeBootCapDelayHasElapsedM1())
 440:Src/mc_tasks.c ****             {
 441:Src/mc_tasks.c ****               R3_1_SwitchOffPWM(pwmcHandle[M1]);
 442:Src/mc_tasks.c ****               FOCVars[M1].bDriveInput = EXTERNAL;
 443:Src/mc_tasks.c ****               STC_SetSpeedSensor( pSTC[M1], &VirtualSpeedSensorM1._Super );
 444:Src/mc_tasks.c ****               STO_PLL_Clear(&STO_PLL_M1);
 445:Src/mc_tasks.c ****               FOC_Clear( M1 );
 446:Src/mc_tasks.c **** 
 447:Src/mc_tasks.c ****               if (MCM_OPEN_LOOP_VOLTAGE_MODE == mode || MCM_OPEN_LOOP_CURRENT_MODE == mode)
 448:Src/mc_tasks.c ****               {
 449:Src/mc_tasks.c ****                 Mci[M1].State = RUN;
 450:Src/mc_tasks.c ****               }
 451:Src/mc_tasks.c ****               else
 452:Src/mc_tasks.c ****               {
 453:Src/mc_tasks.c ****                 Mci[M1].State = START;
 454:Src/mc_tasks.c ****               }
 455:Src/mc_tasks.c ****               PWMC_SwitchOnPWM(pwmcHandle[M1]);
 456:Src/mc_tasks.c ****             }
 457:Src/mc_tasks.c ****             else
 458:Src/mc_tasks.c ****             {
 459:Src/mc_tasks.c ****               /* Nothing to be done, FW waits for bootstrap capacitor to charge */
 460:Src/mc_tasks.c ****             }
 461:Src/mc_tasks.c ****           }
 462:Src/mc_tasks.c ****           break;
 463:Src/mc_tasks.c ****         }
 464:Src/mc_tasks.c **** 
 465:Src/mc_tasks.c ****         case START:
 466:Src/mc_tasks.c ****         {
 467:Src/mc_tasks.c ****           if (MCI_STOP == Mci[M1].DirectCommand)
 468:Src/mc_tasks.c ****           {
 469:Src/mc_tasks.c ****             TSK_MF_StopProcessing(M1);
 470:Src/mc_tasks.c ****           }
 471:Src/mc_tasks.c ****           else
 472:Src/mc_tasks.c ****           {
 473:Src/mc_tasks.c ****             /* Mechanical speed as imposed by the Virtual Speed Sensor during the Rev Up phase. */
 474:Src/mc_tasks.c ****             int16_t hForcedMecSpeedUnit;
 475:Src/mc_tasks.c ****             qd_t IqdRef;
 476:Src/mc_tasks.c ****             bool ObserverConverged;
 477:Src/mc_tasks.c **** 
 478:Src/mc_tasks.c ****             /* Execute the Rev Up procedure */
 479:Src/mc_tasks.c ****             if(! RUC_Exec(&RevUpControlM1))
 480:Src/mc_tasks.c ****             {
 481:Src/mc_tasks.c ****             /* The time allowed for the startup sequence has expired */
 482:Src/mc_tasks.c ****               MCI_FaultProcessing(&Mci[M1], MC_START_UP, 0);
 483:Src/mc_tasks.c ****             }
 484:Src/mc_tasks.c ****             else
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 10


 485:Src/mc_tasks.c ****             {
 486:Src/mc_tasks.c ****               /* Execute the torque open loop current start-up ramp:
 487:Src/mc_tasks.c ****                * Compute the Iq reference current as configured in the Rev Up sequence */
 488:Src/mc_tasks.c ****               IqdRef.q = STC_CalcTorqueReference(pSTC[M1]);
 489:Src/mc_tasks.c ****               IqdRef.d = FOCVars[M1].UserIdref;
 490:Src/mc_tasks.c ****               /* Iqd reference current used by the High Frequency Loop to generate the PWM output *
 491:Src/mc_tasks.c ****               FOCVars[M1].Iqdref = IqdRef;
 492:Src/mc_tasks.c ****            }
 493:Src/mc_tasks.c **** 
 494:Src/mc_tasks.c ****             (void)VSS_CalcAvrgMecSpeedUnit(&VirtualSpeedSensorM1, &hForcedMecSpeedUnit);
 495:Src/mc_tasks.c **** 
 496:Src/mc_tasks.c ****             /* Check that startup stage where the observer has to be used has been reached */
 497:Src/mc_tasks.c ****             if (true == RUC_FirstAccelerationStageReached(&RevUpControlM1))
 498:Src/mc_tasks.c ****             {
 499:Src/mc_tasks.c ****               ObserverConverged = STO_PLL_IsObserverConverged(&STO_PLL_M1, &hForcedMecSpeedUnit);
 500:Src/mc_tasks.c ****               STO_SetDirection(&STO_PLL_M1, (int8_t)MCI_GetImposedMotorDirection(&Mci[M1]));
 501:Src/mc_tasks.c **** 
 502:Src/mc_tasks.c ****               (void)VSS_SetStartTransition(&VirtualSpeedSensorM1, ObserverConverged);
 503:Src/mc_tasks.c ****             }
 504:Src/mc_tasks.c ****             else
 505:Src/mc_tasks.c ****             {
 506:Src/mc_tasks.c ****               ObserverConverged = false;
 507:Src/mc_tasks.c ****             }
 508:Src/mc_tasks.c ****             if (ObserverConverged)
 509:Src/mc_tasks.c ****             {
 510:Src/mc_tasks.c ****               qd_t StatorCurrent = MCM_Park(FOCVars[M1].Ialphabeta, SPD_GetElAngle(&STO_PLL_M1._Sup
 511:Src/mc_tasks.c **** 
 512:Src/mc_tasks.c ****               /* Start switch over ramp. This ramp will transition from the revup to the closed loo
 513:Src/mc_tasks.c ****               REMNG_Init(pREMNG[M1]);
 514:Src/mc_tasks.c ****               (void)REMNG_ExecRamp(pREMNG[M1], FOCVars[M1].Iqdref.q, 0);
 515:Src/mc_tasks.c ****               (void)REMNG_ExecRamp(pREMNG[M1], StatorCurrent.q, TRANSITION_DURATION);
 516:Src/mc_tasks.c ****               Mci[M1].State = SWITCH_OVER;
 517:Src/mc_tasks.c ****             }
 518:Src/mc_tasks.c ****           }
 519:Src/mc_tasks.c ****           break;
 520:Src/mc_tasks.c ****         }
 521:Src/mc_tasks.c **** 
 522:Src/mc_tasks.c ****         case SWITCH_OVER:
 523:Src/mc_tasks.c ****         {
 524:Src/mc_tasks.c ****           if (MCI_STOP == Mci[M1].DirectCommand)
 525:Src/mc_tasks.c ****           {
 526:Src/mc_tasks.c ****             TSK_MF_StopProcessing(M1);
 527:Src/mc_tasks.c ****           }
 528:Src/mc_tasks.c ****           else
 529:Src/mc_tasks.c ****           {
 530:Src/mc_tasks.c ****             bool LoopClosed;
 531:Src/mc_tasks.c ****             int16_t hForcedMecSpeedUnit;
 532:Src/mc_tasks.c **** 
 533:Src/mc_tasks.c ****             if (! RUC_Exec(&RevUpControlM1))
 534:Src/mc_tasks.c ****             {
 535:Src/mc_tasks.c ****               /* The time allowed for the startup sequence has expired */
 536:Src/mc_tasks.c ****               MCI_FaultProcessing(&Mci[M1], MC_START_UP, 0);
 537:Src/mc_tasks.c ****             }
 538:Src/mc_tasks.c ****             else
 539:Src/mc_tasks.c ****             {
 540:Src/mc_tasks.c ****               /* Compute the virtual speed and positions of the rotor.
 541:Src/mc_tasks.c ****                  The function returns true if the virtual speed is in the reliability range */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 11


 542:Src/mc_tasks.c ****               LoopClosed = VSS_CalcAvrgMecSpeedUnit(&VirtualSpeedSensorM1, &hForcedMecSpeedUnit);
 543:Src/mc_tasks.c ****               /* Check if the transition ramp has completed. */
 544:Src/mc_tasks.c ****               bool tempBool;
 545:Src/mc_tasks.c ****               tempBool = VSS_TransitionEnded(&VirtualSpeedSensorM1);
 546:Src/mc_tasks.c ****               LoopClosed = LoopClosed || tempBool;
 547:Src/mc_tasks.c **** 
 548:Src/mc_tasks.c ****               /* If any of the above conditions is true, the loop is considered closed.
 549:Src/mc_tasks.c ****                  The state machine transitions to the RUN state */
 550:Src/mc_tasks.c ****               if (true ==  LoopClosed)
 551:Src/mc_tasks.c ****               {
 552:Src/mc_tasks.c **** #if PID_SPEED_INTEGRAL_INIT_DIV == 0
 553:Src/mc_tasks.c ****                 PID_SetIntegralTerm(&PIDSpeedHandle_M1, 0);
 554:Src/mc_tasks.c **** #else
 555:Src/mc_tasks.c ****                 PID_SetIntegralTerm(&PIDSpeedHandle_M1,
 556:Src/mc_tasks.c ****                                     (((int32_t)FOCVars[M1].Iqdref.q * (int16_t)PID_GetKIDivisor(&PI
 557:Src/mc_tasks.c ****                                     / PID_SPEED_INTEGRAL_INIT_DIV));
 558:Src/mc_tasks.c **** #endif
 559:Src/mc_tasks.c ****                 /* USER CODE BEGIN MediumFrequencyTask M1 1 */
 560:Src/mc_tasks.c **** 
 561:Src/mc_tasks.c ****                 /* USER CODE END MediumFrequencyTask M1 1 */
 562:Src/mc_tasks.c ****                 STC_SetSpeedSensor(pSTC[M1], &STO_PLL_M1._Super); /* Observer has converged */
 563:Src/mc_tasks.c ****                 FOC_InitAdditionalMethods(M1);
 564:Src/mc_tasks.c ****                 FOC_CalcCurrRef(M1);
 565:Src/mc_tasks.c ****                 STC_ForceSpeedReferenceToCurrentSpeed(pSTC[M1]); /* Init the reference speed to cur
 566:Src/mc_tasks.c ****                 MCI_ExecBufferedCommands(&Mci[M1]); /* Exec the speed ramp after changing of the sp
 567:Src/mc_tasks.c ****                 Mci[M1].State = RUN;
 568:Src/mc_tasks.c ****               }
 569:Src/mc_tasks.c ****             }
 570:Src/mc_tasks.c ****           }
 571:Src/mc_tasks.c ****           break;
 572:Src/mc_tasks.c ****         }
 573:Src/mc_tasks.c **** 
 574:Src/mc_tasks.c ****         case RUN:
 575:Src/mc_tasks.c ****         {
 576:Src/mc_tasks.c ****           if (MCI_STOP == Mci[M1].DirectCommand)
 577:Src/mc_tasks.c ****           {
 578:Src/mc_tasks.c ****             TSK_MF_StopProcessing(M1);
 579:Src/mc_tasks.c ****           }
 580:Src/mc_tasks.c ****           else
 581:Src/mc_tasks.c ****           {
 582:Src/mc_tasks.c ****             /* USER CODE BEGIN MediumFrequencyTask M1 2 */
 583:Src/mc_tasks.c **** 
 584:Src/mc_tasks.c ****             /* USER CODE END MediumFrequencyTask M1 2 */
 585:Src/mc_tasks.c **** 
 586:Src/mc_tasks.c ****             MCI_ExecBufferedCommands(&Mci[M1]);
 587:Src/mc_tasks.c ****             if (mode != MCM_OPEN_LOOP_VOLTAGE_MODE && mode != MCM_OPEN_LOOP_CURRENT_MODE)
 588:Src/mc_tasks.c ****             {
 589:Src/mc_tasks.c **** 
 590:Src/mc_tasks.c ****               FOC_CalcCurrRef(M1);
 591:Src/mc_tasks.c **** 
 592:Src/mc_tasks.c ****               if(!IsSpeedReliable)
 593:Src/mc_tasks.c ****               {
 594:Src/mc_tasks.c ****                 MCI_FaultProcessing(&Mci[M1], MC_SPEED_FDBK, 0);
 595:Src/mc_tasks.c ****               }
 596:Src/mc_tasks.c ****               else
 597:Src/mc_tasks.c ****               {
 598:Src/mc_tasks.c ****                 /* Nothing to do */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 12


 599:Src/mc_tasks.c ****               }
 600:Src/mc_tasks.c ****             }
 601:Src/mc_tasks.c ****             else
 602:Src/mc_tasks.c ****             {
 603:Src/mc_tasks.c ****               int16_t hForcedMecSpeedUnit;
 604:Src/mc_tasks.c ****               /* Open Loop */
 605:Src/mc_tasks.c ****               VSS_CalcAvrgMecSpeedUnit( &VirtualSpeedSensorM1, &hForcedMecSpeedUnit);
 606:Src/mc_tasks.c ****               OL_Calc(pOpenLoop[M1]);
 607:Src/mc_tasks.c ****             }
 608:Src/mc_tasks.c ****           }
 609:Src/mc_tasks.c ****           break;
 610:Src/mc_tasks.c ****         }
 611:Src/mc_tasks.c **** 
 612:Src/mc_tasks.c ****         case STOP:
 613:Src/mc_tasks.c ****         {
 614:Src/mc_tasks.c ****           if (TSK_StopPermanencyTimeHasElapsedM1())
 615:Src/mc_tasks.c ****           {
 616:Src/mc_tasks.c **** 
 617:Src/mc_tasks.c ****             STC_SetSpeedSensor(pSTC[M1], &VirtualSpeedSensorM1._Super);    /* Sensor-less */
 618:Src/mc_tasks.c ****             VSS_Clear(&VirtualSpeedSensorM1); /* Reset measured speed in IDLE */
 619:Src/mc_tasks.c ****             /* USER CODE BEGIN MediumFrequencyTask M1 5 */
 620:Src/mc_tasks.c **** 
 621:Src/mc_tasks.c ****             /* USER CODE END MediumFrequencyTask M1 5 */
 622:Src/mc_tasks.c ****             Mci[M1].DirectCommand = MCI_NO_COMMAND;
 623:Src/mc_tasks.c ****             Mci[M1].State = IDLE;
 624:Src/mc_tasks.c ****           }
 625:Src/mc_tasks.c ****           else
 626:Src/mc_tasks.c ****           {
 627:Src/mc_tasks.c ****             /* Nothing to do, FW waits for to stop */
 628:Src/mc_tasks.c ****           }
 629:Src/mc_tasks.c ****           break;
 630:Src/mc_tasks.c ****         }
 631:Src/mc_tasks.c **** 
 632:Src/mc_tasks.c ****         case FAULT_OVER:
 633:Src/mc_tasks.c ****         {
 634:Src/mc_tasks.c ****           if (MCI_ACK_FAULTS == Mci[M1].DirectCommand)
 635:Src/mc_tasks.c ****           {
 636:Src/mc_tasks.c ****             Mci[M1].DirectCommand = MCI_NO_COMMAND;
 637:Src/mc_tasks.c ****             Mci[M1].State = IDLE;
 638:Src/mc_tasks.c ****           }
 639:Src/mc_tasks.c ****           else
 640:Src/mc_tasks.c ****           {
 641:Src/mc_tasks.c ****             /* Nothing to do, FW stays in FAULT_OVER state until acknowledgement */
 642:Src/mc_tasks.c ****           }
 643:Src/mc_tasks.c ****           break;
 644:Src/mc_tasks.c ****         }
 645:Src/mc_tasks.c **** 
 646:Src/mc_tasks.c ****         case FAULT_NOW:
 647:Src/mc_tasks.c ****         {
 648:Src/mc_tasks.c ****           Mci[M1].State = FAULT_OVER;
 649:Src/mc_tasks.c ****           break;
 650:Src/mc_tasks.c ****         }
 651:Src/mc_tasks.c **** 
 652:Src/mc_tasks.c ****         default:
 653:Src/mc_tasks.c ****           break;
 654:Src/mc_tasks.c ****        }
 655:Src/mc_tasks.c ****     }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 13


 656:Src/mc_tasks.c ****     else
 657:Src/mc_tasks.c ****     {
 658:Src/mc_tasks.c ****       Mci[M1].State = FAULT_OVER;
 659:Src/mc_tasks.c ****     }
 660:Src/mc_tasks.c ****   }
 661:Src/mc_tasks.c ****   else
 662:Src/mc_tasks.c ****   {
 663:Src/mc_tasks.c ****     Mci[M1].State = FAULT_NOW;
 664:Src/mc_tasks.c ****   }
 665:Src/mc_tasks.c ****   /* USER CODE BEGIN MediumFrequencyTask M1 6 */
 666:Src/mc_tasks.c **** 
 667:Src/mc_tasks.c ****   /* USER CODE END MediumFrequencyTask M1 6 */
 668:Src/mc_tasks.c **** }
 669:Src/mc_tasks.c **** 
 670:Src/mc_tasks.c **** /**
 671:Src/mc_tasks.c ****   * @brief  It re-initializes the current and voltage variables. Moreover
 672:Src/mc_tasks.c ****   *         it clears qd currents PI controllers, voltage sensor and SpeednTorque
 673:Src/mc_tasks.c ****   *         controller. It must be called before each motor restart.
 674:Src/mc_tasks.c ****   *         It does not clear speed sensor.
 675:Src/mc_tasks.c ****   * @param  bMotor related motor it can be M1 or M2.
 676:Src/mc_tasks.c ****   */
 677:Src/mc_tasks.c **** __weak void FOC_Clear(uint8_t bMotor)
 678:Src/mc_tasks.c **** {
  31              		.loc 1 678 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
 679:Src/mc_tasks.c ****   /* USER CODE BEGIN FOC_Clear 0 */
 680:Src/mc_tasks.c **** 
 681:Src/mc_tasks.c ****   /* USER CODE END FOC_Clear 0 */
 682:Src/mc_tasks.c ****   MC_ControlMode_t mode;
  35              		.loc 1 682 3 view .LVU1
 683:Src/mc_tasks.c **** 
 684:Src/mc_tasks.c ****   mode = MCI_GetControlMode( &Mci[bMotor] );
  36              		.loc 1 684 3 view .LVU2
 678:Src/mc_tasks.c ****   /* USER CODE BEGIN FOC_Clear 0 */
  37              		.loc 1 678 1 is_stmt 0 view .LVU3
  38 0000 38B5     		push	{r3, r4, r5, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 3, -16
  42              		.cfi_offset 4, -12
  43              		.cfi_offset 5, -8
  44              		.cfi_offset 14, -4
 678:Src/mc_tasks.c ****   /* USER CODE BEGIN FOC_Clear 0 */
  45              		.loc 1 678 1 view .LVU4
  46 0002 0446     		mov	r4, r0
  47              		.loc 1 684 10 view .LVU5
  48 0004 04EB8403 		add	r3, r4, r4, lsl #2
  49 0008 1E48     		ldr	r0, .L5
  50              	.LVL1:
  51              		.loc 1 684 10 view .LVU6
  52 000a 04EB4303 		add	r3, r4, r3, lsl #1
  53 000e 00EB8300 		add	r0, r0, r3, lsl #2
  54 0012 FFF7FEFF 		bl	MCI_GetControlMode
  55              	.LVL2:
 685:Src/mc_tasks.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 14


 686:Src/mc_tasks.c ****   ab_t NULL_ab = {((int16_t)0), ((int16_t)0)};
  56              		.loc 1 686 3 is_stmt 1 view .LVU7
 687:Src/mc_tasks.c ****   qd_t NULL_qd = {((int16_t)0), ((int16_t)0)};
  57              		.loc 1 687 3 view .LVU8
 688:Src/mc_tasks.c ****   alphabeta_t NULL_alphabeta = {((int16_t)0), ((int16_t)0)};
  58              		.loc 1 688 3 view .LVU9
 689:Src/mc_tasks.c **** 
 690:Src/mc_tasks.c ****   FOCVars[bMotor].Iab = NULL_ab;
  59              		.loc 1 690 3 view .LVU10
 691:Src/mc_tasks.c ****   FOCVars[bMotor].Ialphabeta = NULL_alphabeta;
  60              		.loc 1 691 3 view .LVU11
  61 0016 2622     		movs	r2, #38
 692:Src/mc_tasks.c ****   FOCVars[bMotor].Iqd = NULL_qd;
 693:Src/mc_tasks.c ****   if ( mode != MCM_OPEN_LOOP_VOLTAGE_MODE && mode != MCM_OPEN_LOOP_CURRENT_MODE)
  62              		.loc 1 693 43 is_stmt 0 view .LVU12
  63 0018 0138     		subs	r0, r0, #1
  64              	.LVL3:
  65              		.loc 1 693 43 view .LVU13
  66 001a 04FB02F2 		mul	r2, r4, r2
  67 001e 1A4B     		ldr	r3, .L5+4
  68              		.loc 1 693 6 view .LVU14
  69 0020 C0B2     		uxtb	r0, r0
  70 0022 0128     		cmp	r0, #1
 690:Src/mc_tasks.c ****   FOCVars[bMotor].Ialphabeta = NULL_alphabeta;
  71              		.loc 1 690 23 view .LVU15
  72 0024 4FF00001 		mov	r1, #0
  73 0028 9950     		str	r1, [r3, r2]	@ unaligned
  74 002a 03EB020C 		add	ip, r3, r2
 694:Src/mc_tasks.c ****   {
 695:Src/mc_tasks.c ****     FOCVars[bMotor].Iqdref = NULL_qd;
  75              		.loc 1 695 28 view .LVU16
  76 002e 88BF     		it	hi
  77 0030 1032     		addhi	r2, r2, #16
 690:Src/mc_tasks.c ****   FOCVars[bMotor].Ialphabeta = NULL_alphabeta;
  78              		.loc 1 690 23 view .LVU17
  79 0032 CCF80410 		str	r1, [ip, #4]	@ unaligned
 692:Src/mc_tasks.c ****   if ( mode != MCM_OPEN_LOOP_VOLTAGE_MODE && mode != MCM_OPEN_LOOP_CURRENT_MODE)
  80              		.loc 1 692 3 is_stmt 1 view .LVU18
 692:Src/mc_tasks.c ****   if ( mode != MCM_OPEN_LOOP_VOLTAGE_MODE && mode != MCM_OPEN_LOOP_CURRENT_MODE)
  81              		.loc 1 692 23 is_stmt 0 view .LVU19
  82 0036 CCF80C10 		str	r1, [ip, #12]	@ unaligned
 693:Src/mc_tasks.c ****   {
  83              		.loc 1 693 3 is_stmt 1 view .LVU20
  84              		.loc 1 695 5 view .LVU21
 696:Src/mc_tasks.c ****   }
 697:Src/mc_tasks.c ****   else
 698:Src/mc_tasks.c ****   {
 699:Src/mc_tasks.c ****     /* Nothing to do */
 700:Src/mc_tasks.c ****   }
  85              		.loc 1 700 3 view .LVU22
 701:Src/mc_tasks.c ****   FOCVars[bMotor].hTeref = (int16_t)0;
  86              		.loc 1 701 3 view .LVU23
 702:Src/mc_tasks.c ****   FOCVars[bMotor].Vqd = NULL_qd;
  87              		.loc 1 702 3 view .LVU24
 703:Src/mc_tasks.c ****   FOCVars[bMotor].Valphabeta = NULL_alphabeta;
  88              		.loc 1 703 3 view .LVU25
 704:Src/mc_tasks.c ****   FOCVars[bMotor].hElAngle = (int16_t)0;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 15


  89              		.loc 1 704 3 view .LVU26
 695:Src/mc_tasks.c ****   }
  90              		.loc 1 695 28 is_stmt 0 view .LVU27
  91 003a 88BF     		it	hi
  92 003c 9950     		strhi	r1, [r3, r2]	@ unaligned
  93 003e 2621     		movs	r1, #38
  94 0040 01FB0433 		mla	r3, r1, r4, r3
 705:Src/mc_tasks.c **** 
 706:Src/mc_tasks.c ****   PID_SetIntegralTerm(pPIDIq[bMotor], ((int32_t)0));
  95              		.loc 1 706 3 view .LVU28
  96 0044 114A     		ldr	r2, .L5+8
 702:Src/mc_tasks.c ****   FOCVars[bMotor].Valphabeta = NULL_alphabeta;
  97              		.loc 1 702 23 view .LVU29
  98 0046 0025     		movs	r5, #0
  99              		.loc 1 706 3 view .LVU30
 100 0048 52F82400 		ldr	r0, [r2, r4, lsl #2]
 702:Src/mc_tasks.c ****   FOCVars[bMotor].Valphabeta = NULL_alphabeta;
 101              		.loc 1 702 23 view .LVU31
 102 004c C3F81650 		str	r5, [r3, #22]	@ unaligned
 103 0050 C3F81A50 		str	r5, [r3, #26]	@ unaligned
 104 0054 C3F81E50 		str	r5, [r3, #30]	@ unaligned
 105              		.loc 1 706 3 is_stmt 1 view .LVU32
 106 0058 2946     		mov	r1, r5
 107 005a FFF7FEFF 		bl	PID_SetIntegralTerm
 108              	.LVL4:
 707:Src/mc_tasks.c ****   PID_SetIntegralTerm(pPIDId[bMotor], ((int32_t)0));
 109              		.loc 1 707 3 view .LVU33
 110 005e 0C4B     		ldr	r3, .L5+12
 111 0060 2946     		mov	r1, r5
 112 0062 53F82400 		ldr	r0, [r3, r4, lsl #2]
 113 0066 FFF7FEFF 		bl	PID_SetIntegralTerm
 114              	.LVL5:
 708:Src/mc_tasks.c **** 
 709:Src/mc_tasks.c ****   STC_Clear(pSTC[bMotor]);
 115              		.loc 1 709 3 view .LVU34
 116 006a 0A4B     		ldr	r3, .L5+16
 117 006c 53F82400 		ldr	r0, [r3, r4, lsl #2]
 118 0070 FFF7FEFF 		bl	STC_Clear
 119              	.LVL6:
 710:Src/mc_tasks.c **** 
 711:Src/mc_tasks.c ****   PWMC_SwitchOffPWM(pwmcHandle[bMotor]);
 120              		.loc 1 711 3 view .LVU35
 121 0074 084B     		ldr	r3, .L5+20
 122 0076 53F82400 		ldr	r0, [r3, r4, lsl #2]
 712:Src/mc_tasks.c **** 
 713:Src/mc_tasks.c ****   /* USER CODE BEGIN FOC_Clear 1 */
 714:Src/mc_tasks.c **** 
 715:Src/mc_tasks.c ****   /* USER CODE END FOC_Clear 1 */
 716:Src/mc_tasks.c **** }
 123              		.loc 1 716 1 is_stmt 0 view .LVU36
 124 007a BDE83840 		pop	{r3, r4, r5, lr}
 125              	.LCFI1:
 126              		.cfi_restore 14
 127              		.cfi_restore 5
 128              		.cfi_restore 4
 129              		.cfi_restore 3
 130              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 16


 711:Src/mc_tasks.c **** 
 131              		.loc 1 711 3 view .LVU37
 132 007e FFF7FEBF 		b	PWMC_SwitchOffPWM
 133              	.LVL7:
 134              	.L6:
 135 0082 00BF     		.align	2
 136              	.L5:
 137 0084 00000000 		.word	Mci
 138 0088 00000000 		.word	.LANCHOR0
 139 008c 00000000 		.word	pPIDIq
 140 0090 00000000 		.word	pPIDId
 141 0094 00000000 		.word	pSTC
 142 0098 00000000 		.word	.LANCHOR1
 143              		.cfi_endproc
 144              	.LFE1100:
 146              		.section	.text.MCboot,"ax",%progbits
 147              		.align	1
 148              		.p2align 2,,3
 149              		.weak	MCboot
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 154              	MCboot:
 155              	.LVL8:
 156              	.LFB1095:
 108:Src/mc_tasks.c ****   /* USER CODE BEGIN MCboot 0 */
 157              		.loc 1 108 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 8
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 113:Src/mc_tasks.c ****   {
 161              		.loc 1 113 3 view .LVU39
 113:Src/mc_tasks.c ****   {
 162              		.loc 1 113 6 is_stmt 0 view .LVU40
 163 0000 0028     		cmp	r0, #0
 164 0002 00F08680 		beq	.L13
 120:Src/mc_tasks.c **** 
 165              		.loc 1 120 5 is_stmt 1 view .LVU41
 108:Src/mc_tasks.c ****   /* USER CODE BEGIN MCboot 0 */
 166              		.loc 1 108 1 is_stmt 0 view .LVU42
 167 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 168              	.LCFI2:
 169              		.cfi_def_cfa_offset 36
 170              		.cfi_offset 4, -36
 171              		.cfi_offset 5, -32
 172              		.cfi_offset 6, -28
 173              		.cfi_offset 7, -24
 174              		.cfi_offset 8, -20
 175              		.cfi_offset 9, -16
 176              		.cfi_offset 10, -12
 177              		.cfi_offset 11, -8
 178              		.cfi_offset 14, -4
 120:Src/mc_tasks.c **** 
 179              		.loc 1 120 22 view .LVU43
 180 000a 424B     		ldr	r3, .L16
 125:Src/mc_tasks.c ****     R3_1_Init(&PWM_Handle_M1);
 181              		.loc 1 125 20 view .LVU44
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 17


 182 000c DFF85C91 		ldr	r9, .L16+88
 151:Src/mc_tasks.c **** 
 183              		.loc 1 151 5 view .LVU45
 184 0010 414E     		ldr	r6, .L16+4
 156:Src/mc_tasks.c **** 
 185              		.loc 1 156 5 view .LVU46
 186 0012 424F     		ldr	r7, .L16+8
 173:Src/mc_tasks.c **** 
 187              		.loc 1 173 5 view .LVU47
 188 0014 424D     		ldr	r5, .L16+12
 179:Src/mc_tasks.c **** 
 189              		.loc 1 179 24 view .LVU48
 190 0016 DFF858A1 		ldr	r10, .L16+92
 108:Src/mc_tasks.c ****   /* USER CODE BEGIN MCboot 0 */
 191              		.loc 1 108 1 view .LVU49
 192 001a 85B0     		sub	sp, sp, #20
 193              	.LCFI3:
 194              		.cfi_def_cfa_offset 56
 120:Src/mc_tasks.c **** 
 195              		.loc 1 120 22 view .LVU50
 196 001c 4FF00008 		mov	r8, #0
 197 0020 0446     		mov	r4, r0
 125:Src/mc_tasks.c ****     R3_1_Init(&PWM_Handle_M1);
 198              		.loc 1 125 20 view .LVU51
 199 0022 4048     		ldr	r0, .L16+16
 200              	.LVL9:
 120:Src/mc_tasks.c **** 
 201              		.loc 1 120 22 view .LVU52
 202 0024 83F80080 		strb	r8, [r3]
 125:Src/mc_tasks.c ****     R3_1_Init(&PWM_Handle_M1);
 203              		.loc 1 125 5 is_stmt 1 view .LVU53
 125:Src/mc_tasks.c ****     R3_1_Init(&PWM_Handle_M1);
 204              		.loc 1 125 20 is_stmt 0 view .LVU54
 205 0028 C9F80000 		str	r0, [r9]
 126:Src/mc_tasks.c ****     ASPEP_start(&aspepOverUartA);
 206              		.loc 1 126 5 is_stmt 1 view .LVU55
 207 002c FFF7FEFF 		bl	R3_1_Init
 208              	.LVL10:
 127:Src/mc_tasks.c **** 
 209              		.loc 1 127 5 view .LVU56
 210 0030 3D48     		ldr	r0, .L16+20
 211 0032 FFF7FEFF 		bl	ASPEP_start
 212              	.LVL11:
 136:Src/mc_tasks.c **** 
 213              		.loc 1 136 5 view .LVU57
 214 0036 FFF7FEFF 		bl	startTimers
 215              	.LVL12:
 141:Src/mc_tasks.c **** 
 216              		.loc 1 141 5 view .LVU58
 217 003a 3C48     		ldr	r0, .L16+24
 218 003c FFF7FEFF 		bl	PID_HandleInit
 219              	.LVL13:
 146:Src/mc_tasks.c **** 
 220              		.loc 1 146 5 view .LVU59
 221 0040 3B48     		ldr	r0, .L16+28
 222 0042 FFF7FEFF 		bl	STO_PLL_Init
 223              	.LVL14:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 18


 151:Src/mc_tasks.c **** 
 224              		.loc 1 151 5 view .LVU60
 225 0046 3A4A     		ldr	r2, .L16+28
 226 0048 3849     		ldr	r1, .L16+24
 227 004a 3068     		ldr	r0, [r6]
 228 004c FFF7FEFF 		bl	STC_Init
 229              	.LVL15:
 156:Src/mc_tasks.c **** 
 230              		.loc 1 156 5 view .LVU61
 231 0050 3846     		mov	r0, r7
 232 0052 FFF7FEFF 		bl	VSS_Init
 233              	.LVL16:
 161:Src/mc_tasks.c **** 
 234              		.loc 1 161 5 view .LVU62
 235 0056 D9F80030 		ldr	r3, [r9]
 236 005a 3168     		ldr	r1, [r6]
 237 005c 0093     		str	r3, [sp]
 238 005e 3A46     		mov	r2, r7
 239 0060 344B     		ldr	r3, .L16+32
 240 0062 3548     		ldr	r0, .L16+36
 241 0064 FFF7FEFF 		bl	RUC_Init
 242              	.LVL17:
 166:Src/mc_tasks.c ****     PID_HandleInit(&PIDIdHandle_M1);
 243              		.loc 1 166 5 view .LVU63
 244 0068 3448     		ldr	r0, .L16+40
 245 006a FFF7FEFF 		bl	PID_HandleInit
 246              	.LVL18:
 167:Src/mc_tasks.c **** 
 247              		.loc 1 167 5 view .LVU64
 248 006e 3448     		ldr	r0, .L16+44
 249 0070 FFF7FEFF 		bl	PID_HandleInit
 250              	.LVL19:
 172:Src/mc_tasks.c ****     RVBS_Init(&BusVoltageSensor_M1);
 251              		.loc 1 172 5 view .LVU65
 252 0074 3348     		ldr	r0, .L16+48
 253 0076 FFF7FEFF 		bl	RCM_RegisterRegConv
 254              	.LVL20:
 173:Src/mc_tasks.c **** 
 255              		.loc 1 173 5 view .LVU66
 256 007a 2846     		mov	r0, r5
 257 007c FFF7FEFF 		bl	RVBS_Init
 258              	.LVL21:
 178:Src/mc_tasks.c ****     pMPM[M1]->pFOCVars = &FOCVars[M1];
 259              		.loc 1 178 5 view .LVU67
 178:Src/mc_tasks.c ****     pMPM[M1]->pFOCVars = &FOCVars[M1];
 260              		.loc 1 178 9 is_stmt 0 view .LVU68
 261 0080 314B     		ldr	r3, .L16+52
 184:Src/mc_tasks.c ****     NTC_Init(&TempSensor_M1);
 262              		.loc 1 184 5 view .LVU69
 263 0082 3248     		ldr	r0, .L16+56
 178:Src/mc_tasks.c ****     pMPM[M1]->pFOCVars = &FOCVars[M1];
 264              		.loc 1 178 9 view .LVU70
 265 0084 1B68     		ldr	r3, [r3]
 178:Src/mc_tasks.c ****     pMPM[M1]->pFOCVars = &FOCVars[M1];
 266              		.loc 1 178 20 view .LVU71
 267 0086 DD60     		str	r5, [r3, #12]
 179:Src/mc_tasks.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 19


 268              		.loc 1 179 5 is_stmt 1 view .LVU72
 179:Src/mc_tasks.c **** 
 269              		.loc 1 179 24 is_stmt 0 view .LVU73
 270 0088 C3F808A0 		str	r10, [r3, #8]
 184:Src/mc_tasks.c ****     NTC_Init(&TempSensor_M1);
 271              		.loc 1 184 5 is_stmt 1 view .LVU74
 187:Src/mc_tasks.c ****     pOpenLoop[M1] = &OpenLoop_ParamsM1;
 272              		.loc 1 187 5 is_stmt 0 view .LVU75
 273 008c 304D     		ldr	r5, .L16+60
 184:Src/mc_tasks.c ****     NTC_Init(&TempSensor_M1);
 274              		.loc 1 184 5 view .LVU76
 275 008e FFF7FEFF 		bl	RCM_RegisterRegConv
 276              	.LVL22:
 185:Src/mc_tasks.c **** 
 277              		.loc 1 185 5 is_stmt 1 view .LVU77
 278 0092 3048     		ldr	r0, .L16+64
 279 0094 FFF7FEFF 		bl	NTC_Init
 280              	.LVL23:
 187:Src/mc_tasks.c ****     pOpenLoop[M1] = &OpenLoop_ParamsM1;
 281              		.loc 1 187 5 view .LVU78
 282 0098 3946     		mov	r1, r7
 283 009a 2846     		mov	r0, r5
 284 009c FFF7FEFF 		bl	OL_Init
 285              	.LVL24:
 188:Src/mc_tasks.c **** 
 286              		.loc 1 188 5 view .LVU79
 188:Src/mc_tasks.c **** 
 287              		.loc 1 188 19 is_stmt 0 view .LVU80
 288 00a0 2D4B     		ldr	r3, .L16+68
 190:Src/mc_tasks.c ****     REMNG_Init(pREMNG[M1]);
 289              		.loc 1 190 16 view .LVU81
 290 00a2 2E48     		ldr	r0, .L16+72
 188:Src/mc_tasks.c **** 
 291              		.loc 1 188 19 view .LVU82
 292 00a4 1D60     		str	r5, [r3]
 190:Src/mc_tasks.c ****     REMNG_Init(pREMNG[M1]);
 293              		.loc 1 190 5 is_stmt 1 view .LVU83
 190:Src/mc_tasks.c ****     REMNG_Init(pREMNG[M1]);
 294              		.loc 1 190 16 is_stmt 0 view .LVU84
 295 00a6 2E4B     		ldr	r3, .L16+76
 197:Src/mc_tasks.c ****     Mci[M1].pVSS =  &VirtualSpeedSensorM1;
 296              		.loc 1 197 5 view .LVU85
 297 00a8 2E4D     		ldr	r5, .L16+80
 190:Src/mc_tasks.c ****     REMNG_Init(pREMNG[M1]);
 298              		.loc 1 190 16 view .LVU86
 299 00aa 1860     		str	r0, [r3]
 191:Src/mc_tasks.c **** 
 300              		.loc 1 191 5 is_stmt 1 view .LVU87
 301 00ac FFF7FEFF 		bl	REMNG_Init
 302              	.LVL25:
 193:Src/mc_tasks.c ****     FOCVars[M1].bDriveInput = EXTERNAL;
 303              		.loc 1 193 5 view .LVU88
 304 00b0 4046     		mov	r0, r8
 305 00b2 FFF7FEFF 		bl	FOC_Clear
 306              	.LVL26:
 194:Src/mc_tasks.c ****     FOCVars[M1].Iqdref = STC_GetDefaultIqdref(pSTC[M1]);
 307              		.loc 1 194 5 view .LVU89
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 20


 194:Src/mc_tasks.c ****     FOCVars[M1].Iqdref = STC_GetDefaultIqdref(pSTC[M1]);
 308              		.loc 1 194 29 is_stmt 0 view .LVU90
 309 00b6 4FF0010B 		mov	fp, #1
 195:Src/mc_tasks.c ****     FOCVars[M1].UserIdref = STC_GetDefaultIqdref(pSTC[M1]).d;
 310              		.loc 1 195 26 view .LVU91
 311 00ba 3068     		ldr	r0, [r6]
 194:Src/mc_tasks.c ****     FOCVars[M1].Iqdref = STC_GetDefaultIqdref(pSTC[M1]);
 312              		.loc 1 194 29 view .LVU92
 313 00bc 8AF824B0 		strb	fp, [r10, #36]
 195:Src/mc_tasks.c ****     FOCVars[M1].UserIdref = STC_GetDefaultIqdref(pSTC[M1]).d;
 314              		.loc 1 195 5 is_stmt 1 view .LVU93
 195:Src/mc_tasks.c ****     FOCVars[M1].UserIdref = STC_GetDefaultIqdref(pSTC[M1]).d;
 315              		.loc 1 195 26 is_stmt 0 view .LVU94
 316 00c0 FFF7FEFF 		bl	STC_GetDefaultIqdref
 317              	.LVL27:
 318 00c4 CAF81000 		str	r0, [r10, #16]
 196:Src/mc_tasks.c ****     MCI_Init(&Mci[M1], pSTC[M1], &FOCVars[M1],pwmcHandle[M1] );
 319              		.loc 1 196 5 is_stmt 1 view .LVU95
 196:Src/mc_tasks.c ****     MCI_Init(&Mci[M1], pSTC[M1], &FOCVars[M1],pwmcHandle[M1] );
 320              		.loc 1 196 29 is_stmt 0 view .LVU96
 321 00c8 3068     		ldr	r0, [r6]
 322 00ca FFF7FEFF 		bl	STC_GetDefaultIqdref
 323              	.LVL28:
 324 00ce C0F30F40 		ubfx	r0, r0, #16, #16
 197:Src/mc_tasks.c ****     Mci[M1].pVSS =  &VirtualSpeedSensorM1;
 325              		.loc 1 197 5 view .LVU97
 326 00d2 3168     		ldr	r1, [r6]
 327 00d4 D9F80030 		ldr	r3, [r9]
 196:Src/mc_tasks.c ****     MCI_Init(&Mci[M1], pSTC[M1], &FOCVars[M1],pwmcHandle[M1] );
 328              		.loc 1 196 27 view .LVU98
 329 00d8 AAF81400 		strh	r0, [r10, #20]	@ movhi
 197:Src/mc_tasks.c ****     Mci[M1].pVSS =  &VirtualSpeedSensorM1;
 330              		.loc 1 197 5 is_stmt 1 view .LVU99
 331 00dc 5246     		mov	r2, r10
 332 00de 2846     		mov	r0, r5
 333 00e0 FFF7FEFF 		bl	MCI_Init
 334              	.LVL29:
 198:Src/mc_tasks.c ****     MCI_SetSpeedMode(&Mci[M1]);
 335              		.loc 1 198 5 view .LVU100
 199:Src/mc_tasks.c ****    Mci[M1].pScale = &scaleParams_M1;
 336              		.loc 1 199 5 is_stmt 0 view .LVU101
 337 00e4 2846     		mov	r0, r5
 198:Src/mc_tasks.c ****     MCI_SetSpeedMode(&Mci[M1]);
 338              		.loc 1 198 18 view .LVU102
 339 00e6 EF60     		str	r7, [r5, #12]
 199:Src/mc_tasks.c ****    Mci[M1].pScale = &scaleParams_M1;
 340              		.loc 1 199 5 is_stmt 1 view .LVU103
 341 00e8 FFF7FEFF 		bl	MCI_SetSpeedMode
 342              	.LVL30:
 200:Src/mc_tasks.c **** 
 343              		.loc 1 200 4 view .LVU104
 200:Src/mc_tasks.c **** 
 344              		.loc 1 200 19 is_stmt 0 view .LVU105
 345 00ec 1E4B     		ldr	r3, .L16+84
 346 00ee EB61     		str	r3, [r5, #28]
 202:Src/mc_tasks.c ****     STC_GetMecSpeedRefUnitDefault(pSTC[M1]),0); /* First command to STC */
 347              		.loc 1 202 5 is_stmt 1 view .LVU106
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 21


 348 00f0 3068     		ldr	r0, [r6]
 349 00f2 FFF7FEFF 		bl	STC_GetMecSpeedRefUnitDefault
 350              	.LVL31:
 351 00f6 4246     		mov	r2, r8
 352 00f8 0146     		mov	r1, r0
 353 00fa 2846     		mov	r0, r5
 354 00fc FFF7FEFF 		bl	MCI_ExecSpeedRamp
 355              	.LVL32:
 204:Src/mc_tasks.c **** 
 356              		.loc 1 204 5 view .LVU107
 204:Src/mc_tasks.c **** 
 357              		.loc 1 204 18 is_stmt 0 view .LVU108
 358 0100 2560     		str	r5, [r4]
 207:Src/mc_tasks.c **** 
 359              		.loc 1 207 5 is_stmt 1 view .LVU109
 360 0102 FFF7FEFF 		bl	MC_APP_BootHook
 361              	.LVL33:
 213:Src/mc_tasks.c ****   }
 362              		.loc 1 213 5 view .LVU110
 213:Src/mc_tasks.c ****   }
 363              		.loc 1 213 22 is_stmt 0 view .LVU111
 364 0106 034B     		ldr	r3, .L16
 365 0108 83F800B0 		strb	fp, [r3]
 215:Src/mc_tasks.c **** 
 366              		.loc 1 215 1 view .LVU112
 367 010c 05B0     		add	sp, sp, #20
 368              	.LCFI4:
 369              		.cfi_def_cfa_offset 36
 370              		@ sp needed
 371 010e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 372              	.LVL34:
 373              	.L13:
 374              	.LCFI5:
 375              		.cfi_def_cfa_offset 0
 376              		.cfi_restore 4
 377              		.cfi_restore 5
 378              		.cfi_restore 6
 379              		.cfi_restore 7
 380              		.cfi_restore 8
 381              		.cfi_restore 9
 382              		.cfi_restore 10
 383              		.cfi_restore 11
 384              		.cfi_restore 14
 215:Src/mc_tasks.c **** 
 385              		.loc 1 215 1 view .LVU113
 386 0112 7047     		bx	lr
 387              	.L17:
 388              		.align	2
 389              	.L16:
 390 0114 00000000 		.word	.LANCHOR2
 391 0118 00000000 		.word	pSTC
 392 011c 00000000 		.word	VirtualSpeedSensorM1
 393 0120 00000000 		.word	BusVoltageSensor_M1
 394 0124 00000000 		.word	PWM_Handle_M1
 395 0128 00000000 		.word	aspepOverUartA
 396 012c 00000000 		.word	PIDSpeedHandle_M1
 397 0130 00000000 		.word	STO_PLL_M1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 22


 398 0134 00000000 		.word	STO_M1
 399 0138 00000000 		.word	RevUpControlM1
 400 013c 00000000 		.word	PIDIqHandle_M1
 401 0140 00000000 		.word	PIDIdHandle_M1
 402 0144 00000000 		.word	VbusRegConv_M1
 403 0148 00000000 		.word	pMPM
 404 014c 00000000 		.word	TempRegConv_M1
 405 0150 00000000 		.word	OpenLoop_ParamsM1
 406 0154 00000000 		.word	TempSensor_M1
 407 0158 00000000 		.word	.LANCHOR3
 408 015c 00000000 		.word	RampExtMngrHFParamsM1
 409 0160 00000000 		.word	.LANCHOR4
 410 0164 00000000 		.word	Mci
 411 0168 00000000 		.word	scaleParams_M1
 412 016c 00000000 		.word	.LANCHOR1
 413 0170 00000000 		.word	.LANCHOR0
 414              		.cfi_endproc
 415              	.LFE1095:
 417              		.section	.text.FOC_InitAdditionalMethods,"ax",%progbits
 418              		.align	1
 419              		.p2align 2,,3
 420              		.weak	FOC_InitAdditionalMethods
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	FOC_InitAdditionalMethods:
 426              	.LVL35:
 427              	.LFB1101:
 717:Src/mc_tasks.c **** 
 718:Src/mc_tasks.c **** /**
 719:Src/mc_tasks.c ****   * @brief  Use this method to initialize additional methods (if any) in
 720:Src/mc_tasks.c ****   *         START_TO_RUN state.
 721:Src/mc_tasks.c ****   * @param  bMotor related motor it can be M1 or M2.
 722:Src/mc_tasks.c ****   */
 723:Src/mc_tasks.c **** __weak void FOC_InitAdditionalMethods(uint8_t bMotor) //cstat !RED-func-no-effect
 724:Src/mc_tasks.c **** {
 428              		.loc 1 724 1 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 725:Src/mc_tasks.c ****     if (M_NONE == bMotor)
 433              		.loc 1 725 5 view .LVU115
 726:Src/mc_tasks.c ****     {
 727:Src/mc_tasks.c ****       /* Nothing to do */
 728:Src/mc_tasks.c ****     }
 729:Src/mc_tasks.c ****     else
 730:Src/mc_tasks.c ****     {
 731:Src/mc_tasks.c ****   /* USER CODE BEGIN FOC_InitAdditionalMethods 0 */
 732:Src/mc_tasks.c **** 
 733:Src/mc_tasks.c ****   /* USER CODE END FOC_InitAdditionalMethods 0 */
 734:Src/mc_tasks.c ****     }
 434              		.loc 1 734 5 view .LVU116
 735:Src/mc_tasks.c **** }
 435              		.loc 1 735 1 is_stmt 0 view .LVU117
 436 0000 7047     		bx	lr
 437              		.cfi_endproc
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 23


 438              	.LFE1101:
 440              		.section	.text.FOC_CalcCurrRef,"ax",%progbits
 441              		.align	1
 442              		.p2align 2,,3
 443              		.weak	FOC_CalcCurrRef
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 448              	FOC_CalcCurrRef:
 449              	.LVL36:
 450              	.LFB1102:
 736:Src/mc_tasks.c **** 
 737:Src/mc_tasks.c **** /**
 738:Src/mc_tasks.c ****   * @brief  It computes the new values of Iqdref (current references on qd
 739:Src/mc_tasks.c ****   *         reference frame) based on the required electrical torque information
 740:Src/mc_tasks.c ****   *         provided by oTSC object (internally clocked).
 741:Src/mc_tasks.c ****   *         If implemented in the derived class it executes flux weakening and/or
 742:Src/mc_tasks.c ****   *         MTPA algorithm(s). It must be called with the periodicity specified
 743:Src/mc_tasks.c ****   *         in oTSC parameters.
 744:Src/mc_tasks.c ****   * @param  bMotor related motor it can be M1 or M2.
 745:Src/mc_tasks.c ****   */
 746:Src/mc_tasks.c **** __weak void FOC_CalcCurrRef(uint8_t bMotor)
 747:Src/mc_tasks.c **** {
 451              		.loc 1 747 1 is_stmt 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 748:Src/mc_tasks.c **** 
 749:Src/mc_tasks.c ****   /* USER CODE BEGIN FOC_CalcCurrRef 0 */
 750:Src/mc_tasks.c **** 
 751:Src/mc_tasks.c ****   /* USER CODE END FOC_CalcCurrRef 0 */
 752:Src/mc_tasks.c ****   MC_ControlMode_t mode;
 455              		.loc 1 752 3 view .LVU119
 753:Src/mc_tasks.c **** 
 754:Src/mc_tasks.c ****   mode = MCI_GetControlMode( &Mci[bMotor] );
 456              		.loc 1 754 3 view .LVU120
 747:Src/mc_tasks.c **** 
 457              		.loc 1 747 1 is_stmt 0 view .LVU121
 458 0000 38B5     		push	{r3, r4, r5, lr}
 459              	.LCFI6:
 460              		.cfi_def_cfa_offset 16
 461              		.cfi_offset 3, -16
 462              		.cfi_offset 4, -12
 463              		.cfi_offset 5, -8
 464              		.cfi_offset 14, -4
 747:Src/mc_tasks.c **** 
 465              		.loc 1 747 1 view .LVU122
 466 0002 0446     		mov	r4, r0
 467              		.loc 1 754 10 view .LVU123
 468 0004 04EB8403 		add	r3, r4, r4, lsl #2
 469 0008 0D48     		ldr	r0, .L23
 470              	.LVL37:
 755:Src/mc_tasks.c ****   if (INTERNAL == FOCVars[bMotor].bDriveInput
 471              		.loc 1 755 34 view .LVU124
 472 000a 0E4D     		ldr	r5, .L23+4
 754:Src/mc_tasks.c ****   if (INTERNAL == FOCVars[bMotor].bDriveInput
 473              		.loc 1 754 10 view .LVU125
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 24


 474 000c 04EB4303 		add	r3, r4, r3, lsl #1
 475 0010 00EB8300 		add	r0, r0, r3, lsl #2
 476 0014 FFF7FEFF 		bl	MCI_GetControlMode
 477              	.LVL38:
 478              		.loc 1 755 34 view .LVU126
 479 0018 2623     		movs	r3, #38
 480 001a 03FB0455 		mla	r5, r3, r4, r5
 481              	.LVL39:
 482              		.loc 1 755 3 is_stmt 1 view .LVU127
 483              		.loc 1 755 6 is_stmt 0 view .LVU128
 484 001e 95F82430 		ldrb	r3, [r5, #36]	@ zero_extendqisi2
 485 0022 1BB9     		cbnz	r3, .L19
 756:Src/mc_tasks.c ****                && (mode != MCM_OPEN_LOOP_VOLTAGE_MODE && mode != MCM_OPEN_LOOP_CURRENT_MODE))
 486              		.loc 1 756 55 view .LVU129
 487 0024 0138     		subs	r0, r0, #1
 488              	.LVL40:
 489              		.loc 1 756 16 view .LVU130
 490 0026 C0B2     		uxtb	r0, r0
 491 0028 0128     		cmp	r0, #1
 492 002a 00D8     		bhi	.L22
 493              	.L19:
 757:Src/mc_tasks.c ****   {
 758:Src/mc_tasks.c ****     FOCVars[bMotor].hTeref = STC_CalcTorqueReference(pSTC[bMotor]);
 759:Src/mc_tasks.c ****     FOCVars[bMotor].Iqdref.q = FOCVars[bMotor].hTeref;
 760:Src/mc_tasks.c **** 
 761:Src/mc_tasks.c ****   }
 762:Src/mc_tasks.c ****   else
 763:Src/mc_tasks.c ****   {
 764:Src/mc_tasks.c ****     /* Nothing to do */
 765:Src/mc_tasks.c ****   }
 766:Src/mc_tasks.c ****   /* USER CODE BEGIN FOC_CalcCurrRef 1 */
 767:Src/mc_tasks.c **** 
 768:Src/mc_tasks.c ****   /* USER CODE END FOC_CalcCurrRef 1 */
 769:Src/mc_tasks.c **** }
 494              		.loc 1 769 1 view .LVU131
 495 002c 38BD     		pop	{r3, r4, r5, pc}
 496              	.L22:
 758:Src/mc_tasks.c ****     FOCVars[bMotor].Iqdref.q = FOCVars[bMotor].hTeref;
 497              		.loc 1 758 5 is_stmt 1 view .LVU132
 758:Src/mc_tasks.c ****     FOCVars[bMotor].Iqdref.q = FOCVars[bMotor].hTeref;
 498              		.loc 1 758 30 is_stmt 0 view .LVU133
 499 002e 064B     		ldr	r3, .L23+8
 500 0030 53F82400 		ldr	r0, [r3, r4, lsl #2]
 501 0034 FFF7FEFF 		bl	STC_CalcTorqueReference
 502              	.LVL41:
 758:Src/mc_tasks.c ****     FOCVars[bMotor].Iqdref.q = FOCVars[bMotor].hTeref;
 503              		.loc 1 758 28 view .LVU134
 504 0038 E883     		strh	r0, [r5, #30]	@ movhi
 759:Src/mc_tasks.c **** 
 505              		.loc 1 759 5 is_stmt 1 view .LVU135
 759:Src/mc_tasks.c **** 
 506              		.loc 1 759 30 is_stmt 0 view .LVU136
 507 003a 2882     		strh	r0, [r5, #16]	@ movhi
 765:Src/mc_tasks.c ****   /* USER CODE BEGIN FOC_CalcCurrRef 1 */
 508              		.loc 1 765 3 is_stmt 1 view .LVU137
 509              		.loc 1 769 1 is_stmt 0 view .LVU138
 510 003c 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 25


 511              	.L24:
 512 003e 00BF     		.align	2
 513              	.L23:
 514 0040 00000000 		.word	Mci
 515 0044 00000000 		.word	.LANCHOR0
 516 0048 00000000 		.word	pSTC
 517              		.cfi_endproc
 518              	.LFE1102:
 520              		.section	.text.TSK_SetChargeBootCapDelayM1,"ax",%progbits
 521              		.align	1
 522              		.p2align 2,,3
 523              		.weak	TSK_SetChargeBootCapDelayM1
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 528              	TSK_SetChargeBootCapDelayM1:
 529              	.LVL42:
 530              	.LFB1103:
 770:Src/mc_tasks.c **** 
 771:Src/mc_tasks.c **** /**
 772:Src/mc_tasks.c ****   * @brief  It set a counter intended to be used for counting the delay required
 773:Src/mc_tasks.c ****   *         for drivers boot capacitors charging of motor 1.
 774:Src/mc_tasks.c ****   * @param  hTickCount number of ticks to be counted.
 775:Src/mc_tasks.c ****   * @retval void
 776:Src/mc_tasks.c ****   */
 777:Src/mc_tasks.c **** __weak void TSK_SetChargeBootCapDelayM1(uint16_t hTickCount)
 778:Src/mc_tasks.c **** {
 531              		.loc 1 778 1 is_stmt 1 view -0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 779:Src/mc_tasks.c ****    hBootCapDelayCounterM1 = hTickCount;
 536              		.loc 1 779 4 view .LVU140
 537              		.loc 1 779 27 is_stmt 0 view .LVU141
 538 0000 014B     		ldr	r3, .L26
 539 0002 1880     		strh	r0, [r3]	@ movhi
 780:Src/mc_tasks.c **** }
 540              		.loc 1 780 1 view .LVU142
 541 0004 7047     		bx	lr
 542              	.L27:
 543 0006 00BF     		.align	2
 544              	.L26:
 545 0008 00000000 		.word	.LANCHOR5
 546              		.cfi_endproc
 547              	.LFE1103:
 549              		.section	.text.TSK_ChargeBootCapDelayHasElapsedM1,"ax",%progbits
 550              		.align	1
 551              		.p2align 2,,3
 552              		.weak	TSK_ChargeBootCapDelayHasElapsedM1
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 557              	TSK_ChargeBootCapDelayHasElapsedM1:
 558              	.LFB1104:
 781:Src/mc_tasks.c **** 
 782:Src/mc_tasks.c **** /**
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 26


 783:Src/mc_tasks.c ****   * @brief  Use this function to know whether the time required to charge boot
 784:Src/mc_tasks.c ****   *         capacitors of motor 1 has elapsed.
 785:Src/mc_tasks.c ****   * @param  none
 786:Src/mc_tasks.c ****   * @retval bool true if time has elapsed, false otherwise.
 787:Src/mc_tasks.c ****   */
 788:Src/mc_tasks.c **** __weak bool TSK_ChargeBootCapDelayHasElapsedM1(void)
 789:Src/mc_tasks.c **** {
 559              		.loc 1 789 1 is_stmt 1 view -0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 790:Src/mc_tasks.c ****   bool retVal = false;
 564              		.loc 1 790 3 view .LVU144
 565              	.LVL43:
 791:Src/mc_tasks.c ****   if (((uint16_t)0) == hBootCapDelayCounterM1)
 566              		.loc 1 791 3 view .LVU145
 567              		.loc 1 791 21 is_stmt 0 view .LVU146
 568 0000 034B     		ldr	r3, .L29
 569 0002 1888     		ldrh	r0, [r3]
 570 0004 80B2     		uxth	r0, r0
 571              	.LVL44:
 792:Src/mc_tasks.c ****   {
 793:Src/mc_tasks.c ****     retVal = true;
 794:Src/mc_tasks.c ****   }
 795:Src/mc_tasks.c ****   return (retVal);
 572              		.loc 1 795 3 is_stmt 1 view .LVU147
 796:Src/mc_tasks.c **** }
 573              		.loc 1 796 1 is_stmt 0 view .LVU148
 574 0006 B0FA80F0 		clz	r0, r0
 575              	.LVL45:
 576              		.loc 1 796 1 view .LVU149
 577 000a 4009     		lsrs	r0, r0, #5
 578 000c 7047     		bx	lr
 579              	.L30:
 580 000e 00BF     		.align	2
 581              	.L29:
 582 0010 00000000 		.word	.LANCHOR5
 583              		.cfi_endproc
 584              	.LFE1104:
 586              		.section	.text.TSK_SetStopPermanencyTimeM1,"ax",%progbits
 587              		.align	1
 588              		.p2align 2,,3
 589              		.weak	TSK_SetStopPermanencyTimeM1
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 594              	TSK_SetStopPermanencyTimeM1:
 595              	.LVL46:
 596              	.LFB1105:
 797:Src/mc_tasks.c **** 
 798:Src/mc_tasks.c **** /**
 799:Src/mc_tasks.c ****   * @brief  It set a counter intended to be used for counting the permanency
 800:Src/mc_tasks.c ****   *         time in STOP state of motor 1.
 801:Src/mc_tasks.c ****   * @param  hTickCount number of ticks to be counted.
 802:Src/mc_tasks.c ****   * @retval void
 803:Src/mc_tasks.c ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 27


 804:Src/mc_tasks.c **** __weak void TSK_SetStopPermanencyTimeM1(uint16_t hTickCount)
 805:Src/mc_tasks.c **** {
 597              		.loc 1 805 1 is_stmt 1 view -0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              		@ link register save eliminated.
 806:Src/mc_tasks.c ****   hStopPermanencyCounterM1 = hTickCount;
 602              		.loc 1 806 3 view .LVU151
 603              		.loc 1 806 28 is_stmt 0 view .LVU152
 604 0000 014B     		ldr	r3, .L32
 605 0002 1880     		strh	r0, [r3]	@ movhi
 807:Src/mc_tasks.c **** }
 606              		.loc 1 807 1 view .LVU153
 607 0004 7047     		bx	lr
 608              	.L33:
 609 0006 00BF     		.align	2
 610              	.L32:
 611 0008 00000000 		.word	.LANCHOR6
 612              		.cfi_endproc
 613              	.LFE1105:
 615              		.section	.text.TSK_MF_StopProcessing,"ax",%progbits
 616              		.align	1
 617              		.p2align 2,,3
 618              		.global	TSK_MF_StopProcessing
 619              		.syntax unified
 620              		.thumb
 621              		.thumb_func
 623              	TSK_MF_StopProcessing:
 624              	.LVL47:
 625              	.LFB1097:
 249:Src/mc_tasks.c ****     R3_1_SwitchOffPWM(pwmcHandle[motor]);
 626              		.loc 1 249 1 is_stmt 1 view -0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 250:Src/mc_tasks.c **** 
 630              		.loc 1 250 5 view .LVU155
 631 0000 0D4B     		ldr	r3, .L36
 249:Src/mc_tasks.c ****     R3_1_SwitchOffPWM(pwmcHandle[motor]);
 632              		.loc 1 249 1 is_stmt 0 view .LVU156
 633 0002 10B5     		push	{r4, lr}
 634              	.LCFI7:
 635              		.cfi_def_cfa_offset 8
 636              		.cfi_offset 4, -8
 637              		.cfi_offset 14, -4
 249:Src/mc_tasks.c ****     R3_1_SwitchOffPWM(pwmcHandle[motor]);
 638              		.loc 1 249 1 view .LVU157
 639 0004 0446     		mov	r4, r0
 250:Src/mc_tasks.c **** 
 640              		.loc 1 250 5 view .LVU158
 641 0006 53F82000 		ldr	r0, [r3, r0, lsl #2]
 642              	.LVL48:
 250:Src/mc_tasks.c **** 
 643              		.loc 1 250 5 view .LVU159
 644 000a FFF7FEFF 		bl	R3_1_SwitchOffPWM
 645              	.LVL49:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 28


 252:Src/mc_tasks.c ****   PQD_Clear(pMPM[motor]);
 646              		.loc 1 252 3 is_stmt 1 view .LVU160
 647 000e 2046     		mov	r0, r4
 648 0010 FFF7FEFF 		bl	FOC_Clear
 649              	.LVL50:
 253:Src/mc_tasks.c ****   TSK_SetStopPermanencyTimeM1(STOPPERMANENCY_TICKS);
 650              		.loc 1 253 3 view .LVU161
 651 0014 094B     		ldr	r3, .L36+4
 652 0016 53F82400 		ldr	r0, [r3, r4, lsl #2]
 653 001a FFF7FEFF 		bl	PQD_Clear
 654              	.LVL51:
 254:Src/mc_tasks.c ****   Mci[motor].State = STOP;
 655              		.loc 1 254 3 view .LVU162
 656 001e 4FF44870 		mov	r0, #800
 657 0022 FFF7FEFF 		bl	TSK_SetStopPermanencyTimeM1
 658              	.LVL52:
 255:Src/mc_tasks.c **** }
 659              		.loc 1 255 3 view .LVU163
 255:Src/mc_tasks.c **** }
 660              		.loc 1 255 20 is_stmt 0 view .LVU164
 661 0026 0648     		ldr	r0, .L36+8
 662 0028 2C23     		movs	r3, #44
 663 002a 03FB0404 		mla	r4, r3, r4, r0
 664 002e 0823     		movs	r3, #8
 665 0030 84F82330 		strb	r3, [r4, #35]
 256:Src/mc_tasks.c **** 
 666              		.loc 1 256 1 view .LVU165
 667 0034 10BD     		pop	{r4, pc}
 668              	.L37:
 669 0036 00BF     		.align	2
 670              	.L36:
 671 0038 00000000 		.word	.LANCHOR1
 672 003c 00000000 		.word	pMPM
 673 0040 00000000 		.word	Mci
 674              		.cfi_endproc
 675              	.LFE1097:
 677              		.section	.text.TSK_StopPermanencyTimeHasElapsedM1,"ax",%progbits
 678              		.align	1
 679              		.p2align 2,,3
 680              		.weak	TSK_StopPermanencyTimeHasElapsedM1
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 685              	TSK_StopPermanencyTimeHasElapsedM1:
 686              	.LFB1106:
 808:Src/mc_tasks.c **** 
 809:Src/mc_tasks.c **** /**
 810:Src/mc_tasks.c ****   * @brief  Use this function to know whether the permanency time in STOP state
 811:Src/mc_tasks.c ****   *         of motor 1 has elapsed.
 812:Src/mc_tasks.c ****   * @param  none
 813:Src/mc_tasks.c ****   * @retval bool true if time is elapsed, false otherwise.
 814:Src/mc_tasks.c ****   */
 815:Src/mc_tasks.c **** __weak bool TSK_StopPermanencyTimeHasElapsedM1(void)
 816:Src/mc_tasks.c **** {
 687              		.loc 1 816 1 is_stmt 1 view -0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 29


 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 817:Src/mc_tasks.c ****   bool retVal = false;
 692              		.loc 1 817 3 view .LVU167
 693              	.LVL53:
 818:Src/mc_tasks.c ****   if (((uint16_t)0) == hStopPermanencyCounterM1)
 694              		.loc 1 818 3 view .LVU168
 695              		.loc 1 818 21 is_stmt 0 view .LVU169
 696 0000 034B     		ldr	r3, .L39
 697 0002 1888     		ldrh	r0, [r3]
 698 0004 80B2     		uxth	r0, r0
 699              	.LVL54:
 819:Src/mc_tasks.c ****   {
 820:Src/mc_tasks.c ****     retVal = true;
 821:Src/mc_tasks.c ****   }
 822:Src/mc_tasks.c ****   return (retVal);
 700              		.loc 1 822 3 is_stmt 1 view .LVU170
 823:Src/mc_tasks.c **** }
 701              		.loc 1 823 1 is_stmt 0 view .LVU171
 702 0006 B0FA80F0 		clz	r0, r0
 703              	.LVL55:
 704              		.loc 1 823 1 view .LVU172
 705 000a 4009     		lsrs	r0, r0, #5
 706 000c 7047     		bx	lr
 707              	.L40:
 708 000e 00BF     		.align	2
 709              	.L39:
 710 0010 00000000 		.word	.LANCHOR6
 711              		.cfi_endproc
 712              	.LFE1106:
 714              		.section	.text.TSK_MediumFrequencyTaskM1,"ax",%progbits
 715              		.align	1
 716              		.p2align 2,,3
 717              		.weak	TSK_MediumFrequencyTaskM1
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 722              	TSK_MediumFrequencyTaskM1:
 723              	.LFB1099:
 346:Src/mc_tasks.c ****   /* USER CODE BEGIN MediumFrequencyTask M1 0 */
 724              		.loc 1 346 1 is_stmt 1 view -0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 8
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 351:Src/mc_tasks.c ****   MC_ControlMode_t mode;
 728              		.loc 1 351 3 view .LVU174
 346:Src/mc_tasks.c ****   /* USER CODE BEGIN MediumFrequencyTask M1 0 */
 729              		.loc 1 346 1 is_stmt 0 view .LVU175
 730 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 731              	.LCFI8:
 732              		.cfi_def_cfa_offset 20
 733              		.cfi_offset 4, -20
 734              		.cfi_offset 5, -16
 735              		.cfi_offset 6, -12
 736              		.cfi_offset 7, -8
 737              		.cfi_offset 14, -4
 354:Src/mc_tasks.c ****   bool IsSpeedReliable = STO_PLL_CalcAvrgMecSpeedUnit(&STO_PLL_M1, &wAux);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 30


 738              		.loc 1 354 10 view .LVU176
 739 0002 C04C     		ldr	r4, .L101
 356:Src/mc_tasks.c **** 
 740              		.loc 1 356 3 view .LVU177
 741 0004 C04F     		ldr	r7, .L101+4
 346:Src/mc_tasks.c ****   /* USER CODE BEGIN MediumFrequencyTask M1 0 */
 742              		.loc 1 346 1 view .LVU178
 743 0006 83B0     		sub	sp, sp, #12
 744              	.LCFI9:
 745              		.cfi_def_cfa_offset 32
 351:Src/mc_tasks.c ****   MC_ControlMode_t mode;
 746              		.loc 1 351 11 view .LVU179
 747 0008 0023     		movs	r3, #0
 354:Src/mc_tasks.c ****   bool IsSpeedReliable = STO_PLL_CalcAvrgMecSpeedUnit(&STO_PLL_M1, &wAux);
 748              		.loc 1 354 10 view .LVU180
 749 000a 2046     		mov	r0, r4
 351:Src/mc_tasks.c ****   MC_ControlMode_t mode;
 750              		.loc 1 351 11 view .LVU181
 751 000c ADF80030 		strh	r3, [sp]	@ movhi
 352:Src/mc_tasks.c **** 
 752              		.loc 1 352 3 is_stmt 1 view .LVU182
 354:Src/mc_tasks.c ****   bool IsSpeedReliable = STO_PLL_CalcAvrgMecSpeedUnit(&STO_PLL_M1, &wAux);
 753              		.loc 1 354 3 view .LVU183
 354:Src/mc_tasks.c ****   bool IsSpeedReliable = STO_PLL_CalcAvrgMecSpeedUnit(&STO_PLL_M1, &wAux);
 754              		.loc 1 354 10 is_stmt 0 view .LVU184
 755 0010 FFF7FEFF 		bl	MCI_GetControlMode
 756              	.LVL56:
 355:Src/mc_tasks.c ****   PQD_CalcElMotorPower(pMPM[M1]);
 757              		.loc 1 355 26 view .LVU185
 758 0014 6946     		mov	r1, sp
 354:Src/mc_tasks.c ****   bool IsSpeedReliable = STO_PLL_CalcAvrgMecSpeedUnit(&STO_PLL_M1, &wAux);
 759              		.loc 1 354 10 view .LVU186
 760 0016 0546     		mov	r5, r0
 355:Src/mc_tasks.c ****   PQD_CalcElMotorPower(pMPM[M1]);
 761              		.loc 1 355 26 view .LVU187
 762 0018 BC48     		ldr	r0, .L101+8
 763              	.LVL57:
 355:Src/mc_tasks.c ****   PQD_CalcElMotorPower(pMPM[M1]);
 764              		.loc 1 355 3 is_stmt 1 view .LVU188
 355:Src/mc_tasks.c ****   PQD_CalcElMotorPower(pMPM[M1]);
 765              		.loc 1 355 26 is_stmt 0 view .LVU189
 766 001a FFF7FEFF 		bl	STO_PLL_CalcAvrgMecSpeedUnit
 767              	.LVL58:
 768 001e 0646     		mov	r6, r0
 356:Src/mc_tasks.c **** 
 769              		.loc 1 356 3 view .LVU190
 770 0020 3868     		ldr	r0, [r7]
 771              	.LVL59:
 356:Src/mc_tasks.c **** 
 772              		.loc 1 356 3 is_stmt 1 view .LVU191
 773 0022 FFF7FEFF 		bl	PQD_CalcElMotorPower
 774              	.LVL60:
 358:Src/mc_tasks.c ****   {
 775              		.loc 1 358 3 view .LVU192
 358:Src/mc_tasks.c ****   {
 776              		.loc 1 358 7 is_stmt 0 view .LVU193
 777 0026 2046     		mov	r0, r4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 31


 778 0028 FFF7FEFF 		bl	MCI_GetCurrentFaults
 779              	.LVL61:
 358:Src/mc_tasks.c ****   {
 780              		.loc 1 358 6 view .LVU194
 781 002c 20B1     		cbz	r0, .L98
 663:Src/mc_tasks.c ****   }
 782              		.loc 1 663 5 is_stmt 1 view .LVU195
 663:Src/mc_tasks.c ****   }
 783              		.loc 1 663 19 is_stmt 0 view .LVU196
 784 002e 0A23     		movs	r3, #10
 785 0030 84F82330 		strb	r3, [r4, #35]
 786              	.LVL62:
 787              	.L41:
 668:Src/mc_tasks.c **** 
 788              		.loc 1 668 1 view .LVU197
 789 0034 03B0     		add	sp, sp, #12
 790              	.LCFI10:
 791              		.cfi_remember_state
 792              		.cfi_def_cfa_offset 20
 793              		@ sp needed
 794 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 795              	.LVL63:
 796              	.L98:
 797              	.LCFI11:
 798              		.cfi_restore_state
 360:Src/mc_tasks.c ****     {
 799              		.loc 1 360 5 is_stmt 1 view .LVU198
 360:Src/mc_tasks.c ****     {
 800              		.loc 1 360 9 is_stmt 0 view .LVU199
 801 0038 2046     		mov	r0, r4
 802 003a FFF7FEFF 		bl	MCI_GetOccurredFaults
 803              	.LVL64:
 360:Src/mc_tasks.c ****     {
 804              		.loc 1 360 8 view .LVU200
 805 003e 78BB     		cbnz	r0, .L43
 362:Src/mc_tasks.c ****       {
 806              		.loc 1 362 7 is_stmt 1 view .LVU201
 807 0040 94F82330 		ldrb	r3, [r4, #35]	@ zero_extendqisi2
 808 0044 132B     		cmp	r3, #19
 809 0046 F5D8     		bhi	.L41
 810 0048 01A2     		adr	r2, .L46
 811 004a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 812 004e 00BF     		.p2align 2
 813              	.L46:
 814 0050 3F020000 		.word	.L54+1
 815 0054 35000000 		.word	.L41+1
 816 0058 35000000 		.word	.L41+1
 817 005c 35000000 		.word	.L41+1
 818 0060 A7010000 		.word	.L53+1
 819 0064 35000000 		.word	.L41+1
 820 0068 75010000 		.word	.L52+1
 821 006c 35000000 		.word	.L41+1
 822 0070 55010000 		.word	.L51+1
 823 0074 35000000 		.word	.L41+1
 824 0078 A1000000 		.word	.L43+1
 825 007c 7B020000 		.word	.L49+1
 826 0080 35000000 		.word	.L41+1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 32


 827 0084 35000000 		.word	.L41+1
 828 0088 35000000 		.word	.L41+1
 829 008c 35000000 		.word	.L41+1
 830 0090 05010000 		.word	.L48+1
 831 0094 CD000000 		.word	.L47+1
 832 0098 35000000 		.word	.L41+1
 833 009c AB000000 		.word	.L45+1
 834              		.p2align 1
 835              	.L43:
 658:Src/mc_tasks.c ****     }
 836              		.loc 1 658 7 view .LVU202
 658:Src/mc_tasks.c ****     }
 837              		.loc 1 658 21 is_stmt 0 view .LVU203
 838 00a0 0B23     		movs	r3, #11
 839 00a2 84F82330 		strb	r3, [r4, #35]
 668:Src/mc_tasks.c **** 
 840              		.loc 1 668 1 view .LVU204
 841 00a6 03B0     		add	sp, sp, #12
 842              	.LCFI12:
 843              		.cfi_remember_state
 844              		.cfi_def_cfa_offset 20
 845              		@ sp needed
 846 00a8 F0BD     		pop	{r4, r5, r6, r7, pc}
 847              	.LVL65:
 848              	.L45:
 849              	.LCFI13:
 850              		.cfi_restore_state
 524:Src/mc_tasks.c ****           {
 851              		.loc 1 524 11 is_stmt 1 view .LVU205
 524:Src/mc_tasks.c ****           {
 852              		.loc 1 524 14 is_stmt 0 view .LVU206
 853 00aa 94F82230 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 854 00ae 052B     		cmp	r3, #5
 855 00b0 00F0EB80 		beq	.L61
 856              	.LBB41:
 530:Src/mc_tasks.c ****             int16_t hForcedMecSpeedUnit;
 857              		.loc 1 530 13 is_stmt 1 view .LVU207
 531:Src/mc_tasks.c **** 
 858              		.loc 1 531 13 view .LVU208
 533:Src/mc_tasks.c ****             {
 859              		.loc 1 533 13 view .LVU209
 533:Src/mc_tasks.c ****             {
 860              		.loc 1 533 19 is_stmt 0 view .LVU210
 861 00b4 9648     		ldr	r0, .L101+12
 862 00b6 FFF7FEFF 		bl	RUC_Exec
 863              	.LVL66:
 533:Src/mc_tasks.c ****             {
 864              		.loc 1 533 16 view .LVU211
 865 00ba 0246     		mov	r2, r0
 866 00bc 0028     		cmp	r0, #0
 867 00be 40F0F680 		bne	.L68
 536:Src/mc_tasks.c ****             }
 868              		.loc 1 536 15 is_stmt 1 view .LVU212
 869 00c2 9048     		ldr	r0, .L101
 870 00c4 1021     		movs	r1, #16
 871 00c6 FFF7FEFF 		bl	MCI_FaultProcessing
 872              	.LVL67:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 33


 873 00ca B3E7     		b	.L41
 874              	.L47:
 875              	.LBE41:
 401:Src/mc_tasks.c ****           {
 876              		.loc 1 401 11 view .LVU213
 401:Src/mc_tasks.c ****           {
 877              		.loc 1 401 14 is_stmt 0 view .LVU214
 878 00cc 94F82230 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 879 00d0 052B     		cmp	r3, #5
 880 00d2 00F0DA80 		beq	.L61
 407:Src/mc_tasks.c ****             {
 881              		.loc 1 407 13 is_stmt 1 view .LVU215
 407:Src/mc_tasks.c ****             {
 882              		.loc 1 407 17 is_stmt 0 view .LVU216
 883 00d6 8F4D     		ldr	r5, .L101+16
 884              	.LVL68:
 407:Src/mc_tasks.c ****             {
 885              		.loc 1 407 17 view .LVU217
 886 00d8 0121     		movs	r1, #1
 887 00da 2868     		ldr	r0, [r5]
 888 00dc FFF7FEFF 		bl	PWMC_CurrentReadingCalibr
 889              	.LVL69:
 407:Src/mc_tasks.c ****             {
 890              		.loc 1 407 16 view .LVU218
 891 00e0 0028     		cmp	r0, #0
 892 00e2 A7D0     		beq	.L41
 409:Src/mc_tasks.c ****               {
 893              		.loc 1 409 15 is_stmt 1 view .LVU219
 409:Src/mc_tasks.c ****               {
 894              		.loc 1 409 18 is_stmt 0 view .LVU220
 895 00e4 94F82230 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 896 00e8 032B     		cmp	r3, #3
 897 00ea 00F03B81 		beq	.L99
 898              	.L60:
 418:Src/mc_tasks.c ****                 TSK_SetChargeBootCapDelayM1(M1_CHARGE_BOOT_CAP_TICKS);
 899              		.loc 1 418 17 is_stmt 1 view .LVU221
 900 00ee 2868     		ldr	r0, [r5]
 901 00f0 0021     		movs	r1, #0
 902 00f2 FFF7FEFF 		bl	R3_1_TurnOnLowSides
 903              	.LVL70:
 419:Src/mc_tasks.c ****                 Mci[M1].State = CHARGE_BOOT_CAP;
 904              		.loc 1 419 17 view .LVU222
 905 00f6 1420     		movs	r0, #20
 906 00f8 FFF7FEFF 		bl	TSK_SetChargeBootCapDelayM1
 907              	.LVL71:
 420:Src/mc_tasks.c ****               }
 908              		.loc 1 420 17 view .LVU223
 420:Src/mc_tasks.c ****               }
 909              		.loc 1 420 31 is_stmt 0 view .LVU224
 910 00fc 1023     		movs	r3, #16
 911 00fe 84F82330 		strb	r3, [r4, #35]
 912 0102 97E7     		b	.L41
 913              	.LVL72:
 914              	.L48:
 433:Src/mc_tasks.c ****           {
 915              		.loc 1 433 11 is_stmt 1 view .LVU225
 433:Src/mc_tasks.c ****           {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 34


 916              		.loc 1 433 14 is_stmt 0 view .LVU226
 917 0104 94F82230 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 918 0108 052B     		cmp	r3, #5
 919 010a 00F0BE80 		beq	.L61
 439:Src/mc_tasks.c ****             {
 920              		.loc 1 439 13 is_stmt 1 view .LVU227
 439:Src/mc_tasks.c ****             {
 921              		.loc 1 439 17 is_stmt 0 view .LVU228
 922 010e FFF7FEFF 		bl	TSK_ChargeBootCapDelayHasElapsedM1
 923              	.LVL73:
 439:Src/mc_tasks.c ****             {
 924              		.loc 1 439 16 view .LVU229
 925 0112 0028     		cmp	r0, #0
 926 0114 8ED0     		beq	.L41
 441:Src/mc_tasks.c ****               FOCVars[M1].bDriveInput = EXTERNAL;
 927              		.loc 1 441 15 is_stmt 1 view .LVU230
 928 0116 7F4E     		ldr	r6, .L101+16
 929              	.LVL74:
 441:Src/mc_tasks.c ****               FOCVars[M1].bDriveInput = EXTERNAL;
 930              		.loc 1 441 15 is_stmt 0 view .LVU231
 931 0118 3068     		ldr	r0, [r6]
 932 011a FFF7FEFF 		bl	R3_1_SwitchOffPWM
 933              	.LVL75:
 442:Src/mc_tasks.c ****               STC_SetSpeedSensor( pSTC[M1], &VirtualSpeedSensorM1._Super );
 934              		.loc 1 442 15 is_stmt 1 view .LVU232
 442:Src/mc_tasks.c ****               STC_SetSpeedSensor( pSTC[M1], &VirtualSpeedSensorM1._Super );
 935              		.loc 1 442 39 is_stmt 0 view .LVU233
 936 011e 7E4B     		ldr	r3, .L101+20
 443:Src/mc_tasks.c ****               STO_PLL_Clear(&STO_PLL_M1);
 937              		.loc 1 443 15 view .LVU234
 938 0120 7E49     		ldr	r1, .L101+24
 442:Src/mc_tasks.c ****               STC_SetSpeedSensor( pSTC[M1], &VirtualSpeedSensorM1._Super );
 939              		.loc 1 442 39 view .LVU235
 940 0122 0122     		movs	r2, #1
 941 0124 83F82420 		strb	r2, [r3, #36]
 443:Src/mc_tasks.c ****               STO_PLL_Clear(&STO_PLL_M1);
 942              		.loc 1 443 15 is_stmt 1 view .LVU236
 943 0128 7D4B     		ldr	r3, .L101+28
 944 012a 1868     		ldr	r0, [r3]
 945 012c FFF7FEFF 		bl	STC_SetSpeedSensor
 946              	.LVL76:
 444:Src/mc_tasks.c ****               FOC_Clear( M1 );
 947              		.loc 1 444 15 view .LVU237
 948 0130 7648     		ldr	r0, .L101+8
 949 0132 FFF7FEFF 		bl	STO_PLL_Clear
 950              	.LVL77:
 445:Src/mc_tasks.c **** 
 951              		.loc 1 445 15 view .LVU238
 952 0136 0020     		movs	r0, #0
 953 0138 FFF7FEFF 		bl	FOC_Clear
 954              	.LVL78:
 447:Src/mc_tasks.c ****               {
 955              		.loc 1 447 15 view .LVU239
 447:Src/mc_tasks.c ****               {
 956              		.loc 1 447 54 is_stmt 0 view .LVU240
 957 013c 6B1E     		subs	r3, r5, #1
 447:Src/mc_tasks.c ****               {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 35


 958              		.loc 1 447 18 view .LVU241
 959 013e DBB2     		uxtb	r3, r3
 453:Src/mc_tasks.c ****               }
 960              		.loc 1 453 31 view .LVU242
 961 0140 022B     		cmp	r3, #2
 962 0142 34BF     		ite	cc
 963 0144 0623     		movcc	r3, #6
 964 0146 0423     		movcs	r3, #4
 455:Src/mc_tasks.c ****             }
 965              		.loc 1 455 15 view .LVU243
 966 0148 3068     		ldr	r0, [r6]
 967 014a 84F82330 		strb	r3, [r4, #35]
 455:Src/mc_tasks.c ****             }
 968              		.loc 1 455 15 is_stmt 1 view .LVU244
 969 014e FFF7FEFF 		bl	PWMC_SwitchOnPWM
 970              	.LVL79:
 971 0152 6FE7     		b	.L41
 972              	.LVL80:
 973              	.L51:
 614:Src/mc_tasks.c ****           {
 974              		.loc 1 614 11 view .LVU245
 614:Src/mc_tasks.c ****           {
 975              		.loc 1 614 15 is_stmt 0 view .LVU246
 976 0154 FFF7FEFF 		bl	TSK_StopPermanencyTimeHasElapsedM1
 977              	.LVL81:
 614:Src/mc_tasks.c ****           {
 978              		.loc 1 614 14 view .LVU247
 979 0158 0028     		cmp	r0, #0
 980 015a 3FF46BAF 		beq	.L41
 617:Src/mc_tasks.c ****             VSS_Clear(&VirtualSpeedSensorM1); /* Reset measured speed in IDLE */
 981              		.loc 1 617 13 is_stmt 1 view .LVU248
 982 015e 704B     		ldr	r3, .L101+28
 983 0160 6E49     		ldr	r1, .L101+24
 984 0162 1868     		ldr	r0, [r3]
 985 0164 FFF7FEFF 		bl	STC_SetSpeedSensor
 986              	.LVL82:
 618:Src/mc_tasks.c ****             /* USER CODE BEGIN MediumFrequencyTask M1 5 */
 987              		.loc 1 618 13 view .LVU249
 988 0168 6C48     		ldr	r0, .L101+24
 989 016a FFF7FEFF 		bl	VSS_Clear
 990              	.LVL83:
 622:Src/mc_tasks.c ****             Mci[M1].State = IDLE;
 991              		.loc 1 622 13 view .LVU250
 623:Src/mc_tasks.c ****           }
 992              		.loc 1 623 13 view .LVU251
 622:Src/mc_tasks.c ****             Mci[M1].State = IDLE;
 993              		.loc 1 622 35 is_stmt 0 view .LVU252
 994 016e 0023     		movs	r3, #0
 995 0170 6384     		strh	r3, [r4, #34]	@ movhi
 996 0172 5FE7     		b	.L41
 997              	.L52:
 576:Src/mc_tasks.c ****           {
 998              		.loc 1 576 11 is_stmt 1 view .LVU253
 576:Src/mc_tasks.c ****           {
 999              		.loc 1 576 14 is_stmt 0 view .LVU254
 1000 0174 94F82230 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 1001 0178 052B     		cmp	r3, #5
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 36


 1002 017a 00F08680 		beq	.L61
 586:Src/mc_tasks.c ****             if (mode != MCM_OPEN_LOOP_VOLTAGE_MODE && mode != MCM_OPEN_LOOP_CURRENT_MODE)
 1003              		.loc 1 586 13 is_stmt 1 view .LVU255
 1004 017e 6148     		ldr	r0, .L101
 1005 0180 FFF7FEFF 		bl	MCI_ExecBufferedCommands
 1006              	.LVL84:
 587:Src/mc_tasks.c ****             {
 1007              		.loc 1 587 13 view .LVU256
 587:Src/mc_tasks.c ****             {
 1008              		.loc 1 587 52 is_stmt 0 view .LVU257
 1009 0184 6B1E     		subs	r3, r5, #1
 587:Src/mc_tasks.c ****             {
 1010              		.loc 1 587 16 view .LVU258
 1011 0186 DBB2     		uxtb	r3, r3
 1012 0188 012B     		cmp	r3, #1
 1013 018a 40F2DF80 		bls	.L71
 590:Src/mc_tasks.c **** 
 1014              		.loc 1 590 15 is_stmt 1 view .LVU259
 1015 018e 0020     		movs	r0, #0
 1016 0190 FFF7FEFF 		bl	FOC_CalcCurrRef
 1017              	.LVL85:
 592:Src/mc_tasks.c ****               {
 1018              		.loc 1 592 15 view .LVU260
 592:Src/mc_tasks.c ****               {
 1019              		.loc 1 592 17 is_stmt 0 view .LVU261
 1020 0194 002E     		cmp	r6, #0
 1021 0196 7FF44DAF 		bne	.L41
 594:Src/mc_tasks.c ****               }
 1022              		.loc 1 594 17 is_stmt 1 view .LVU262
 1023 019a 5A48     		ldr	r0, .L101
 1024 019c 3246     		mov	r2, r6
 1025 019e 2021     		movs	r1, #32
 1026 01a0 FFF7FEFF 		bl	MCI_FaultProcessing
 1027              	.LVL86:
 1028 01a4 46E7     		b	.L41
 1029              	.L53:
 467:Src/mc_tasks.c ****           {
 1030              		.loc 1 467 11 view .LVU263
 467:Src/mc_tasks.c ****           {
 1031              		.loc 1 467 14 is_stmt 0 view .LVU264
 1032 01a6 94F82230 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 1033 01aa 052B     		cmp	r3, #5
 1034 01ac 6DD0     		beq	.L61
 1035              	.LBB44:
 474:Src/mc_tasks.c ****             qd_t IqdRef;
 1036              		.loc 1 474 13 is_stmt 1 view .LVU265
 475:Src/mc_tasks.c ****             bool ObserverConverged;
 1037              		.loc 1 475 13 view .LVU266
 476:Src/mc_tasks.c **** 
 1038              		.loc 1 476 13 view .LVU267
 479:Src/mc_tasks.c ****             {
 1039              		.loc 1 479 13 view .LVU268
 479:Src/mc_tasks.c ****             {
 1040              		.loc 1 479 18 is_stmt 0 view .LVU269
 1041 01ae 5848     		ldr	r0, .L101+12
 1042 01b0 FFF7FEFF 		bl	RUC_Exec
 1043              	.LVL87:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 37


 479:Src/mc_tasks.c ****             {
 1044              		.loc 1 479 15 view .LVU270
 1045 01b4 0246     		mov	r2, r0
 1046 01b6 0028     		cmp	r0, #0
 1047 01b8 40F0B880 		bne	.L63
 482:Src/mc_tasks.c ****             }
 1048              		.loc 1 482 15 is_stmt 1 view .LVU271
 1049 01bc 5148     		ldr	r0, .L101
 1050 01be 1021     		movs	r1, #16
 1051 01c0 FFF7FEFF 		bl	MCI_FaultProcessing
 1052              	.LVL88:
 1053              	.L64:
 494:Src/mc_tasks.c **** 
 1054              		.loc 1 494 13 view .LVU272
 494:Src/mc_tasks.c **** 
 1055              		.loc 1 494 19 is_stmt 0 view .LVU273
 1056 01c4 5548     		ldr	r0, .L101+24
 1057 01c6 0DF10201 		add	r1, sp, #2
 1058 01ca FFF7FEFF 		bl	VSS_CalcAvrgMecSpeedUnit
 1059              	.LVL89:
 497:Src/mc_tasks.c ****             {
 1060              		.loc 1 497 13 is_stmt 1 view .LVU274
 497:Src/mc_tasks.c ****             {
 1061              		.loc 1 497 25 is_stmt 0 view .LVU275
 1062 01ce 5048     		ldr	r0, .L101+12
 1063 01d0 FFF7FEFF 		bl	RUC_FirstAccelerationStageReached
 1064              	.LVL90:
 497:Src/mc_tasks.c ****             {
 1065              		.loc 1 497 16 view .LVU276
 1066 01d4 0028     		cmp	r0, #0
 1067 01d6 3FF42DAF 		beq	.L41
 499:Src/mc_tasks.c ****               STO_SetDirection(&STO_PLL_M1, (int8_t)MCI_GetImposedMotorDirection(&Mci[M1]));
 1068              		.loc 1 499 15 is_stmt 1 view .LVU277
 499:Src/mc_tasks.c ****               STO_SetDirection(&STO_PLL_M1, (int8_t)MCI_GetImposedMotorDirection(&Mci[M1]));
 1069              		.loc 1 499 35 is_stmt 0 view .LVU278
 1070 01da 0DF10201 		add	r1, sp, #2
 1071 01de 4B48     		ldr	r0, .L101+8
 1072 01e0 FFF7FEFF 		bl	STO_PLL_IsObserverConverged
 1073              	.LVL91:
 1074 01e4 0546     		mov	r5, r0
 1075              	.LVL92:
 500:Src/mc_tasks.c **** 
 1076              		.loc 1 500 53 view .LVU279
 1077 01e6 4748     		ldr	r0, .L101
 1078              	.LVL93:
 500:Src/mc_tasks.c **** 
 1079              		.loc 1 500 15 is_stmt 1 view .LVU280
 500:Src/mc_tasks.c **** 
 1080              		.loc 1 500 53 is_stmt 0 view .LVU281
 1081 01e8 FFF7FEFF 		bl	MCI_GetImposedMotorDirection
 1082              	.LVL94:
 500:Src/mc_tasks.c **** 
 1083              		.loc 1 500 15 view .LVU282
 1084 01ec 41B2     		sxtb	r1, r0
 1085 01ee 4748     		ldr	r0, .L101+8
 1086 01f0 FFF7FEFF 		bl	STO_SetDirection
 1087              	.LVL95:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 38


 502:Src/mc_tasks.c ****             }
 1088              		.loc 1 502 15 is_stmt 1 view .LVU283
 502:Src/mc_tasks.c ****             }
 1089              		.loc 1 502 21 is_stmt 0 view .LVU284
 1090 01f4 4948     		ldr	r0, .L101+24
 1091 01f6 2946     		mov	r1, r5
 1092 01f8 FFF7FEFF 		bl	VSS_SetStartTransition
 1093              	.LVL96:
 508:Src/mc_tasks.c ****             {
 1094              		.loc 1 508 13 is_stmt 1 view .LVU285
 508:Src/mc_tasks.c ****             {
 1095              		.loc 1 508 16 is_stmt 0 view .LVU286
 1096 01fc 002D     		cmp	r5, #0
 1097 01fe 3FF419AF 		beq	.L41
 1098              	.LBB45:
 510:Src/mc_tasks.c **** 
 1099              		.loc 1 510 15 is_stmt 1 view .LVU287
 510:Src/mc_tasks.c **** 
 1100              		.loc 1 510 36 is_stmt 0 view .LVU288
 1101 0202 4248     		ldr	r0, .L101+8
 1102 0204 444E     		ldr	r6, .L101+20
 1103              	.LVL97:
 513:Src/mc_tasks.c ****               (void)REMNG_ExecRamp(pREMNG[M1], FOCVars[M1].Iqdref.q, 0);
 1104              		.loc 1 513 15 view .LVU289
 1105 0206 474D     		ldr	r5, .L101+32
 1106              	.LVL98:
 510:Src/mc_tasks.c **** 
 1107              		.loc 1 510 36 view .LVU290
 1108 0208 FFF7FEFF 		bl	SPD_GetElAngle
 1109              	.LVL99:
 1110 020c 0146     		mov	r1, r0
 1111 020e 7068     		ldr	r0, [r6, #4]
 1112 0210 FFF7FEFF 		bl	MCM_Park
 1113              	.LVL100:
 1114 0214 0346     		mov	r3, r0
 513:Src/mc_tasks.c ****               (void)REMNG_ExecRamp(pREMNG[M1], FOCVars[M1].Iqdref.q, 0);
 1115              		.loc 1 513 15 view .LVU291
 1116 0216 2868     		ldr	r0, [r5]
 510:Src/mc_tasks.c **** 
 1117              		.loc 1 510 36 view .LVU292
 1118 0218 0193     		str	r3, [sp, #4]
 513:Src/mc_tasks.c ****               (void)REMNG_ExecRamp(pREMNG[M1], FOCVars[M1].Iqdref.q, 0);
 1119              		.loc 1 513 15 is_stmt 1 view .LVU293
 1120 021a FFF7FEFF 		bl	REMNG_Init
 1121              	.LVL101:
 514:Src/mc_tasks.c ****               (void)REMNG_ExecRamp(pREMNG[M1], StatorCurrent.q, TRANSITION_DURATION);
 1122              		.loc 1 514 15 view .LVU294
 514:Src/mc_tasks.c ****               (void)REMNG_ExecRamp(pREMNG[M1], StatorCurrent.q, TRANSITION_DURATION);
 1123              		.loc 1 514 21 is_stmt 0 view .LVU295
 1124 021e B6F91010 		ldrsh	r1, [r6, #16]
 1125 0222 2868     		ldr	r0, [r5]
 1126 0224 0022     		movs	r2, #0
 1127 0226 FFF7FEFF 		bl	REMNG_ExecRamp
 1128              	.LVL102:
 515:Src/mc_tasks.c ****               Mci[M1].State = SWITCH_OVER;
 1129              		.loc 1 515 15 is_stmt 1 view .LVU296
 515:Src/mc_tasks.c ****               Mci[M1].State = SWITCH_OVER;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 39


 1130              		.loc 1 515 21 is_stmt 0 view .LVU297
 1131 022a BDF90410 		ldrsh	r1, [sp, #4]
 1132 022e 2868     		ldr	r0, [r5]
 1133 0230 1922     		movs	r2, #25
 1134 0232 FFF7FEFF 		bl	REMNG_ExecRamp
 1135              	.LVL103:
 516:Src/mc_tasks.c ****             }
 1136              		.loc 1 516 15 is_stmt 1 view .LVU298
 516:Src/mc_tasks.c ****             }
 1137              		.loc 1 516 29 is_stmt 0 view .LVU299
 1138 0236 1323     		movs	r3, #19
 1139 0238 84F82330 		strb	r3, [r4, #35]
 516:Src/mc_tasks.c ****             }
 1140              		.loc 1 516 29 view .LVU300
 1141 023c FAE6     		b	.L41
 1142              	.LVL104:
 1143              	.L54:
 516:Src/mc_tasks.c ****             }
 1144              		.loc 1 516 29 view .LVU301
 1145              	.LBE45:
 1146              	.LBE44:
 367:Src/mc_tasks.c ****           {
 1147              		.loc 1 367 11 is_stmt 1 view .LVU302
 367:Src/mc_tasks.c ****           {
 1148              		.loc 1 367 14 is_stmt 0 view .LVU303
 1149 023e 94F82230 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 1150 0242 03F0FD03 		and	r3, r3, #253
 1151 0246 012B     		cmp	r3, #1
 1152 0248 7FF4F4AE 		bne	.L41
 369:Src/mc_tasks.c ****             {
 1153              		.loc 1 369 13 is_stmt 1 view .LVU304
 369:Src/mc_tasks.c ****             {
 1154              		.loc 1 369 53 is_stmt 0 view .LVU305
 1155 024c 6B1E     		subs	r3, r5, #1
 369:Src/mc_tasks.c ****             {
 1156              		.loc 1 369 16 view .LVU306
 1157 024e DBB2     		uxtb	r3, r3
 1158 0250 012B     		cmp	r3, #1
 1159 0252 06D9     		bls	.L56
 371:Src/mc_tasks.c ****             }
 1160              		.loc 1 371 15 is_stmt 1 view .LVU307
 1161 0254 2B48     		ldr	r0, .L101
 1162 0256 FFF7FEFF 		bl	MCI_GetImposedMotorDirection
 1163              	.LVL105:
 1164 025a 0146     		mov	r1, r0
 1165 025c 2C48     		ldr	r0, .L101+12
 1166 025e FFF7FEFF 		bl	RUC_Clear
 1167              	.LVL106:
 1168              	.L56:
 376:Src/mc_tasks.c ****             if (pwmcHandle[M1]->offsetCalibStatus == false)
 1169              		.loc 1 376 13 view .LVU308
 377:Src/mc_tasks.c ****             {
 1170              		.loc 1 377 13 view .LVU309
 377:Src/mc_tasks.c ****             {
 1171              		.loc 1 377 27 is_stmt 0 view .LVU310
 1172 0262 2C4D     		ldr	r5, .L101+16
 1173              	.LVL107:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 40


 377:Src/mc_tasks.c ****             {
 1174              		.loc 1 377 27 view .LVU311
 1175 0264 2868     		ldr	r0, [r5]
 377:Src/mc_tasks.c ****             {
 1176              		.loc 1 377 16 view .LVU312
 1177 0266 90F88110 		ldrb	r1, [r0, #129]	@ zero_extendqisi2
 1178 026a 0029     		cmp	r1, #0
 1179 026c 68D1     		bne	.L57
 379:Src/mc_tasks.c ****               Mci[M1].State = OFFSET_CALIB;
 1180              		.loc 1 379 15 is_stmt 1 view .LVU313
 379:Src/mc_tasks.c ****               Mci[M1].State = OFFSET_CALIB;
 1181              		.loc 1 379 21 is_stmt 0 view .LVU314
 1182 026e FFF7FEFF 		bl	PWMC_CurrentReadingCalibr
 1183              	.LVL108:
 380:Src/mc_tasks.c ****             }
 1184              		.loc 1 380 15 is_stmt 1 view .LVU315
 380:Src/mc_tasks.c ****             }
 1185              		.loc 1 380 29 is_stmt 0 view .LVU316
 1186 0272 1123     		movs	r3, #17
 1187 0274 84F82330 		strb	r3, [r4, #35]
 1188 0278 DCE6     		b	.L41
 1189              	.LVL109:
 1190              	.L49:
 634:Src/mc_tasks.c ****           {
 1191              		.loc 1 634 11 is_stmt 1 view .LVU317
 634:Src/mc_tasks.c ****           {
 1192              		.loc 1 634 14 is_stmt 0 view .LVU318
 1193 027a 94F82230 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 1194 027e 022B     		cmp	r3, #2
 1195 0280 7FF4D8AE 		bne	.L41
 636:Src/mc_tasks.c ****             Mci[M1].State = IDLE;
 1196              		.loc 1 636 13 is_stmt 1 view .LVU319
 637:Src/mc_tasks.c ****           }
 1197              		.loc 1 637 13 view .LVU320
 636:Src/mc_tasks.c ****             Mci[M1].State = IDLE;
 1198              		.loc 1 636 35 is_stmt 0 view .LVU321
 1199 0284 0023     		movs	r3, #0
 1200 0286 6384     		strh	r3, [r4, #34]	@ movhi
 1201 0288 D4E6     		b	.L41
 1202              	.L61:
 403:Src/mc_tasks.c ****           }
 1203              		.loc 1 403 13 is_stmt 1 view .LVU322
 1204              	.LVL110:
 1205              	.LBB46:
 1206              	.LBI46:
 248:Src/mc_tasks.c **** {
 1207              		.loc 1 248 6 view .LVU323
 1208              	.LBB47:
 250:Src/mc_tasks.c **** 
 1209              		.loc 1 250 5 view .LVU324
 1210 028a 224B     		ldr	r3, .L101+16
 1211 028c 1868     		ldr	r0, [r3]
 1212 028e FFF7FEFF 		bl	R3_1_SwitchOffPWM
 1213              	.LVL111:
 252:Src/mc_tasks.c ****   PQD_Clear(pMPM[motor]);
 1214              		.loc 1 252 3 view .LVU325
 1215 0292 0020     		movs	r0, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 41


 1216 0294 FFF7FEFF 		bl	FOC_Clear
 1217              	.LVL112:
 253:Src/mc_tasks.c ****   TSK_SetStopPermanencyTimeM1(STOPPERMANENCY_TICKS);
 1218              		.loc 1 253 3 view .LVU326
 1219 0298 3868     		ldr	r0, [r7]
 1220 029a FFF7FEFF 		bl	PQD_Clear
 1221              	.LVL113:
 254:Src/mc_tasks.c ****   Mci[motor].State = STOP;
 1222              		.loc 1 254 3 view .LVU327
 1223 029e 4FF44870 		mov	r0, #800
 1224 02a2 FFF7FEFF 		bl	TSK_SetStopPermanencyTimeM1
 1225              	.LVL114:
 255:Src/mc_tasks.c **** }
 1226              		.loc 1 255 3 view .LVU328
 255:Src/mc_tasks.c **** }
 1227              		.loc 1 255 20 is_stmt 0 view .LVU329
 1228 02a6 0823     		movs	r3, #8
 1229 02a8 84F82330 		strb	r3, [r4, #35]
 256:Src/mc_tasks.c **** 
 1230              		.loc 1 256 1 view .LVU330
 1231 02ac C2E6     		b	.L41
 1232              	.LVL115:
 1233              	.L68:
 256:Src/mc_tasks.c **** 
 1234              		.loc 1 256 1 view .LVU331
 1235              	.LBE47:
 1236              	.LBE46:
 1237              	.LBB48:
 1238              	.LBB42:
 542:Src/mc_tasks.c ****               /* Check if the transition ramp has completed. */
 1239              		.loc 1 542 15 is_stmt 1 view .LVU332
 542:Src/mc_tasks.c ****               /* Check if the transition ramp has completed. */
 1240              		.loc 1 542 28 is_stmt 0 view .LVU333
 1241 02ae 1B48     		ldr	r0, .L101+24
 1242 02b0 01A9     		add	r1, sp, #4
 1243 02b2 FFF7FEFF 		bl	VSS_CalcAvrgMecSpeedUnit
 1244              	.LVL116:
 1245 02b6 0546     		mov	r5, r0
 1246              	.LVL117:
 545:Src/mc_tasks.c ****               LoopClosed = LoopClosed || tempBool;
 1247              		.loc 1 545 26 view .LVU334
 1248 02b8 1848     		ldr	r0, .L101+24
 1249              	.LVL118:
 544:Src/mc_tasks.c ****               tempBool = VSS_TransitionEnded(&VirtualSpeedSensorM1);
 1250              		.loc 1 544 15 is_stmt 1 view .LVU335
 545:Src/mc_tasks.c ****               LoopClosed = LoopClosed || tempBool;
 1251              		.loc 1 545 15 view .LVU336
 545:Src/mc_tasks.c ****               LoopClosed = LoopClosed || tempBool;
 1252              		.loc 1 545 26 is_stmt 0 view .LVU337
 1253 02ba FFF7FEFF 		bl	VSS_TransitionEnded
 1254              	.LVL119:
 546:Src/mc_tasks.c **** 
 1255              		.loc 1 546 15 is_stmt 1 view .LVU338
 546:Src/mc_tasks.c **** 
 1256              		.loc 1 546 39 is_stmt 0 view .LVU339
 1257 02be 002D     		cmp	r5, #0
 1258 02c0 4DD0     		beq	.L100
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 42


 1259              	.L70:
 1260              	.LVL120:
 550:Src/mc_tasks.c ****               {
 1261              		.loc 1 550 15 is_stmt 1 view .LVU340
 555:Src/mc_tasks.c ****                                     (((int32_t)FOCVars[M1].Iqdref.q * (int16_t)PID_GetKIDivisor(&PI
 1262              		.loc 1 555 17 view .LVU341
 556:Src/mc_tasks.c ****                                     / PID_SPEED_INTEGRAL_INIT_DIV));
 1263              		.loc 1 556 66 is_stmt 0 view .LVU342
 1264 02c2 154B     		ldr	r3, .L101+20
 556:Src/mc_tasks.c ****                                     / PID_SPEED_INTEGRAL_INIT_DIV));
 1265              		.loc 1 556 80 view .LVU343
 1266 02c4 1848     		ldr	r0, .L101+36
 1267              	.LVL121:
 556:Src/mc_tasks.c ****                                     / PID_SPEED_INTEGRAL_INIT_DIV));
 1268              		.loc 1 556 66 view .LVU344
 1269 02c6 B3F91060 		ldrsh	r6, [r3, #16]
 1270              	.LVL122:
 562:Src/mc_tasks.c ****                 FOC_InitAdditionalMethods(M1);
 1271              		.loc 1 562 17 view .LVU345
 1272 02ca 154D     		ldr	r5, .L101+28
 556:Src/mc_tasks.c ****                                     / PID_SPEED_INTEGRAL_INIT_DIV));
 1273              		.loc 1 556 80 view .LVU346
 1274 02cc FFF7FEFF 		bl	PID_GetKIDivisor
 1275              	.LVL123:
 555:Src/mc_tasks.c ****                                     (((int32_t)FOCVars[M1].Iqdref.q * (int16_t)PID_GetKIDivisor(&PI
 1276              		.loc 1 555 17 view .LVU347
 1277 02d0 01B2     		sxth	r1, r0
 1278 02d2 06FB01F1 		mul	r1, r6, r1
 1279 02d6 1448     		ldr	r0, .L101+36
 1280 02d8 FFF7FEFF 		bl	PID_SetIntegralTerm
 1281              	.LVL124:
 562:Src/mc_tasks.c ****                 FOC_InitAdditionalMethods(M1);
 1282              		.loc 1 562 17 is_stmt 1 view .LVU348
 1283 02dc 0B49     		ldr	r1, .L101+8
 1284 02de 2868     		ldr	r0, [r5]
 1285 02e0 FFF7FEFF 		bl	STC_SetSpeedSensor
 1286              	.LVL125:
 563:Src/mc_tasks.c ****                 FOC_CalcCurrRef(M1);
 1287              		.loc 1 563 17 view .LVU349
 1288 02e4 0020     		movs	r0, #0
 1289 02e6 FFF7FEFF 		bl	FOC_InitAdditionalMethods
 1290              	.LVL126:
 564:Src/mc_tasks.c ****                 STC_ForceSpeedReferenceToCurrentSpeed(pSTC[M1]); /* Init the reference speed to cur
 1291              		.loc 1 564 17 view .LVU350
 1292 02ea 0020     		movs	r0, #0
 1293 02ec FFF7FEFF 		bl	FOC_CalcCurrRef
 1294              	.LVL127:
 565:Src/mc_tasks.c ****                 MCI_ExecBufferedCommands(&Mci[M1]); /* Exec the speed ramp after changing of the sp
 1295              		.loc 1 565 17 view .LVU351
 1296 02f0 2868     		ldr	r0, [r5]
 1297 02f2 FFF7FEFF 		bl	STC_ForceSpeedReferenceToCurrentSpeed
 1298              	.LVL128:
 566:Src/mc_tasks.c ****                 Mci[M1].State = RUN;
 1299              		.loc 1 566 17 view .LVU352
 1300 02f6 0348     		ldr	r0, .L101
 1301 02f8 FFF7FEFF 		bl	MCI_ExecBufferedCommands
 1302              	.LVL129:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 43


 567:Src/mc_tasks.c ****               }
 1303              		.loc 1 567 17 view .LVU353
 567:Src/mc_tasks.c ****               }
 1304              		.loc 1 567 31 is_stmt 0 view .LVU354
 1305 02fc 0623     		movs	r3, #6
 1306 02fe 84F82330 		strb	r3, [r4, #35]
 1307 0302 97E6     		b	.L41
 1308              	.L102:
 1309              		.align	2
 1310              	.L101:
 1311 0304 00000000 		.word	Mci
 1312 0308 00000000 		.word	pMPM
 1313 030c 00000000 		.word	STO_PLL_M1
 1314 0310 00000000 		.word	RevUpControlM1
 1315 0314 00000000 		.word	.LANCHOR1
 1316 0318 00000000 		.word	.LANCHOR0
 1317 031c 00000000 		.word	VirtualSpeedSensorM1
 1318 0320 00000000 		.word	pSTC
 1319 0324 00000000 		.word	.LANCHOR4
 1320 0328 00000000 		.word	PIDSpeedHandle_M1
 1321              	.LVL130:
 1322              	.L63:
 567:Src/mc_tasks.c ****               }
 1323              		.loc 1 567 31 view .LVU355
 1324              	.LBE42:
 1325              	.LBE48:
 1326              	.LBB49:
 488:Src/mc_tasks.c ****               IqdRef.d = FOCVars[M1].UserIdref;
 1327              		.loc 1 488 15 is_stmt 1 view .LVU356
 488:Src/mc_tasks.c ****               IqdRef.d = FOCVars[M1].UserIdref;
 1328              		.loc 1 488 26 is_stmt 0 view .LVU357
 1329 032c 124B     		ldr	r3, .L103
 1330 032e 1868     		ldr	r0, [r3]
 1331 0330 FFF7FEFF 		bl	STC_CalcTorqueReference
 1332              	.LVL131:
 489:Src/mc_tasks.c ****               /* Iqd reference current used by the High Frequency Loop to generate the PWM output *
 1333              		.loc 1 489 15 is_stmt 1 view .LVU358
 489:Src/mc_tasks.c ****               /* Iqd reference current used by the High Frequency Loop to generate the PWM output *
 1334              		.loc 1 489 37 is_stmt 0 view .LVU359
 1335 0334 114B     		ldr	r3, .L103+4
 1336 0336 B3F91420 		ldrsh	r2, [r3, #20]
 1337              	.LVL132:
 491:Src/mc_tasks.c ****            }
 1338              		.loc 1 491 15 is_stmt 1 view .LVU360
 491:Src/mc_tasks.c ****            }
 1339              		.loc 1 491 34 is_stmt 0 view .LVU361
 1340 033a 1882     		strh	r0, [r3, #16]	@ movhi
 1341 033c 5A82     		strh	r2, [r3, #18]	@ movhi
 1342 033e 41E7     		b	.L64
 1343              	.LVL133:
 1344              	.L57:
 491:Src/mc_tasks.c ****            }
 1345              		.loc 1 491 34 view .LVU362
 1346              	.LBE49:
 385:Src/mc_tasks.c ****               (void)PWMC_CurrentReadingCalibr(pwmcHandle[M1], CRC_EXEC);
 1347              		.loc 1 385 15 is_stmt 1 view .LVU363
 385:Src/mc_tasks.c ****               (void)PWMC_CurrentReadingCalibr(pwmcHandle[M1], CRC_EXEC);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 44


 1348              		.loc 1 385 56 is_stmt 0 view .LVU364
 1349 0340 0121     		movs	r1, #1
 1350 0342 A0F86010 		strh	r1, [r0, #96]	@ movhi
 386:Src/mc_tasks.c ****               R3_1_TurnOnLowSides(pwmcHandle[M1],M1_CHARGE_BOOT_CAP_DUTY_CYCLES);
 1351              		.loc 1 386 15 is_stmt 1 view .LVU365
 386:Src/mc_tasks.c ****               R3_1_TurnOnLowSides(pwmcHandle[M1],M1_CHARGE_BOOT_CAP_DUTY_CYCLES);
 1352              		.loc 1 386 21 is_stmt 0 view .LVU366
 1353 0346 FFF7FEFF 		bl	PWMC_CurrentReadingCalibr
 1354              	.LVL134:
 387:Src/mc_tasks.c ****               TSK_SetChargeBootCapDelayM1(M1_CHARGE_BOOT_CAP_TICKS);
 1355              		.loc 1 387 15 is_stmt 1 view .LVU367
 1356 034a D0E6     		b	.L60
 1357              	.LVL135:
 1358              	.L71:
 1359              	.LBB50:
 603:Src/mc_tasks.c ****               /* Open Loop */
 1360              		.loc 1 603 15 discriminator 6 view .LVU368
 605:Src/mc_tasks.c ****               OL_Calc(pOpenLoop[M1]);
 1361              		.loc 1 605 15 discriminator 6 view .LVU369
 1362 034c 01A9     		add	r1, sp, #4
 1363 034e 0C48     		ldr	r0, .L103+8
 1364 0350 FFF7FEFF 		bl	VSS_CalcAvrgMecSpeedUnit
 1365              	.LVL136:
 606:Src/mc_tasks.c ****             }
 1366              		.loc 1 606 15 discriminator 6 view .LVU370
 1367 0354 0B4B     		ldr	r3, .L103+12
 1368 0356 1868     		ldr	r0, [r3]
 1369 0358 FFF7FEFF 		bl	OL_Calc
 1370              	.LVL137:
 1371 035c 6AE6     		b	.L41
 1372              	.LVL138:
 1373              	.L100:
 606:Src/mc_tasks.c ****             }
 1374              		.loc 1 606 15 is_stmt 0 discriminator 6 view .LVU371
 1375              	.LBE50:
 1376              	.LBB51:
 1377              	.LBB43:
 546:Src/mc_tasks.c **** 
 1378              		.loc 1 546 39 discriminator 2 view .LVU372
 1379 035e 0028     		cmp	r0, #0
 1380 0360 AFD1     		bne	.L70
 1381 0362 67E6     		b	.L41
 1382              	.LVL139:
 1383              	.L99:
 546:Src/mc_tasks.c **** 
 1384              		.loc 1 546 39 discriminator 2 view .LVU373
 1385              	.LBE43:
 1386              	.LBE51:
 411:Src/mc_tasks.c ****                 PQD_Clear(pMPM[M1]);
 1387              		.loc 1 411 17 is_stmt 1 view .LVU374
 1388 0364 0020     		movs	r0, #0
 1389 0366 FFF7FEFF 		bl	FOC_Clear
 1390              	.LVL140:
 412:Src/mc_tasks.c ****                 Mci[M1].DirectCommand = MCI_NO_COMMAND;
 1391              		.loc 1 412 17 view .LVU375
 1392 036a 3868     		ldr	r0, [r7]
 1393 036c FFF7FEFF 		bl	PQD_Clear
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 45


 1394              	.LVL141:
 413:Src/mc_tasks.c ****                 Mci[M1].State = IDLE;
 1395              		.loc 1 413 17 view .LVU376
 414:Src/mc_tasks.c ****               }
 1396              		.loc 1 414 17 view .LVU377
 413:Src/mc_tasks.c ****                 Mci[M1].State = IDLE;
 1397              		.loc 1 413 39 is_stmt 0 view .LVU378
 1398 0370 0023     		movs	r3, #0
 1399 0372 6384     		strh	r3, [r4, #34]	@ movhi
 1400 0374 5EE6     		b	.L41
 1401              	.L104:
 1402 0376 00BF     		.align	2
 1403              	.L103:
 1404 0378 00000000 		.word	pSTC
 1405 037c 00000000 		.word	.LANCHOR0
 1406 0380 00000000 		.word	VirtualSpeedSensorM1
 1407 0384 00000000 		.word	.LANCHOR3
 1408              		.cfi_endproc
 1409              	.LFE1099:
 1411              		.section	.text.MC_Scheduler,"ax",%progbits
 1412              		.align	1
 1413              		.p2align 2,,3
 1414              		.weak	MC_Scheduler
 1415              		.syntax unified
 1416              		.thumb
 1417              		.thumb_func
 1419              	MC_Scheduler:
 1420              	.LFB1098:
 264:Src/mc_tasks.c **** /* USER CODE BEGIN MC_Scheduler 0 */
 1421              		.loc 1 264 1 is_stmt 1 view -0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 269:Src/mc_tasks.c ****   {
 1425              		.loc 1 269 3 view .LVU380
 269:Src/mc_tasks.c ****   {
 1426              		.loc 1 269 20 is_stmt 0 view .LVU381
 1427 0000 1D4B     		ldr	r3, .L130
 1428 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 269:Src/mc_tasks.c ****   {
 1429              		.loc 1 269 6 view .LVU382
 1430 0004 012B     		cmp	r3, #1
 1431 0006 00D0     		beq	.L128
 1432 0008 7047     		bx	lr
 1433              	.L128:
 1434              	.LBB54:
 1435              	.LBI54:
 263:Src/mc_tasks.c **** {
 1436              		.loc 1 263 13 is_stmt 1 view .LVU383
 1437              	.LBB55:
 271:Src/mc_tasks.c ****     {
 1438              		.loc 1 271 5 view .LVU384
 1439              	.LBE55:
 1440              	.LBE54:
 264:Src/mc_tasks.c **** /* USER CODE BEGIN MC_Scheduler 0 */
 1441              		.loc 1 264 1 is_stmt 0 view .LVU385
 1442 000a 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 46


 1443              	.LCFI14:
 1444              		.cfi_def_cfa_offset 16
 1445              		.cfi_offset 4, -16
 1446              		.cfi_offset 5, -12
 1447              		.cfi_offset 6, -8
 1448              		.cfi_offset 14, -4
 1449              	.LBB58:
 1450              	.LBB56:
 271:Src/mc_tasks.c ****     {
 1451              		.loc 1 271 25 view .LVU386
 1452 000c 1B4C     		ldr	r4, .L130+4
 1453 000e 2388     		ldrh	r3, [r4]
 271:Src/mc_tasks.c ****     {
 1454              		.loc 1 271 7 view .LVU387
 1455 0010 93B1     		cbz	r3, .L108
 273:Src/mc_tasks.c ****     }
 1456              		.loc 1 273 7 is_stmt 1 view .LVU388
 273:Src/mc_tasks.c ****     }
 1457              		.loc 1 273 23 is_stmt 0 view .LVU389
 1458 0012 013B     		subs	r3, r3, #1
 1459 0014 2380     		strh	r3, [r4]	@ movhi
 1460              	.L109:
 311:Src/mc_tasks.c ****     {
 1461              		.loc 1 311 5 is_stmt 1 view .LVU390
 311:Src/mc_tasks.c ****     {
 1462              		.loc 1 311 31 is_stmt 0 view .LVU391
 1463 0016 1A4A     		ldr	r2, .L130+8
 1464 0018 1388     		ldrh	r3, [r2]
 1465 001a 9BB2     		uxth	r3, r3
 311:Src/mc_tasks.c ****     {
 1466              		.loc 1 311 7 view .LVU392
 1467 001c 1BB1     		cbz	r3, .L113
 313:Src/mc_tasks.c ****     }
 1468              		.loc 1 313 7 is_stmt 1 view .LVU393
 313:Src/mc_tasks.c ****     }
 1469              		.loc 1 313 29 is_stmt 0 view .LVU394
 1470 001e 1388     		ldrh	r3, [r2]
 1471 0020 013B     		subs	r3, r3, #1
 1472 0022 9BB2     		uxth	r3, r3
 1473 0024 1380     		strh	r3, [r2]	@ movhi
 1474              	.L113:
 318:Src/mc_tasks.c ****     if(hStopPermanencyCounterM1 > 0U)
 1475              		.loc 1 318 5 is_stmt 1 view .LVU395
 319:Src/mc_tasks.c ****     {
 1476              		.loc 1 319 5 view .LVU396
 319:Src/mc_tasks.c ****     {
 1477              		.loc 1 319 33 is_stmt 0 view .LVU397
 1478 0026 174A     		ldr	r2, .L130+12
 1479 0028 1388     		ldrh	r3, [r2]
 1480 002a 9BB2     		uxth	r3, r3
 319:Src/mc_tasks.c ****     {
 1481              		.loc 1 319 7 view .LVU398
 1482 002c 1BB1     		cbz	r3, .L105
 321:Src/mc_tasks.c ****     }
 1483              		.loc 1 321 7 is_stmt 1 view .LVU399
 321:Src/mc_tasks.c ****     }
 1484              		.loc 1 321 31 is_stmt 0 view .LVU400
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 47


 1485 002e 1388     		ldrh	r3, [r2]
 1486 0030 013B     		subs	r3, r3, #1
 1487 0032 9BB2     		uxth	r3, r3
 1488 0034 1380     		strh	r3, [r2]	@ movhi
 1489              	.LBE56:
 1490              	.LBE58:
 331:Src/mc_tasks.c ****   /* USER CODE BEGIN MC_Scheduler 2 */
 1491              		.loc 1 331 3 is_stmt 1 view .LVU401
 1492              	.L105:
 335:Src/mc_tasks.c **** 
 1493              		.loc 1 335 1 is_stmt 0 view .LVU402
 1494 0036 70BD     		pop	{r4, r5, r6, pc}
 1495              	.L108:
 1496              	.LBB59:
 1497              	.LBB57:
 277:Src/mc_tasks.c **** 
 1498              		.loc 1 277 7 is_stmt 1 view .LVU403
 282:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 1499              		.loc 1 282 47 is_stmt 0 view .LVU404
 1500 0038 134D     		ldr	r5, .L130+16
 277:Src/mc_tasks.c **** 
 1501              		.loc 1 277 7 view .LVU405
 1502 003a FFF7FEFF 		bl	TSK_MediumFrequencyTaskM1
 1503              	.LVL142:
 280:Src/mc_tasks.c **** 
 1504              		.loc 1 280 7 is_stmt 1 view .LVU406
 1505 003e FFF7FEFF 		bl	MC_APP_PostMediumFrequencyHook_M1
 1506              	.LVL143:
 282:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 1507              		.loc 1 282 7 view .LVU407
 282:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 1508              		.loc 1 282 47 is_stmt 0 view .LVU408
 1509 0042 2946     		mov	r1, r5
 1510 0044 51F80C0B 		ldr	r0, [r1], #12
 282:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 1511              		.loc 1 282 33 view .LVU409
 1512 0048 8368     		ldr	r3, [r0, #8]
 1513 004a 9847     		blx	r3
 1514              	.LVL144:
 282:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 1515              		.loc 1 282 31 view .LVU410
 1516 004c 6860     		str	r0, [r5, #4]
 284:Src/mc_tasks.c ****       {
 1517              		.loc 1 284 7 is_stmt 1 view .LVU411
 284:Src/mc_tasks.c ****       {
 1518              		.loc 1 284 10 is_stmt 0 view .LVU412
 1519 004e 30B1     		cbz	r0, .L111
 291:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 1520              		.loc 1 291 9 is_stmt 1 view .LVU413
 291:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 1521              		.loc 1 291 33 is_stmt 0 view .LVU414
 1522 0050 2946     		mov	r1, r5
 291:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 1523              		.loc 1 291 19 view .LVU415
 1524 0052 0A22     		movs	r2, #10
 291:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 1525              		.loc 1 291 33 view .LVU416
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 48


 1526 0054 51F8080B 		ldr	r0, [r1], #8
 291:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 1527              		.loc 1 291 19 view .LVU417
 1528 0058 0368     		ldr	r3, [r0]
 1529 005a 9847     		blx	r3
 1530              	.LVL145:
 291:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 1531              		.loc 1 291 12 view .LVU418
 1532 005c 10B9     		cbnz	r0, .L129
 1533              	.L111:
 309:Src/mc_tasks.c ****     }
 1534              		.loc 1 309 7 is_stmt 1 view .LVU419
 309:Src/mc_tasks.c ****     }
 1535              		.loc 1 309 24 is_stmt 0 view .LVU420
 1536 005e 0023     		movs	r3, #0
 1537 0060 2380     		strh	r3, [r4]	@ movhi
 1538 0062 D8E7     		b	.L109
 1539              	.L129:
 299:Src/mc_tasks.c ****           MCP_Over_UartA.pTransportLayer->fSendPacket(MCP_Over_UartA.pTransportLayer, MCP_Over_Uart
 1540              		.loc 1 299 11 is_stmt 1 view .LVU421
 1541 0064 2846     		mov	r0, r5
 1542 0066 FFF7FEFF 		bl	MCP_ReceivedPacket
 1543              	.LVL146:
 300:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 1544              		.loc 1 300 11 view .LVU422
 300:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 1545              		.loc 1 300 25 is_stmt 0 view .LVU423
 1546 006a 2868     		ldr	r0, [r5]
 300:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 1547              		.loc 1 300 11 view .LVU424
 1548 006c EA89     		ldrh	r2, [r5, #14]
 1549 006e 4668     		ldr	r6, [r0, #4]
 1550 0070 A968     		ldr	r1, [r5, #8]
 1551 0072 0A23     		movs	r3, #10
 1552 0074 B047     		blx	r6
 1553              	.LVL147:
 1554 0076 F2E7     		b	.L111
 1555              	.L131:
 1556              		.align	2
 1557              	.L130:
 1558 0078 00000000 		.word	.LANCHOR2
 1559 007c 00000000 		.word	.LANCHOR7
 1560 0080 00000000 		.word	.LANCHOR5
 1561 0084 00000000 		.word	.LANCHOR6
 1562 0088 00000000 		.word	MCP_Over_UartA
 1563              	.LBE57:
 1564              	.LBE59:
 1565              		.cfi_endproc
 1566              	.LFE1098:
 1568              		.section	.text.MC_RunMotorControlTasks,"ax",%progbits
 1569              		.align	1
 1570              		.p2align 2,,3
 1571              		.weak	MC_RunMotorControlTasks
 1572              		.syntax unified
 1573              		.thumb
 1574              		.thumb_func
 1576              	MC_RunMotorControlTasks:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 49


 1577              	.LFB1096:
 232:Src/mc_tasks.c ****   if (0U == bMCBootCompleted)
 1578              		.loc 1 232 1 is_stmt 1 view -0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 233:Src/mc_tasks.c ****   {
 1582              		.loc 1 233 3 view .LVU426
 232:Src/mc_tasks.c ****   if (0U == bMCBootCompleted)
 1583              		.loc 1 232 1 is_stmt 0 view .LVU427
 1584 0000 08B5     		push	{r3, lr}
 1585              	.LCFI15:
 1586              		.cfi_def_cfa_offset 8
 1587              		.cfi_offset 3, -8
 1588              		.cfi_offset 14, -4
 233:Src/mc_tasks.c ****   {
 1589              		.loc 1 233 10 view .LVU428
 1590 0002 034B     		ldr	r3, .L139
 1591 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 233:Src/mc_tasks.c ****   {
 1592              		.loc 1 233 6 view .LVU429
 1593 0006 03B9     		cbnz	r3, .L138
 242:Src/mc_tasks.c **** 
 1594              		.loc 1 242 1 view .LVU430
 1595 0008 08BD     		pop	{r3, pc}
 1596              	.L138:
 240:Src/mc_tasks.c ****   }
 1597              		.loc 1 240 5 is_stmt 1 view .LVU431
 1598 000a FFF7FEFF 		bl	MC_Scheduler
 1599              	.LVL148:
 242:Src/mc_tasks.c **** 
 1600              		.loc 1 242 1 is_stmt 0 view .LVU432
 1601 000e 08BD     		pop	{r3, pc}
 1602              	.L140:
 1603              		.align	2
 1604              	.L139:
 1605 0010 00000000 		.word	.LANCHOR2
 1606              		.cfi_endproc
 1607              	.LFE1096:
 1609              		.section	.text.TSK_HighFrequencyTask,"ax",%progbits
 1610              		.align	1
 1611              		.p2align 2,,3
 1612              		.weak	TSK_HighFrequencyTask
 1613              		.syntax unified
 1614              		.thumb
 1615              		.thumb_func
 1617              	TSK_HighFrequencyTask:
 1618              	.LFB1107:
 824:Src/mc_tasks.c **** 
 825:Src/mc_tasks.c **** #if defined (CCMRAM)
 826:Src/mc_tasks.c **** #if defined (__ICCARM__)
 827:Src/mc_tasks.c **** #pragma location = ".ccmram"
 828:Src/mc_tasks.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 829:Src/mc_tasks.c **** __attribute__((section (".ccmram")))
 830:Src/mc_tasks.c **** #endif
 831:Src/mc_tasks.c **** #endif
 832:Src/mc_tasks.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 50


 833:Src/mc_tasks.c **** /**
 834:Src/mc_tasks.c ****   * @brief  Executes the Motor Control duties that require a high frequency rate and a precise timi
 835:Src/mc_tasks.c ****   *
 836:Src/mc_tasks.c ****   *  This is mainly the FOC current control loop. It is executed depending on the state of the Moto
 837:Src/mc_tasks.c ****   * subsystem (see the state machine(s)).
 838:Src/mc_tasks.c ****   *
 839:Src/mc_tasks.c ****   * @retval Number of the  motor instance which FOC loop was executed.
 840:Src/mc_tasks.c ****   */
 841:Src/mc_tasks.c **** __weak uint8_t TSK_HighFrequencyTask(void)
 842:Src/mc_tasks.c **** {
 1619              		.loc 1 842 1 is_stmt 1 view -0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 32
 1622              		@ frame_needed = 0, uses_anonymous_args = 0
 843:Src/mc_tasks.c **** 
 844:Src/mc_tasks.c ****   uint16_t hFOCreturn;
 1623              		.loc 1 844 3 view .LVU434
 845:Src/mc_tasks.c ****   uint8_t bMotorNbr = 0;
 1624              		.loc 1 845 3 view .LVU435
 1625              	.LVL149:
 846:Src/mc_tasks.c ****   /* USER CODE BEGIN HighFrequencyTask 0 */
 847:Src/mc_tasks.c **** 
 848:Src/mc_tasks.c ****   /* USER CODE END HighFrequencyTask 0 */
 849:Src/mc_tasks.c **** 
 850:Src/mc_tasks.c ****   Observer_Inputs_t STO_Inputs; /* Only if sensorless main */
 1626              		.loc 1 850 3 view .LVU436
 851:Src/mc_tasks.c **** 
 852:Src/mc_tasks.c ****   STO_Inputs.Valfa_beta = FOCVars[M1].Valphabeta;  /* Only if sensorless */
 1627              		.loc 1 852 3 view .LVU437
 842:Src/mc_tasks.c **** 
 1628              		.loc 1 842 1 is_stmt 0 view .LVU438
 1629 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1630              	.LCFI16:
 1631              		.cfi_def_cfa_offset 32
 1632              		.cfi_offset 4, -32
 1633              		.cfi_offset 5, -28
 1634              		.cfi_offset 6, -24
 1635              		.cfi_offset 7, -20
 1636              		.cfi_offset 8, -16
 1637              		.cfi_offset 9, -12
 1638              		.cfi_offset 10, -8
 1639              		.cfi_offset 14, -4
 853:Src/mc_tasks.c ****   if (SWITCH_OVER == Mci[M1].State)
 1640              		.loc 1 853 29 view .LVU439
 1641 0004 DFF88881 		ldr	r8, .L164+4
 852:Src/mc_tasks.c ****   if (SWITCH_OVER == Mci[M1].State)
 1642              		.loc 1 852 25 view .LVU440
 1643 0008 604C     		ldr	r4, .L164
 1644              		.loc 1 853 6 view .LVU441
 1645 000a 98F82330 		ldrb	r3, [r8, #35]	@ zero_extendqisi2
 852:Src/mc_tasks.c ****   if (SWITCH_OVER == Mci[M1].State)
 1646              		.loc 1 852 25 view .LVU442
 1647 000e D4F81A00 		ldr	r0, [r4, #26]	@ unaligned
 842:Src/mc_tasks.c **** 
 1648              		.loc 1 842 1 view .LVU443
 1649 0012 88B0     		sub	sp, sp, #32
 1650              	.LCFI17:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 51


 1651              		.cfi_def_cfa_offset 64
 1652              		.loc 1 853 6 view .LVU444
 1653 0014 132B     		cmp	r3, #19
 852:Src/mc_tasks.c ****   if (SWITCH_OVER == Mci[M1].State)
 1654              		.loc 1 852 25 view .LVU445
 1655 0016 0590     		str	r0, [sp, #20]
 1656              		.loc 1 853 3 is_stmt 1 view .LVU446
 1657              		.loc 1 853 6 is_stmt 0 view .LVU447
 1658 0018 00F0AB80 		beq	.L158
 1659              	.L143:
 854:Src/mc_tasks.c ****   {
 855:Src/mc_tasks.c ****     if (!REMNG_RampCompleted(pREMNG[M1]))
 856:Src/mc_tasks.c ****     {
 857:Src/mc_tasks.c ****       FOCVars[M1].Iqdref.q = (int16_t)REMNG_Calc(pREMNG[M1]);
 858:Src/mc_tasks.c ****     }
 859:Src/mc_tasks.c ****     else
 860:Src/mc_tasks.c ****     {
 861:Src/mc_tasks.c ****       /* Nothing to do */
 862:Src/mc_tasks.c ****     }
 863:Src/mc_tasks.c ****   }
 864:Src/mc_tasks.c ****   else
 865:Src/mc_tasks.c ****   {
 866:Src/mc_tasks.c ****     /* Nothing to do */
 867:Src/mc_tasks.c ****   }
 1660              		.loc 1 867 3 is_stmt 1 view .LVU448
 868:Src/mc_tasks.c ****   /* USER CODE BEGIN HighFrequencyTask SINGLEDRIVE_1 */
 869:Src/mc_tasks.c **** 
 870:Src/mc_tasks.c ****   /* USER CODE END HighFrequencyTask SINGLEDRIVE_1 */
 871:Src/mc_tasks.c ****   hFOCreturn = FOC_CurrControllerM1();
 1661              		.loc 1 871 3 view .LVU449
 1662              	.LBB64:
 1663              	.LBI64:
 872:Src/mc_tasks.c ****   /* USER CODE BEGIN HighFrequencyTask SINGLEDRIVE_2 */
 873:Src/mc_tasks.c **** 
 874:Src/mc_tasks.c ****   /* USER CODE END HighFrequencyTask SINGLEDRIVE_2 */
 875:Src/mc_tasks.c ****   if(hFOCreturn == MC_DURATION)
 876:Src/mc_tasks.c ****   {
 877:Src/mc_tasks.c ****     MCI_FaultProcessing(&Mci[M1], MC_DURATION, 0);
 878:Src/mc_tasks.c ****   }
 879:Src/mc_tasks.c ****   else
 880:Src/mc_tasks.c ****   {
 881:Src/mc_tasks.c ****     bool IsAccelerationStageReached = RUC_FirstAccelerationStageReached(&RevUpControlM1);
 882:Src/mc_tasks.c ****     STO_Inputs.Ialfa_beta = FOCVars[M1].Ialphabeta; /* Only if sensorless */
 883:Src/mc_tasks.c ****     STO_Inputs.Vbus = VBS_GetAvBusVoltage_d(&(BusVoltageSensor_M1._Super)); /* Only for sensorless 
 884:Src/mc_tasks.c ****     (void)STO_PLL_CalcElAngle(&STO_PLL_M1, &STO_Inputs);
 885:Src/mc_tasks.c ****     STO_PLL_CalcAvrgElSpeedDpp(&STO_PLL_M1); /* Only in case of Sensor-less */
 886:Src/mc_tasks.c ****     if (false == IsAccelerationStageReached)
 887:Src/mc_tasks.c ****     {
 888:Src/mc_tasks.c ****       STO_ResetPLL(&STO_PLL_M1);
 889:Src/mc_tasks.c ****     }
 890:Src/mc_tasks.c ****     else
 891:Src/mc_tasks.c ****     {
 892:Src/mc_tasks.c ****       /* Nothing to do */
 893:Src/mc_tasks.c ****     }
 894:Src/mc_tasks.c ****     /* Only for sensor-less or open loop */
 895:Src/mc_tasks.c ****     if((START == Mci[M1].State) || (SWITCH_OVER == Mci[M1].State) || (RUN == Mci[M1].State))
 896:Src/mc_tasks.c ****     {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 52


 897:Src/mc_tasks.c ****       int16_t hObsAngle = SPD_GetElAngle(&STO_PLL_M1._Super);
 898:Src/mc_tasks.c ****       (void)VSS_CalcElAngle(&VirtualSpeedSensorM1, &hObsAngle);
 899:Src/mc_tasks.c ****     }
 900:Src/mc_tasks.c ****     /* USER CODE BEGIN HighFrequencyTask SINGLEDRIVE_3 */
 901:Src/mc_tasks.c **** 
 902:Src/mc_tasks.c ****     /* USER CODE END HighFrequencyTask SINGLEDRIVE_3 */
 903:Src/mc_tasks.c ****   }
 904:Src/mc_tasks.c ****   /* USER CODE BEGIN HighFrequencyTask 1 */
 905:Src/mc_tasks.c **** 
 906:Src/mc_tasks.c ****   /* USER CODE END HighFrequencyTask 1 */
 907:Src/mc_tasks.c **** 
 908:Src/mc_tasks.c ****   GLOBAL_TIMESTAMP++;
 909:Src/mc_tasks.c ****   if (0U == MCPA_UART_A.Mark)
 910:Src/mc_tasks.c ****   {
 911:Src/mc_tasks.c ****     /* Nothing to do */
 912:Src/mc_tasks.c ****   }
 913:Src/mc_tasks.c ****   else
 914:Src/mc_tasks.c ****   {
 915:Src/mc_tasks.c ****     MCPA_dataLog (&MCPA_UART_A);
 916:Src/mc_tasks.c ****   }
 917:Src/mc_tasks.c **** 
 918:Src/mc_tasks.c ****   return (bMotorNbr);
 919:Src/mc_tasks.c **** 
 920:Src/mc_tasks.c **** }
 921:Src/mc_tasks.c **** 
 922:Src/mc_tasks.c **** #if defined (CCMRAM)
 923:Src/mc_tasks.c **** #if defined (__ICCARM__)
 924:Src/mc_tasks.c **** #pragma location = ".ccmram"
 925:Src/mc_tasks.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 926:Src/mc_tasks.c **** __attribute__((section (".ccmram")))
 927:Src/mc_tasks.c **** #endif
 928:Src/mc_tasks.c **** #endif
 929:Src/mc_tasks.c **** /**
 930:Src/mc_tasks.c ****   * @brief It executes the core of FOC drive that is the controllers for Iqd
 931:Src/mc_tasks.c ****   *        currents regulation. Reference frame transformations are carried out
 932:Src/mc_tasks.c ****   *        accordingly to the active speed sensor. It must be called periodically
 933:Src/mc_tasks.c ****   *        when new motor currents have been converted
 934:Src/mc_tasks.c ****   * @param this related object of class CFOC.
 935:Src/mc_tasks.c ****   * @retval int16_t It returns MC_NO_FAULTS if the FOC has been ended before
 936:Src/mc_tasks.c ****   *         next PWM Update event, MC_DURATION otherwise
 937:Src/mc_tasks.c ****   */
 938:Src/mc_tasks.c **** inline uint16_t FOC_CurrControllerM1(void)
 1664              		.loc 1 938 17 view .LVU450
 1665              	.LBB65:
 939:Src/mc_tasks.c **** {
 940:Src/mc_tasks.c ****   qd_t Iqd, Vqd;
 1666              		.loc 1 940 3 view .LVU451
 941:Src/mc_tasks.c ****   ab_t Iab;
 1667              		.loc 1 941 3 view .LVU452
 942:Src/mc_tasks.c ****   alphabeta_t Ialphabeta, Valphabeta;
 1668              		.loc 1 942 3 view .LVU453
 943:Src/mc_tasks.c ****   int16_t hElAngle;
 1669              		.loc 1 943 3 view .LVU454
 944:Src/mc_tasks.c ****   uint16_t hCodeError;
 1670              		.loc 1 944 3 view .LVU455
 945:Src/mc_tasks.c ****   SpeednPosFdbk_Handle_t *speedHandle;
 1671              		.loc 1 945 3 view .LVU456
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 53


 946:Src/mc_tasks.c ****   MC_ControlMode_t mode;
 1672              		.loc 1 946 3 view .LVU457
 947:Src/mc_tasks.c **** 
 948:Src/mc_tasks.c ****   mode = MCI_GetControlMode( &Mci[M1] );
 1673              		.loc 1 948 3 view .LVU458
 1674              		.loc 1 948 10 is_stmt 0 view .LVU459
 1675 001c 5C48     		ldr	r0, .L164+4
 949:Src/mc_tasks.c ****   speedHandle = STC_GetSpeedSensor(pSTC[M1]);
 950:Src/mc_tasks.c ****   hElAngle = SPD_GetElAngle(speedHandle);
 951:Src/mc_tasks.c ****   hElAngle += SPD_GetInstElSpeedDpp(speedHandle)*PARK_ANGLE_COMPENSATION_FACTOR;
 952:Src/mc_tasks.c ****   PWMC_GetPhaseCurrents(pwmcHandle[M1], &Iab);
 1676              		.loc 1 952 3 view .LVU460
 1677 001e 5D4F     		ldr	r7, .L164+8
 948:Src/mc_tasks.c ****   speedHandle = STC_GetSpeedSensor(pSTC[M1]);
 1678              		.loc 1 948 10 view .LVU461
 1679 0020 FFF7FEFF 		bl	MCI_GetControlMode
 1680              	.LVL150:
 949:Src/mc_tasks.c ****   speedHandle = STC_GetSpeedSensor(pSTC[M1]);
 1681              		.loc 1 949 17 view .LVU462
 1682 0024 5C4B     		ldr	r3, .L164+12
 948:Src/mc_tasks.c ****   speedHandle = STC_GetSpeedSensor(pSTC[M1]);
 1683              		.loc 1 948 10 view .LVU463
 1684 0026 8146     		mov	r9, r0
 1685              	.LVL151:
 949:Src/mc_tasks.c ****   speedHandle = STC_GetSpeedSensor(pSTC[M1]);
 1686              		.loc 1 949 3 is_stmt 1 view .LVU464
 949:Src/mc_tasks.c ****   speedHandle = STC_GetSpeedSensor(pSTC[M1]);
 1687              		.loc 1 949 17 is_stmt 0 view .LVU465
 1688 0028 1868     		ldr	r0, [r3]
 1689 002a FFF7FEFF 		bl	STC_GetSpeedSensor
 1690              	.LVL152:
 1691 002e 0546     		mov	r5, r0
 1692              	.LVL153:
 950:Src/mc_tasks.c ****   hElAngle += SPD_GetInstElSpeedDpp(speedHandle)*PARK_ANGLE_COMPENSATION_FACTOR;
 1693              		.loc 1 950 3 is_stmt 1 view .LVU466
 950:Src/mc_tasks.c ****   hElAngle += SPD_GetInstElSpeedDpp(speedHandle)*PARK_ANGLE_COMPENSATION_FACTOR;
 1694              		.loc 1 950 14 is_stmt 0 view .LVU467
 1695 0030 FFF7FEFF 		bl	SPD_GetElAngle
 1696              	.LVL154:
 950:Src/mc_tasks.c ****   hElAngle += SPD_GetInstElSpeedDpp(speedHandle)*PARK_ANGLE_COMPENSATION_FACTOR;
 1697              		.loc 1 950 14 view .LVU468
 1698 0034 0646     		mov	r6, r0
 1699              	.LVL155:
 951:Src/mc_tasks.c ****   PWMC_GetPhaseCurrents(pwmcHandle[M1], &Iab);
 1700              		.loc 1 951 3 is_stmt 1 view .LVU469
 951:Src/mc_tasks.c ****   PWMC_GetPhaseCurrents(pwmcHandle[M1], &Iab);
 1701              		.loc 1 951 15 is_stmt 0 view .LVU470
 1702 0036 2846     		mov	r0, r5
 1703 0038 FFF7FEFF 		bl	SPD_GetInstElSpeedDpp
 1704              	.LVL156:
 1705              		.loc 1 952 3 is_stmt 1 view .LVU471
 1706 003c 02A9     		add	r1, sp, #8
 1707 003e 3868     		ldr	r0, [r7]
 1708 0040 FFF7FEFF 		bl	PWMC_GetPhaseCurrents
 1709              	.LVL157:
 953:Src/mc_tasks.c ****   Ialphabeta = MCM_Clarke(Iab);
 1710              		.loc 1 953 3 view .LVU472
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 54


 1711              		.loc 1 953 16 is_stmt 0 view .LVU473
 1712 0044 0298     		ldr	r0, [sp, #8]
 1713 0046 FFF7FEFF 		bl	MCM_Clarke
 1714              	.LVL158:
 954:Src/mc_tasks.c ****   Iqd = MCM_Park(Ialphabeta, hElAngle);
 1715              		.loc 1 954 9 view .LVU474
 1716 004a 3146     		mov	r1, r6
 953:Src/mc_tasks.c ****   Ialphabeta = MCM_Clarke(Iab);
 1717              		.loc 1 953 16 view .LVU475
 1718 004c 0390     		str	r0, [sp, #12]
 1719              		.loc 1 954 3 is_stmt 1 view .LVU476
 1720              		.loc 1 954 9 is_stmt 0 view .LVU477
 1721 004e FFF7FEFF 		bl	MCM_Park
 1722              	.LVL159:
 955:Src/mc_tasks.c ****   Vqd.q = PI_Controller(pPIDIq[M1], (int32_t)(FOCVars[M1].Iqdref.q) - Iqd.q);
 1723              		.loc 1 955 37 view .LVU478
 1724 0052 B4F91010 		ldrsh	r1, [r4, #16]
 954:Src/mc_tasks.c ****   Iqd = MCM_Park(Ialphabeta, hElAngle);
 1725              		.loc 1 954 9 view .LVU479
 1726 0056 0090     		str	r0, [sp]
 1727              		.loc 1 955 3 is_stmt 1 view .LVU480
 1728              		.loc 1 955 74 is_stmt 0 view .LVU481
 1729 0058 03B2     		sxth	r3, r0
 1730              		.loc 1 955 11 view .LVU482
 1731 005a C91A     		subs	r1, r1, r3
 1732 005c 4F4B     		ldr	r3, .L164+16
 1733 005e 1868     		ldr	r0, [r3]
 1734 0060 FFF7FEFF 		bl	PI_Controller
 1735              	.LVL160:
 956:Src/mc_tasks.c ****   Vqd.d = PI_Controller(pPIDId[M1], (int32_t)(FOCVars[M1].Iqdref.d) - Iqd.d);
 1736              		.loc 1 956 74 view .LVU483
 1737 0064 BDF90230 		ldrsh	r3, [sp, #2]
 1738              		.loc 1 956 37 view .LVU484
 1739 0068 B4F91210 		ldrsh	r1, [r4, #18]
 1740              		.loc 1 956 11 view .LVU485
 1741 006c C91A     		subs	r1, r1, r3
 1742 006e 4C4B     		ldr	r3, .L164+20
 955:Src/mc_tasks.c ****   Vqd.q = PI_Controller(pPIDIq[M1], (int32_t)(FOCVars[M1].Iqdref.q) - Iqd.q);
 1743              		.loc 1 955 11 view .LVU486
 1744 0070 8246     		mov	r10, r0
 1745              	.LVL161:
 1746              		.loc 1 956 3 is_stmt 1 view .LVU487
 1747              		.loc 1 956 11 is_stmt 0 view .LVU488
 1748 0072 1868     		ldr	r0, [r3]
 1749 0074 FFF7FEFF 		bl	PI_Controller
 1750              	.LVL162:
 957:Src/mc_tasks.c ****   if (mode == MCM_OPEN_LOOP_VOLTAGE_MODE)
 1751              		.loc 1 957 6 view .LVU489
 1752 0078 B9F1010F 		cmp	r9, #1
 956:Src/mc_tasks.c ****   Vqd.d = PI_Controller(pPIDId[M1], (int32_t)(FOCVars[M1].Iqdref.d) - Iqd.d);
 1753              		.loc 1 956 11 view .LVU490
 1754 007c 0346     		mov	r3, r0
 1755              	.LVL163:
 1756              		.loc 1 957 3 is_stmt 1 view .LVU491
 1757              		.loc 1 957 6 is_stmt 0 view .LVU492
 1758 007e 70D0     		beq	.L159
 1759              	.L145:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 55


 958:Src/mc_tasks.c ****   {
 959:Src/mc_tasks.c ****     Vqd = OL_VqdConditioning(pOpenLoop[M1]);
 960:Src/mc_tasks.c ****   }
 961:Src/mc_tasks.c ****   else
 962:Src/mc_tasks.c ****   {
 963:Src/mc_tasks.c ****     /* Nothing to do */
 964:Src/mc_tasks.c ****   }
 1760              		.loc 1 964 3 is_stmt 1 view .LVU493
 965:Src/mc_tasks.c ****   Vqd = Circle_Limitation(&CircleLimitationM1, Vqd);
 1761              		.loc 1 965 3 view .LVU494
 1762              		.loc 1 965 9 is_stmt 0 view .LVU495
 1763 0080 ADF80630 		strh	r3, [sp, #6]	@ movhi
 1764 0084 ADF804A0 		strh	r10, [sp, #4]	@ movhi
 1765 0088 0199     		ldr	r1, [sp, #4]
 1766 008a 4648     		ldr	r0, .L164+24
 1767 008c FFF7FEFF 		bl	Circle_Limitation
 1768              	.LVL164:
 1769              		.loc 1 965 9 view .LVU496
 1770 0090 0346     		mov	r3, r0
 966:Src/mc_tasks.c ****   hElAngle += SPD_GetInstElSpeedDpp(speedHandle)*REV_PARK_ANGLE_COMPENSATION_FACTOR;
 1771              		.loc 1 966 15 view .LVU497
 1772 0092 2846     		mov	r0, r5
 965:Src/mc_tasks.c ****   Vqd = Circle_Limitation(&CircleLimitationM1, Vqd);
 1773              		.loc 1 965 9 view .LVU498
 1774 0094 0FFA83F9 		sxth	r9, r3
 1775              	.LVL165:
 965:Src/mc_tasks.c ****   Vqd = Circle_Limitation(&CircleLimitationM1, Vqd);
 1776              		.loc 1 965 9 view .LVU499
 1777 0098 1D14     		asrs	r5, r3, #16
 1778              	.LVL166:
 1779              		.loc 1 966 3 is_stmt 1 view .LVU500
 965:Src/mc_tasks.c ****   Vqd = Circle_Limitation(&CircleLimitationM1, Vqd);
 1780              		.loc 1 965 9 is_stmt 0 view .LVU501
 1781 009a 0193     		str	r3, [sp, #4]
 1782              		.loc 1 966 15 view .LVU502
 1783 009c FFF7FEFF 		bl	SPD_GetInstElSpeedDpp
 1784              	.LVL167:
 967:Src/mc_tasks.c ****   Valphabeta = MCM_Rev_Park(Vqd, hElAngle);
 1785              		.loc 1 967 3 is_stmt 1 view .LVU503
 1786              		.loc 1 967 16 is_stmt 0 view .LVU504
 1787 00a0 3146     		mov	r1, r6
 1788 00a2 0198     		ldr	r0, [sp, #4]
 1789 00a4 FFF7FEFF 		bl	MCM_Rev_Park
 1790              	.LVL168:
 1791 00a8 0146     		mov	r1, r0
 968:Src/mc_tasks.c ****   hCodeError = PWMC_SetPhaseVoltage(pwmcHandle[M1], Valphabeta);
 1792              		.loc 1 968 16 view .LVU505
 1793 00aa 3868     		ldr	r0, [r7]
 967:Src/mc_tasks.c ****   Valphabeta = MCM_Rev_Park(Vqd, hElAngle);
 1794              		.loc 1 967 16 view .LVU506
 1795 00ac 0491     		str	r1, [sp, #16]
 1796              		.loc 1 968 3 is_stmt 1 view .LVU507
 1797              		.loc 1 968 16 is_stmt 0 view .LVU508
 1798 00ae FFF7FEFF 		bl	PWMC_SetPhaseVoltage
 1799              	.LVL169:
 969:Src/mc_tasks.c **** 
 970:Src/mc_tasks.c ****   FOCVars[M1].Vqd = Vqd;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 56


 971:Src/mc_tasks.c ****   FOCVars[M1].Iab = Iab;
 1800              		.loc 1 971 19 view .LVU509
 1801 00b2 029B     		ldr	r3, [sp, #8]
 1802 00b4 2360     		str	r3, [r4]
 968:Src/mc_tasks.c ****   hCodeError = PWMC_SetPhaseVoltage(pwmcHandle[M1], Valphabeta);
 1803              		.loc 1 968 16 view .LVU510
 1804 00b6 0146     		mov	r1, r0
 1805              	.LVL170:
 970:Src/mc_tasks.c ****   FOCVars[M1].Iab = Iab;
 1806              		.loc 1 970 3 is_stmt 1 view .LVU511
 972:Src/mc_tasks.c ****   FOCVars[M1].Ialphabeta = Ialphabeta;
 1807              		.loc 1 972 26 is_stmt 0 view .LVU512
 1808 00b8 039B     		ldr	r3, [sp, #12]
 973:Src/mc_tasks.c ****   FOCVars[M1].Iqd = Iqd;
 974:Src/mc_tasks.c ****   FOCVars[M1].Valphabeta = Valphabeta;
 1809              		.loc 1 974 26 view .LVU513
 1810 00ba 0498     		ldr	r0, [sp, #16]
 972:Src/mc_tasks.c ****   FOCVars[M1].Ialphabeta = Ialphabeta;
 1811              		.loc 1 972 26 view .LVU514
 1812 00bc 6360     		str	r3, [r4, #4]
 1813              	.LBE65:
 1814              	.LBE64:
 875:Src/mc_tasks.c ****   {
 1815              		.loc 1 875 5 view .LVU515
 1816 00be 0129     		cmp	r1, #1
 1817              	.LBB68:
 1818              	.LBB66:
 973:Src/mc_tasks.c ****   FOCVars[M1].Iqd = Iqd;
 1819              		.loc 1 973 19 view .LVU516
 1820 00c0 009B     		ldr	r3, [sp]
 970:Src/mc_tasks.c ****   FOCVars[M1].Iab = Iab;
 1821              		.loc 1 970 19 view .LVU517
 1822 00c2 A4F81690 		strh	r9, [r4, #22]	@ movhi
 1823 00c6 2583     		strh	r5, [r4, #24]	@ movhi
 971:Src/mc_tasks.c ****   FOCVars[M1].Ialphabeta = Ialphabeta;
 1824              		.loc 1 971 3 is_stmt 1 view .LVU518
 972:Src/mc_tasks.c ****   FOCVars[M1].Iqd = Iqd;
 1825              		.loc 1 972 3 view .LVU519
 973:Src/mc_tasks.c ****   FOCVars[M1].Valphabeta = Valphabeta;
 1826              		.loc 1 973 3 view .LVU520
 973:Src/mc_tasks.c ****   FOCVars[M1].Valphabeta = Valphabeta;
 1827              		.loc 1 973 19 is_stmt 0 view .LVU521
 1828 00c8 E360     		str	r3, [r4, #12]
 1829              		.loc 1 974 3 is_stmt 1 view .LVU522
 1830              		.loc 1 974 26 is_stmt 0 view .LVU523
 1831 00ca C4F81A00 		str	r0, [r4, #26]	@ unaligned
 975:Src/mc_tasks.c ****   FOCVars[M1].hElAngle = hElAngle;
 1832              		.loc 1 975 3 is_stmt 1 view .LVU524
 1833              		.loc 1 975 24 is_stmt 0 view .LVU525
 1834 00ce 2684     		strh	r6, [r4, #32]	@ movhi
 976:Src/mc_tasks.c **** 
 977:Src/mc_tasks.c ****   return (hCodeError);
 1835              		.loc 1 977 3 is_stmt 1 view .LVU526
 1836              	.LVL171:
 1837              		.loc 1 977 3 is_stmt 0 view .LVU527
 1838              	.LBE66:
 1839              	.LBE68:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 57


 875:Src/mc_tasks.c ****   {
 1840              		.loc 1 875 3 is_stmt 1 view .LVU528
 875:Src/mc_tasks.c ****   {
 1841              		.loc 1 875 5 is_stmt 0 view .LVU529
 1842 00d0 3CD0     		beq	.L160
 1843              	.LBB69:
 881:Src/mc_tasks.c ****     STO_Inputs.Ialfa_beta = FOCVars[M1].Ialphabeta; /* Only if sensorless */
 1844              		.loc 1 881 5 is_stmt 1 view .LVU530
 881:Src/mc_tasks.c ****     STO_Inputs.Ialfa_beta = FOCVars[M1].Ialphabeta; /* Only if sensorless */
 1845              		.loc 1 881 39 is_stmt 0 view .LVU531
 1846 00d2 3548     		ldr	r0, .L164+28
 1847 00d4 FFF7FEFF 		bl	RUC_FirstAccelerationStageReached
 1848              	.LVL172:
 882:Src/mc_tasks.c ****     STO_Inputs.Vbus = VBS_GetAvBusVoltage_d(&(BusVoltageSensor_M1._Super)); /* Only for sensorless 
 1849              		.loc 1 882 27 view .LVU532
 1850 00d8 6268     		ldr	r2, [r4, #4]
 1851 00da 0692     		str	r2, [sp, #24]
 881:Src/mc_tasks.c ****     STO_Inputs.Ialfa_beta = FOCVars[M1].Ialphabeta; /* Only if sensorless */
 1852              		.loc 1 881 39 view .LVU533
 1853 00dc 0346     		mov	r3, r0
 883:Src/mc_tasks.c ****     (void)STO_PLL_CalcElAngle(&STO_PLL_M1, &STO_Inputs);
 1854              		.loc 1 883 23 view .LVU534
 1855 00de 3348     		ldr	r0, .L164+32
 881:Src/mc_tasks.c ****     STO_Inputs.Ialfa_beta = FOCVars[M1].Ialphabeta; /* Only if sensorless */
 1856              		.loc 1 881 39 view .LVU535
 1857 00e0 1C46     		mov	r4, r3
 1858              	.LVL173:
 882:Src/mc_tasks.c ****     STO_Inputs.Vbus = VBS_GetAvBusVoltage_d(&(BusVoltageSensor_M1._Super)); /* Only for sensorless 
 1859              		.loc 1 882 5 is_stmt 1 view .LVU536
 883:Src/mc_tasks.c ****     (void)STO_PLL_CalcElAngle(&STO_PLL_M1, &STO_Inputs);
 1860              		.loc 1 883 5 view .LVU537
 883:Src/mc_tasks.c ****     (void)STO_PLL_CalcElAngle(&STO_PLL_M1, &STO_Inputs);
 1861              		.loc 1 883 23 is_stmt 0 view .LVU538
 1862 00e2 FFF7FEFF 		bl	VBS_GetAvBusVoltage_d
 1863              	.LVL174:
 884:Src/mc_tasks.c ****     STO_PLL_CalcAvrgElSpeedDpp(&STO_PLL_M1); /* Only in case of Sensor-less */
 1864              		.loc 1 884 11 view .LVU539
 1865 00e6 05A9     		add	r1, sp, #20
 883:Src/mc_tasks.c ****     (void)STO_PLL_CalcElAngle(&STO_PLL_M1, &STO_Inputs);
 1866              		.loc 1 883 23 view .LVU540
 1867 00e8 0346     		mov	r3, r0
 884:Src/mc_tasks.c ****     STO_PLL_CalcAvrgElSpeedDpp(&STO_PLL_M1); /* Only in case of Sensor-less */
 1868              		.loc 1 884 11 view .LVU541
 1869 00ea 3148     		ldr	r0, .L164+36
 883:Src/mc_tasks.c ****     (void)STO_PLL_CalcElAngle(&STO_PLL_M1, &STO_Inputs);
 1870              		.loc 1 883 21 view .LVU542
 1871 00ec ADF81C30 		strh	r3, [sp, #28]	@ movhi
 884:Src/mc_tasks.c ****     STO_PLL_CalcAvrgElSpeedDpp(&STO_PLL_M1); /* Only in case of Sensor-less */
 1872              		.loc 1 884 5 is_stmt 1 view .LVU543
 884:Src/mc_tasks.c ****     STO_PLL_CalcAvrgElSpeedDpp(&STO_PLL_M1); /* Only in case of Sensor-less */
 1873              		.loc 1 884 11 is_stmt 0 view .LVU544
 1874 00f0 FFF7FEFF 		bl	STO_PLL_CalcElAngle
 1875              	.LVL175:
 885:Src/mc_tasks.c ****     if (false == IsAccelerationStageReached)
 1876              		.loc 1 885 5 is_stmt 1 view .LVU545
 1877 00f4 2E48     		ldr	r0, .L164+36
 1878 00f6 FFF7FEFF 		bl	STO_PLL_CalcAvrgElSpeedDpp
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 58


 1879              	.LVL176:
 886:Src/mc_tasks.c ****     {
 1880              		.loc 1 886 5 view .LVU546
 886:Src/mc_tasks.c ****     {
 1881              		.loc 1 886 8 is_stmt 0 view .LVU547
 1882 00fa 9CB1     		cbz	r4, .L161
 893:Src/mc_tasks.c ****     /* Only for sensor-less or open loop */
 1883              		.loc 1 893 5 is_stmt 1 view .LVU548
 895:Src/mc_tasks.c ****     {
 1884              		.loc 1 895 5 view .LVU549
 895:Src/mc_tasks.c ****     {
 1885              		.loc 1 895 25 is_stmt 0 view .LVU550
 1886 00fc 98F82330 		ldrb	r3, [r8, #35]	@ zero_extendqisi2
 895:Src/mc_tasks.c ****     {
 1887              		.loc 1 895 7 view .LVU551
 1888 0100 03F0FD02 		and	r2, r3, #253
 1889 0104 042A     		cmp	r2, #4
 1890 0106 16D0     		beq	.L149
 1891              	.L163:
 895:Src/mc_tasks.c ****     {
 1892              		.loc 1 895 33 discriminator 1 view .LVU552
 1893 0108 132B     		cmp	r3, #19
 1894 010a 14D0     		beq	.L149
 1895              	.LVL177:
 1896              	.L147:
 895:Src/mc_tasks.c ****     {
 1897              		.loc 1 895 33 discriminator 1 view .LVU553
 1898              	.LBE69:
 908:Src/mc_tasks.c ****   if (0U == MCPA_UART_A.Mark)
 1899              		.loc 1 908 3 is_stmt 1 view .LVU554
 908:Src/mc_tasks.c ****   if (0U == MCPA_UART_A.Mark)
 1900              		.loc 1 908 19 is_stmt 0 view .LVU555
 1901 010c 294A     		ldr	r2, .L164+40
 909:Src/mc_tasks.c ****   {
 1902              		.loc 1 909 24 view .LVU556
 1903 010e 2A48     		ldr	r0, .L164+44
 908:Src/mc_tasks.c ****   if (0U == MCPA_UART_A.Mark)
 1904              		.loc 1 908 19 view .LVU557
 1905 0110 1368     		ldr	r3, [r2]
 909:Src/mc_tasks.c ****   {
 1906              		.loc 1 909 6 view .LVU558
 1907 0112 90F82910 		ldrb	r1, [r0, #41]	@ zero_extendqisi2
 908:Src/mc_tasks.c ****   if (0U == MCPA_UART_A.Mark)
 1908              		.loc 1 908 19 view .LVU559
 1909 0116 0133     		adds	r3, r3, #1
 1910 0118 1360     		str	r3, [r2]
 909:Src/mc_tasks.c ****   {
 1911              		.loc 1 909 3 is_stmt 1 view .LVU560
 909:Src/mc_tasks.c ****   {
 1912              		.loc 1 909 6 is_stmt 0 view .LVU561
 1913 011a E1B9     		cbnz	r1, .L162
 918:Src/mc_tasks.c **** 
 1914              		.loc 1 918 3 is_stmt 1 view .LVU562
 920:Src/mc_tasks.c **** 
 1915              		.loc 1 920 1 is_stmt 0 view .LVU563
 1916 011c 0020     		movs	r0, #0
 1917 011e 08B0     		add	sp, sp, #32
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 59


 1918              	.LCFI18:
 1919              		.cfi_remember_state
 1920              		.cfi_def_cfa_offset 32
 1921              		@ sp needed
 1922 0120 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1923              	.LVL178:
 1924              	.L161:
 1925              	.LCFI19:
 1926              		.cfi_restore_state
 1927              	.LBB71:
 888:Src/mc_tasks.c ****     }
 1928              		.loc 1 888 7 is_stmt 1 view .LVU564
 1929 0124 2248     		ldr	r0, .L164+36
 1930 0126 FFF7FEFF 		bl	STO_ResetPLL
 1931              	.LVL179:
 893:Src/mc_tasks.c ****     /* Only for sensor-less or open loop */
 1932              		.loc 1 893 5 view .LVU565
 895:Src/mc_tasks.c ****     {
 1933              		.loc 1 895 5 view .LVU566
 895:Src/mc_tasks.c ****     {
 1934              		.loc 1 895 25 is_stmt 0 view .LVU567
 1935 012a 98F82330 		ldrb	r3, [r8, #35]	@ zero_extendqisi2
 895:Src/mc_tasks.c ****     {
 1936              		.loc 1 895 7 view .LVU568
 1937 012e 03F0FD02 		and	r2, r3, #253
 1938 0132 042A     		cmp	r2, #4
 1939 0134 E8D1     		bne	.L163
 1940              	.L149:
 1941              	.LBB70:
 897:Src/mc_tasks.c ****       (void)VSS_CalcElAngle(&VirtualSpeedSensorM1, &hObsAngle);
 1942              		.loc 1 897 7 is_stmt 1 view .LVU569
 897:Src/mc_tasks.c ****       (void)VSS_CalcElAngle(&VirtualSpeedSensorM1, &hObsAngle);
 1943              		.loc 1 897 27 is_stmt 0 view .LVU570
 1944 0136 1E48     		ldr	r0, .L164+36
 1945 0138 FFF7FEFF 		bl	SPD_GetElAngle
 1946              	.LVL180:
 898:Src/mc_tasks.c ****     }
 1947              		.loc 1 898 13 view .LVU571
 1948 013c 04A9     		add	r1, sp, #16
 897:Src/mc_tasks.c ****       (void)VSS_CalcElAngle(&VirtualSpeedSensorM1, &hObsAngle);
 1949              		.loc 1 897 27 view .LVU572
 1950 013e 0346     		mov	r3, r0
 898:Src/mc_tasks.c ****     }
 1951              		.loc 1 898 13 view .LVU573
 1952 0140 1E48     		ldr	r0, .L164+48
 897:Src/mc_tasks.c ****       (void)VSS_CalcElAngle(&VirtualSpeedSensorM1, &hObsAngle);
 1953              		.loc 1 897 15 view .LVU574
 1954 0142 ADF81030 		strh	r3, [sp, #16]	@ movhi
 898:Src/mc_tasks.c ****     }
 1955              		.loc 1 898 7 is_stmt 1 view .LVU575
 898:Src/mc_tasks.c ****     }
 1956              		.loc 1 898 13 is_stmt 0 view .LVU576
 1957 0146 FFF7FEFF 		bl	VSS_CalcElAngle
 1958              	.LVL181:
 1959 014a DFE7     		b	.L147
 1960              	.LVL182:
 1961              	.L160:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 60


 898:Src/mc_tasks.c ****     }
 1962              		.loc 1 898 13 view .LVU577
 1963              	.LBE70:
 1964              	.LBE71:
 877:Src/mc_tasks.c ****   }
 1965              		.loc 1 877 5 is_stmt 1 view .LVU578
 1966 014c 1048     		ldr	r0, .L164+4
 1967 014e 0022     		movs	r2, #0
 1968 0150 FFF7FEFF 		bl	MCI_FaultProcessing
 1969              	.LVL183:
 877:Src/mc_tasks.c ****   }
 1970              		.loc 1 877 5 is_stmt 0 view .LVU579
 1971 0154 DAE7     		b	.L147
 1972              	.L162:
 915:Src/mc_tasks.c ****   }
 1973              		.loc 1 915 5 is_stmt 1 view .LVU580
 1974 0156 FFF7FEFF 		bl	MCPA_dataLog
 1975              	.LVL184:
 918:Src/mc_tasks.c **** 
 1976              		.loc 1 918 3 view .LVU581
 920:Src/mc_tasks.c **** 
 1977              		.loc 1 920 1 is_stmt 0 view .LVU582
 1978 015a 0020     		movs	r0, #0
 1979 015c 08B0     		add	sp, sp, #32
 1980              	.LCFI20:
 1981              		.cfi_remember_state
 1982              		.cfi_def_cfa_offset 32
 1983              		@ sp needed
 1984 015e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1985              	.LVL185:
 1986              	.L159:
 1987              	.LCFI21:
 1988              		.cfi_restore_state
 1989              	.LBB72:
 1990              	.LBB67:
 959:Src/mc_tasks.c ****   }
 1991              		.loc 1 959 5 is_stmt 1 view .LVU583
 959:Src/mc_tasks.c ****   }
 1992              		.loc 1 959 39 is_stmt 0 view .LVU584
 1993 0162 174B     		ldr	r3, .L164+52
 1994              	.LVL186:
 959:Src/mc_tasks.c ****   }
 1995              		.loc 1 959 11 view .LVU585
 1996 0164 1868     		ldr	r0, [r3]
 1997 0166 FFF7FEFF 		bl	OL_VqdConditioning
 1998              	.LVL187:
 1999 016a 0FFA80FA 		sxth	r10, r0
 2000              	.LVL188:
 959:Src/mc_tasks.c ****   }
 2001              		.loc 1 959 11 view .LVU586
 2002 016e 0314     		asrs	r3, r0, #16
 2003              	.LVL189:
 959:Src/mc_tasks.c ****   }
 2004              		.loc 1 959 11 view .LVU587
 2005 0170 86E7     		b	.L145
 2006              	.LVL190:
 2007              	.L158:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 61


 959:Src/mc_tasks.c ****   }
 2008              		.loc 1 959 11 view .LVU588
 2009              	.LBE67:
 2010              	.LBE72:
 855:Src/mc_tasks.c ****     {
 2011              		.loc 1 855 5 is_stmt 1 view .LVU589
 855:Src/mc_tasks.c ****     {
 2012              		.loc 1 855 36 is_stmt 0 view .LVU590
 2013 0172 144D     		ldr	r5, .L164+56
 855:Src/mc_tasks.c ****     {
 2014              		.loc 1 855 10 view .LVU591
 2015 0174 2868     		ldr	r0, [r5]
 2016 0176 FFF7FEFF 		bl	REMNG_RampCompleted
 2017              	.LVL191:
 855:Src/mc_tasks.c ****     {
 2018              		.loc 1 855 8 view .LVU592
 2019 017a 0028     		cmp	r0, #0
 2020 017c 7FF44EAF 		bne	.L143
 857:Src/mc_tasks.c ****     }
 2021              		.loc 1 857 7 is_stmt 1 view .LVU593
 857:Src/mc_tasks.c ****     }
 2022              		.loc 1 857 39 is_stmt 0 view .LVU594
 2023 0180 2868     		ldr	r0, [r5]
 2024 0182 FFF7FEFF 		bl	REMNG_Calc
 2025              	.LVL192:
 857:Src/mc_tasks.c ****     }
 2026              		.loc 1 857 30 view .LVU595
 2027 0186 2082     		strh	r0, [r4, #16]	@ movhi
 2028 0188 48E7     		b	.L143
 2029              	.L165:
 2030 018a 00BF     		.align	2
 2031              	.L164:
 2032 018c 00000000 		.word	.LANCHOR0
 2033 0190 00000000 		.word	Mci
 2034 0194 00000000 		.word	.LANCHOR1
 2035 0198 00000000 		.word	pSTC
 2036 019c 00000000 		.word	pPIDIq
 2037 01a0 00000000 		.word	pPIDId
 2038 01a4 00000000 		.word	CircleLimitationM1
 2039 01a8 00000000 		.word	RevUpControlM1
 2040 01ac 00000000 		.word	BusVoltageSensor_M1
 2041 01b0 00000000 		.word	STO_PLL_M1
 2042 01b4 00000000 		.word	GLOBAL_TIMESTAMP
 2043 01b8 00000000 		.word	MCPA_UART_A
 2044 01bc 00000000 		.word	VirtualSpeedSensorM1
 2045 01c0 00000000 		.word	.LANCHOR3
 2046 01c4 00000000 		.word	.LANCHOR4
 2047              		.cfi_endproc
 2048              	.LFE1107:
 2050              		.section	.text.TSK_SafetyTask_PWMOFF,"ax",%progbits
 2051              		.align	1
 2052              		.p2align 2,,3
 2053              		.weak	TSK_SafetyTask_PWMOFF
 2054              		.syntax unified
 2055              		.thumb
 2056              		.thumb_func
 2058              	TSK_SafetyTask_PWMOFF:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 62


 2059              	.LVL193:
 2060              	.LFB1110:
 978:Src/mc_tasks.c **** }
 979:Src/mc_tasks.c **** 
 980:Src/mc_tasks.c **** /**
 981:Src/mc_tasks.c ****   * @brief  Executes safety checks (e.g. bus voltage and temperature) for all drive instances.
 982:Src/mc_tasks.c ****   *
 983:Src/mc_tasks.c ****   * Faults flags are updated here.
 984:Src/mc_tasks.c ****   */
 985:Src/mc_tasks.c **** __weak void TSK_SafetyTask(void)
 986:Src/mc_tasks.c **** {
 987:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 0 */
 988:Src/mc_tasks.c **** 
 989:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask 0 */
 990:Src/mc_tasks.c ****   if (1U == bMCBootCompleted)
 991:Src/mc_tasks.c ****   {
 992:Src/mc_tasks.c ****     TSK_SafetyTask_PWMOFF(M1);
 993:Src/mc_tasks.c ****     /* User conversion execution */
 994:Src/mc_tasks.c ****     RCM_ExecUserConv();
 995:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 1 */
 996:Src/mc_tasks.c **** 
 997:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask 1 */
 998:Src/mc_tasks.c ****   }
 999:Src/mc_tasks.c ****   else
1000:Src/mc_tasks.c ****   {
1001:Src/mc_tasks.c ****     /* Nothing to do */
1002:Src/mc_tasks.c ****   }
1003:Src/mc_tasks.c **** }
1004:Src/mc_tasks.c **** 
1005:Src/mc_tasks.c **** /**
1006:Src/mc_tasks.c ****   * @brief  Safety task implementation if  MC.M1_ON_OVER_VOLTAGE == TURN_OFF_PWM.
1007:Src/mc_tasks.c ****   * @param  bMotor Motor reference number defined
1008:Src/mc_tasks.c ****   *         \link Motors_reference_number here \endlink.
1009:Src/mc_tasks.c ****   */
1010:Src/mc_tasks.c **** __weak void TSK_SafetyTask_PWMOFF(uint8_t bMotor)
1011:Src/mc_tasks.c **** {
 2061              		.loc 1 1011 1 is_stmt 1 view -0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 8
 2064              		@ frame_needed = 0, uses_anonymous_args = 0
1012:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 0 */
1013:Src/mc_tasks.c **** 
1014:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask_PWMOFF 0 */
1015:Src/mc_tasks.c ****   uint16_t CodeReturn = MC_NO_ERROR;
 2065              		.loc 1 1015 3 view .LVU597
1016:Src/mc_tasks.c ****   const uint16_t errMask[NBR_OF_MOTORS] = {VBUS_TEMP_ERR_MASK};
 2066              		.loc 1 1016 3 view .LVU598
1017:Src/mc_tasks.c ****   /* Check for fault if FW protection is activated. It returns MC_OVER_TEMP or MC_NO_ERROR */
1018:Src/mc_tasks.c ****   if (M1 == bMotor)
 2067              		.loc 1 1018 3 view .LVU599
1011:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 0 */
 2068              		.loc 1 1011 1 is_stmt 0 view .LVU600
 2069 0000 70B5     		push	{r4, r5, r6, lr}
 2070              	.LCFI22:
 2071              		.cfi_def_cfa_offset 16
 2072              		.cfi_offset 4, -16
 2073              		.cfi_offset 5, -12
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 63


 2074              		.cfi_offset 6, -8
 2075              		.cfi_offset 14, -4
 2076              		.loc 1 1018 6 view .LVU601
 2077 0002 0446     		mov	r4, r0
1011:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 0 */
 2078              		.loc 1 1011 1 view .LVU602
 2079 0004 82B0     		sub	sp, sp, #8
 2080              	.LCFI23:
 2081              		.cfi_def_cfa_offset 24
 2082              		.loc 1 1018 6 view .LVU603
 2083 0006 B8B1     		cbz	r0, .L175
1019:Src/mc_tasks.c ****   {
1020:Src/mc_tasks.c ****     uint16_t rawValueM1 = RCM_ExecRegularConv(&TempRegConv_M1);
1021:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & NTC_CalcAvTemp(&TempSensor_M1, rawValueM1);
1022:Src/mc_tasks.c ****   }
1023:Src/mc_tasks.c ****   else
1024:Src/mc_tasks.c ****   {
1025:Src/mc_tasks.c ****     /* Nothing to do */
1026:Src/mc_tasks.c ****   }
 2084              		.loc 1 1026 3 is_stmt 1 view .LVU604
1027:Src/mc_tasks.c ****   CodeReturn |= PWMC_IsFaultOccurred(pwmcHandle[bMotor]);     /* check for fault. It return MC_OVER
 2085              		.loc 1 1027 3 view .LVU605
 2086              		.loc 1 1027 17 is_stmt 0 view .LVU606
 2087 0008 254D     		ldr	r5, .L178
 2088 000a 55F82000 		ldr	r0, [r5, r0, lsl #2]
 2089              	.LVL194:
 2090              		.loc 1 1027 17 view .LVU607
 2091 000e FFF7FEFF 		bl	PWMC_IsFaultOccurred
 2092              	.LVL195:
1028:Src/mc_tasks.c ****                                                     (for STM32F30x can return MC_OVER_VOLT in case 
1029:Src/mc_tasks.c ****   if (M1 == bMotor)
1030:Src/mc_tasks.c ****   {
1031:Src/mc_tasks.c ****     uint16_t rawValueM1 =  RCM_ExecRegularConv(&VbusRegConv_M1);
1032:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & RVBS_CalcAvVbus(&BusVoltageSensor_M1, rawValueM1);
1033:Src/mc_tasks.c ****   }
1034:Src/mc_tasks.c ****   else
1035:Src/mc_tasks.c ****   {
1036:Src/mc_tasks.c ****     /* Nothing to do */
1037:Src/mc_tasks.c ****   }
1038:Src/mc_tasks.c ****   MCI_FaultProcessing(&Mci[bMotor], CodeReturn, ~CodeReturn); /* Process faults */
 2093              		.loc 1 1038 3 view .LVU608
 2094 0012 244B     		ldr	r3, .L178+4
 2095 0014 04EB8402 		add	r2, r4, r4, lsl #2
 2096 0018 04EB4202 		add	r2, r4, r2, lsl #1
1027:Src/mc_tasks.c ****   CodeReturn |= PWMC_IsFaultOccurred(pwmcHandle[bMotor]);     /* check for fault. It return MC_OVER
 2097              		.loc 1 1027 17 view .LVU609
 2098 001c 0146     		mov	r1, r0
 2099              	.LVL196:
1029:Src/mc_tasks.c ****   {
 2100              		.loc 1 1029 3 is_stmt 1 view .LVU610
 2101              		.loc 1 1038 3 is_stmt 0 view .LVU611
 2102 001e 03EB8200 		add	r0, r3, r2, lsl #2
 2103              	.L170:
1037:Src/mc_tasks.c ****   MCI_FaultProcessing(&Mci[bMotor], CodeReturn, ~CodeReturn); /* Process faults */
 2104              		.loc 1 1037 3 is_stmt 1 view .LVU612
 2105              		.loc 1 1038 3 view .LVU613
 2106 0022 CA43     		mvns	r2, r1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 64


 2107 0024 92B2     		uxth	r2, r2
 2108 0026 0190     		str	r0, [sp, #4]
 2109 0028 FFF7FEFF 		bl	MCI_FaultProcessing
 2110              	.LVL197:
1039:Src/mc_tasks.c **** 
1040:Src/mc_tasks.c ****   if (MCI_GetFaultState(&Mci[bMotor]) != (uint32_t)MC_NO_FAULTS)
 2111              		.loc 1 1040 3 view .LVU614
 2112              		.loc 1 1040 7 is_stmt 0 view .LVU615
 2113 002c 0198     		ldr	r0, [sp, #4]
 2114 002e FFF7FEFF 		bl	MCI_GetFaultState
 2115              	.LVL198:
 2116              		.loc 1 1040 6 view .LVU616
 2117 0032 F0B9     		cbnz	r0, .L176
1041:Src/mc_tasks.c ****   {
1042:Src/mc_tasks.c ****     PWMC_SwitchOffPWM(pwmcHandle[bMotor]);
1043:Src/mc_tasks.c ****     if (MCPA_UART_A.Mark != 0U)
1044:Src/mc_tasks.c ****     {
1045:Src/mc_tasks.c ****       MCPA_flushDataLog (&MCPA_UART_A);
1046:Src/mc_tasks.c ****     }
1047:Src/mc_tasks.c ****     else
1048:Src/mc_tasks.c ****     {
1049:Src/mc_tasks.c ****       /* Nothing to do */
1050:Src/mc_tasks.c ****     }
1051:Src/mc_tasks.c ****     FOC_Clear(bMotor);
1052:Src/mc_tasks.c ****     PQD_Clear(pMPM[bMotor]); //cstat !MISRAC2012-Rule-11.3
1053:Src/mc_tasks.c ****     /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 1 */
1054:Src/mc_tasks.c **** 
1055:Src/mc_tasks.c ****     /* USER CODE END TSK_SafetyTask_PWMOFF 1 */
1056:Src/mc_tasks.c ****   }
1057:Src/mc_tasks.c ****   else
1058:Src/mc_tasks.c ****   {
1059:Src/mc_tasks.c ****     /* No errors */
1060:Src/mc_tasks.c ****   }
1061:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 3 */
1062:Src/mc_tasks.c **** 
1063:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask_PWMOFF 3 */
1064:Src/mc_tasks.c **** }
 2118              		.loc 1 1064 1 view .LVU617
 2119 0034 02B0     		add	sp, sp, #8
 2120              	.LCFI24:
 2121              		.cfi_remember_state
 2122              		.cfi_def_cfa_offset 16
 2123              		@ sp needed
 2124 0036 70BD     		pop	{r4, r5, r6, pc}
 2125              	.LVL199:
 2126              	.L175:
 2127              	.LCFI25:
 2128              		.cfi_restore_state
 2129              	.LBB73:
1020:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & NTC_CalcAvTemp(&TempSensor_M1, rawValueM1);
 2130              		.loc 1 1020 5 is_stmt 1 view .LVU618
1020:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & NTC_CalcAvTemp(&TempSensor_M1, rawValueM1);
 2131              		.loc 1 1020 27 is_stmt 0 view .LVU619
 2132 0038 1B48     		ldr	r0, .L178+8
 2133              	.LVL200:
1020:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & NTC_CalcAvTemp(&TempSensor_M1, rawValueM1);
 2134              		.loc 1 1020 27 view .LVU620
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 65


 2135              	.LBE73:
1027:Src/mc_tasks.c ****                                                     (for STM32F30x can return MC_OVER_VOLT in case 
 2136              		.loc 1 1027 17 view .LVU621
 2137 003a 194D     		ldr	r5, .L178
 2138              	.LBB74:
1020:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & NTC_CalcAvTemp(&TempSensor_M1, rawValueM1);
 2139              		.loc 1 1020 27 view .LVU622
 2140 003c FFF7FEFF 		bl	RCM_ExecRegularConv
 2141              	.LVL201:
 2142 0040 0146     		mov	r1, r0
 2143              	.LVL202:
1021:Src/mc_tasks.c ****   }
 2144              		.loc 1 1021 5 is_stmt 1 view .LVU623
1021:Src/mc_tasks.c ****   }
 2145              		.loc 1 1021 37 is_stmt 0 view .LVU624
 2146 0042 1A48     		ldr	r0, .L178+12
 2147 0044 FFF7FEFF 		bl	NTC_CalcAvTemp
 2148              	.LVL203:
1021:Src/mc_tasks.c ****   }
 2149              		.loc 1 1021 37 view .LVU625
 2150 0048 0646     		mov	r6, r0
 2151              	.LVL204:
1021:Src/mc_tasks.c ****   }
 2152              		.loc 1 1021 37 view .LVU626
 2153              	.LBE74:
1026:Src/mc_tasks.c ****   CodeReturn |= PWMC_IsFaultOccurred(pwmcHandle[bMotor]);     /* check for fault. It return MC_OVER
 2154              		.loc 1 1026 3 is_stmt 1 view .LVU627
1027:Src/mc_tasks.c ****                                                     (for STM32F30x can return MC_OVER_VOLT in case 
 2155              		.loc 1 1027 3 view .LVU628
1027:Src/mc_tasks.c ****                                                     (for STM32F30x can return MC_OVER_VOLT in case 
 2156              		.loc 1 1027 17 is_stmt 0 view .LVU629
 2157 004a 2868     		ldr	r0, [r5]
 2158 004c FFF7FEFF 		bl	PWMC_IsFaultOccurred
 2159              	.LVL205:
 2160              	.LBB75:
1021:Src/mc_tasks.c ****   }
 2161              		.loc 1 1021 35 view .LVU630
 2162 0050 06F00E06 		and	r6, r6, #14
 2163              	.LVL206:
1021:Src/mc_tasks.c ****   }
 2164              		.loc 1 1021 35 view .LVU631
 2165              	.LBE75:
1027:Src/mc_tasks.c ****                                                     (for STM32F30x can return MC_OVER_VOLT in case 
 2166              		.loc 1 1027 14 view .LVU632
 2167 0054 40EA0601 		orr	r1, r0, r6
 2168              	.LBB76:
1031:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & RVBS_CalcAvVbus(&BusVoltageSensor_M1, rawValueM1);
 2169              		.loc 1 1031 28 view .LVU633
 2170 0058 1548     		ldr	r0, .L178+16
 2171              	.LBE76:
1027:Src/mc_tasks.c ****                                                     (for STM32F30x can return MC_OVER_VOLT in case 
 2172              		.loc 1 1027 14 view .LVU634
 2173 005a 8EB2     		uxth	r6, r1
 2174              	.LVL207:
1029:Src/mc_tasks.c ****   {
 2175              		.loc 1 1029 3 is_stmt 1 view .LVU635
 2176              	.LBB77:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 66


1031:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & RVBS_CalcAvVbus(&BusVoltageSensor_M1, rawValueM1);
 2177              		.loc 1 1031 5 view .LVU636
1031:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & RVBS_CalcAvVbus(&BusVoltageSensor_M1, rawValueM1);
 2178              		.loc 1 1031 28 is_stmt 0 view .LVU637
 2179 005c FFF7FEFF 		bl	RCM_ExecRegularConv
 2180              	.LVL208:
 2181 0060 0146     		mov	r1, r0
 2182              	.LVL209:
1032:Src/mc_tasks.c ****   }
 2183              		.loc 1 1032 5 is_stmt 1 view .LVU638
1032:Src/mc_tasks.c ****   }
 2184              		.loc 1 1032 37 is_stmt 0 view .LVU639
 2185 0062 1448     		ldr	r0, .L178+20
 2186 0064 FFF7FEFF 		bl	RVBS_CalcAvVbus
 2187              	.LVL210:
1032:Src/mc_tasks.c ****   }
 2188              		.loc 1 1032 35 view .LVU640
 2189 0068 00F00E01 		and	r1, r0, #14
1032:Src/mc_tasks.c ****   }
 2190              		.loc 1 1032 16 view .LVU641
 2191 006c 3143     		orrs	r1, r1, r6
 2192              	.LVL211:
1032:Src/mc_tasks.c ****   }
 2193              		.loc 1 1032 16 view .LVU642
 2194              	.LBE77:
 2195 006e 0D48     		ldr	r0, .L178+4
 2196 0070 D7E7     		b	.L170
 2197              	.LVL212:
 2198              	.L176:
1042:Src/mc_tasks.c ****     if (MCPA_UART_A.Mark != 0U)
 2199              		.loc 1 1042 5 is_stmt 1 view .LVU643
 2200 0072 55F82400 		ldr	r0, [r5, r4, lsl #2]
 2201 0076 FFF7FEFF 		bl	PWMC_SwitchOffPWM
 2202              	.LVL213:
1043:Src/mc_tasks.c ****     {
 2203              		.loc 1 1043 5 view .LVU644
1043:Src/mc_tasks.c ****     {
 2204              		.loc 1 1043 20 is_stmt 0 view .LVU645
 2205 007a 0F48     		ldr	r0, .L178+24
1043:Src/mc_tasks.c ****     {
 2206              		.loc 1 1043 8 view .LVU646
 2207 007c 90F82930 		ldrb	r3, [r0, #41]	@ zero_extendqisi2
 2208 0080 53B9     		cbnz	r3, .L177
 2209              	.L169:
1050:Src/mc_tasks.c ****     FOC_Clear(bMotor);
 2210              		.loc 1 1050 5 is_stmt 1 view .LVU647
1051:Src/mc_tasks.c ****     PQD_Clear(pMPM[bMotor]); //cstat !MISRAC2012-Rule-11.3
 2211              		.loc 1 1051 5 view .LVU648
 2212 0082 2046     		mov	r0, r4
 2213 0084 FFF7FEFF 		bl	FOC_Clear
 2214              	.LVL214:
1052:Src/mc_tasks.c ****     /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 1 */
 2215              		.loc 1 1052 5 view .LVU649
 2216 0088 0C4B     		ldr	r3, .L178+28
 2217 008a 53F82400 		ldr	r0, [r3, r4, lsl #2]
 2218              		.loc 1 1064 1 is_stmt 0 view .LVU650
 2219 008e 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 67


 2220              	.LCFI26:
 2221              		.cfi_remember_state
 2222              		.cfi_def_cfa_offset 16
 2223              		@ sp needed
 2224 0090 BDE87040 		pop	{r4, r5, r6, lr}
 2225              	.LCFI27:
 2226              		.cfi_restore 14
 2227              		.cfi_restore 6
 2228              		.cfi_restore 5
 2229              		.cfi_restore 4
 2230              		.cfi_def_cfa_offset 0
1052:Src/mc_tasks.c ****     /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 1 */
 2231              		.loc 1 1052 5 view .LVU651
 2232 0094 FFF7FEBF 		b	PQD_Clear
 2233              	.LVL215:
 2234              	.L177:
 2235              	.LCFI28:
 2236              		.cfi_restore_state
1045:Src/mc_tasks.c ****     }
 2237              		.loc 1 1045 7 is_stmt 1 view .LVU652
 2238 0098 FFF7FEFF 		bl	MCPA_flushDataLog
 2239              	.LVL216:
 2240 009c F1E7     		b	.L169
 2241              	.L179:
 2242 009e 00BF     		.align	2
 2243              	.L178:
 2244 00a0 00000000 		.word	.LANCHOR1
 2245 00a4 00000000 		.word	Mci
 2246 00a8 00000000 		.word	TempRegConv_M1
 2247 00ac 00000000 		.word	TempSensor_M1
 2248 00b0 00000000 		.word	VbusRegConv_M1
 2249 00b4 00000000 		.word	BusVoltageSensor_M1
 2250 00b8 00000000 		.word	MCPA_UART_A
 2251 00bc 00000000 		.word	pMPM
 2252              		.cfi_endproc
 2253              	.LFE1110:
 2255              		.section	.text.TSK_SafetyTask,"ax",%progbits
 2256              		.align	1
 2257              		.p2align 2,,3
 2258              		.weak	TSK_SafetyTask
 2259              		.syntax unified
 2260              		.thumb
 2261              		.thumb_func
 2263              	TSK_SafetyTask:
 2264              	.LFB1109:
 986:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 0 */
 2265              		.loc 1 986 1 view -0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 990:Src/mc_tasks.c ****   {
 2269              		.loc 1 990 3 view .LVU654
 986:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 0 */
 2270              		.loc 1 986 1 is_stmt 0 view .LVU655
 2271 0000 08B5     		push	{r3, lr}
 2272              	.LCFI29:
 2273              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 68


 2274              		.cfi_offset 3, -8
 2275              		.cfi_offset 14, -4
 990:Src/mc_tasks.c ****   {
 2276              		.loc 1 990 10 view .LVU656
 2277 0002 064B     		ldr	r3, .L184
 2278 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 990:Src/mc_tasks.c ****   {
 2279              		.loc 1 990 6 view .LVU657
 2280 0006 012B     		cmp	r3, #1
 2281 0008 00D0     		beq	.L183
1003:Src/mc_tasks.c **** 
 2282              		.loc 1 1003 1 view .LVU658
 2283 000a 08BD     		pop	{r3, pc}
 2284              	.L183:
 2285              	.LBB80:
 2286              	.LBI80:
 985:Src/mc_tasks.c **** {
 2287              		.loc 1 985 13 is_stmt 1 view .LVU659
 2288              	.LBB81:
 992:Src/mc_tasks.c ****     /* User conversion execution */
 2289              		.loc 1 992 5 view .LVU660
 2290 000c 0020     		movs	r0, #0
 2291 000e FFF7FEFF 		bl	TSK_SafetyTask_PWMOFF
 2292              	.LVL217:
 994:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 1 */
 2293              		.loc 1 994 5 view .LVU661
 2294              	.LBE81:
 2295              	.LBE80:
1003:Src/mc_tasks.c **** 
 2296              		.loc 1 1003 1 is_stmt 0 view .LVU662
 2297 0012 BDE80840 		pop	{r3, lr}
 2298              	.LCFI30:
 2299              		.cfi_restore 14
 2300              		.cfi_restore 3
 2301              		.cfi_def_cfa_offset 0
 2302              	.LBB83:
 2303              	.LBB82:
 994:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 1 */
 2304              		.loc 1 994 5 view .LVU663
 2305 0016 FFF7FEBF 		b	RCM_ExecUserConv
 2306              	.LVL218:
 2307              	.L185:
 2308 001a 00BF     		.align	2
 2309              	.L184:
 2310 001c 00000000 		.word	.LANCHOR2
 2311              	.LBE82:
 2312              	.LBE83:
 2313              		.cfi_endproc
 2314              	.LFE1109:
 2316              		.section	.text.GetMCI,"ax",%progbits
 2317              		.align	1
 2318              		.p2align 2,,3
 2319              		.weak	GetMCI
 2320              		.syntax unified
 2321              		.thumb
 2322              		.thumb_func
 2324              	GetMCI:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 69


 2325              	.LVL219:
 2326              	.LFB1111:
1065:Src/mc_tasks.c **** 
1066:Src/mc_tasks.c **** /**
1067:Src/mc_tasks.c ****   * @brief  This function returns the reference of the MCInterface relative to
1068:Src/mc_tasks.c ****   *         the selected drive.
1069:Src/mc_tasks.c ****   * @param  bMotor Motor reference number defined
1070:Src/mc_tasks.c ****   *         \link Motors_reference_number here \endlink.
1071:Src/mc_tasks.c ****   * @retval MCI_Handle_t * Reference to MCInterface relative to the selected drive.
1072:Src/mc_tasks.c ****   *         Note: it can be MC_NULL if MCInterface of selected drive is not
1073:Src/mc_tasks.c ****   *         allocated.
1074:Src/mc_tasks.c ****   */
1075:Src/mc_tasks.c **** __weak MCI_Handle_t *GetMCI(uint8_t bMotor)
1076:Src/mc_tasks.c **** {
 2327              		.loc 1 1076 1 is_stmt 1 view -0
 2328              		.cfi_startproc
 2329              		@ args = 0, pretend = 0, frame = 0
 2330              		@ frame_needed = 0, uses_anonymous_args = 0
 2331              		@ link register save eliminated.
1077:Src/mc_tasks.c ****   MCI_Handle_t *retVal = MC_NULL; //cstat !MISRAC2012-Rule-8.13
 2332              		.loc 1 1077 3 view .LVU665
1078:Src/mc_tasks.c ****   if (bMotor < (uint8_t)NBR_OF_MOTORS)
 2333              		.loc 1 1078 3 view .LVU666
1079:Src/mc_tasks.c ****   {
1080:Src/mc_tasks.c ****     retVal = &Mci[bMotor];
 2334              		.loc 1 1080 12 is_stmt 0 view .LVU667
 2335 0000 024B     		ldr	r3, .L189
 2336 0002 0028     		cmp	r0, #0
1081:Src/mc_tasks.c ****   }
1082:Src/mc_tasks.c ****   else
1083:Src/mc_tasks.c ****   {
1084:Src/mc_tasks.c ****     /* Nothing to do */
1085:Src/mc_tasks.c ****   }
1086:Src/mc_tasks.c ****   return (retVal);
1087:Src/mc_tasks.c **** }
 2337              		.loc 1 1087 1 view .LVU668
 2338 0004 0CBF     		ite	eq
 2339 0006 1846     		moveq	r0, r3
 2340              	.LVL220:
 2341              		.loc 1 1087 1 view .LVU669
 2342 0008 0020     		movne	r0, #0
 2343 000a 7047     		bx	lr
 2344              	.L190:
 2345              		.align	2
 2346              	.L189:
 2347 000c 00000000 		.word	Mci
 2348              		.cfi_endproc
 2349              	.LFE1111:
 2351              		.section	.text.TSK_HardwareFaultTask,"ax",%progbits
 2352              		.align	1
 2353              		.p2align 2,,3
 2354              		.weak	TSK_HardwareFaultTask
 2355              		.syntax unified
 2356              		.thumb
 2357              		.thumb_func
 2359              	TSK_HardwareFaultTask:
 2360              	.LFB1112:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 70


1088:Src/mc_tasks.c **** 
1089:Src/mc_tasks.c **** /**
1090:Src/mc_tasks.c ****   * @brief  Puts the Motor Control subsystem in in safety conditions on a Hard Fault
1091:Src/mc_tasks.c ****   *
1092:Src/mc_tasks.c ****   *  This function is to be executed when a general hardware failure has been detected
1093:Src/mc_tasks.c ****   * by the microcontroller and is used to put the system in safety condition.
1094:Src/mc_tasks.c ****   */
1095:Src/mc_tasks.c **** __weak void TSK_HardwareFaultTask(void)
1096:Src/mc_tasks.c **** {
 2361              		.loc 1 1096 1 is_stmt 1 view -0
 2362              		.cfi_startproc
 2363              		@ args = 0, pretend = 0, frame = 0
 2364              		@ frame_needed = 0, uses_anonymous_args = 0
1097:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_HardwareFaultTask 0 */
1098:Src/mc_tasks.c **** 
1099:Src/mc_tasks.c ****   /* USER CODE END TSK_HardwareFaultTask 0 */
1100:Src/mc_tasks.c ****   R3_1_SwitchOffPWM(pwmcHandle[M1]);
 2365              		.loc 1 1100 3 view .LVU671
1096:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_HardwareFaultTask 0 */
 2366              		.loc 1 1096 1 is_stmt 0 view .LVU672
 2367 0000 08B5     		push	{r3, lr}
 2368              	.LCFI31:
 2369              		.cfi_def_cfa_offset 8
 2370              		.cfi_offset 3, -8
 2371              		.cfi_offset 14, -4
 2372              		.loc 1 1100 3 view .LVU673
 2373 0002 054B     		ldr	r3, .L193
 2374 0004 1868     		ldr	r0, [r3]
 2375 0006 FFF7FEFF 		bl	R3_1_SwitchOffPWM
 2376              	.LVL221:
1101:Src/mc_tasks.c ****   MCI_FaultProcessing(&Mci[M1], MC_SW_ERROR, 0);
 2377              		.loc 1 1101 3 is_stmt 1 view .LVU674
1102:Src/mc_tasks.c **** 
1103:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_HardwareFaultTask 1 */
1104:Src/mc_tasks.c **** 
1105:Src/mc_tasks.c ****   /* USER CODE END TSK_HardwareFaultTask 1 */
1106:Src/mc_tasks.c **** }
 2378              		.loc 1 1106 1 is_stmt 0 view .LVU675
 2379 000a BDE80840 		pop	{r3, lr}
 2380              	.LCFI32:
 2381              		.cfi_restore 14
 2382              		.cfi_restore 3
 2383              		.cfi_def_cfa_offset 0
1101:Src/mc_tasks.c ****   MCI_FaultProcessing(&Mci[M1], MC_SW_ERROR, 0);
 2384              		.loc 1 1101 3 view .LVU676
 2385 000e 0348     		ldr	r0, .L193+4
 2386 0010 0022     		movs	r2, #0
 2387 0012 8021     		movs	r1, #128
 2388 0014 FFF7FEBF 		b	MCI_FaultProcessing
 2389              	.LVL222:
 2390              	.L194:
 2391              		.align	2
 2392              	.L193:
 2393 0018 00000000 		.word	.LANCHOR1
 2394 001c 00000000 		.word	Mci
 2395              		.cfi_endproc
 2396              	.LFE1112:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 71


 2398              		.section	.text.startMediumFrequencyTask,"ax",%progbits
 2399              		.align	1
 2400              		.p2align 2,,3
 2401              		.global	startMediumFrequencyTask
 2402              		.syntax unified
 2403              		.thumb
 2404              		.thumb_func
 2406              	startMediumFrequencyTask:
 2407              	.LFB1113:
1107:Src/mc_tasks.c **** 
1108:Src/mc_tasks.c **** /* startMediumFrequencyTask function */
1109:Src/mc_tasks.c **** void startMediumFrequencyTask(void const * argument)
1110:Src/mc_tasks.c **** {
 2408              		.loc 1 1110 1 is_stmt 1 view -0
 2409              		.cfi_startproc
 2410              		@ Volatile: function does not return.
 2411              		@ args = 0, pretend = 0, frame = 0
 2412              		@ frame_needed = 0, uses_anonymous_args = 0
 2413              	.LVL223:
 2414              		.loc 1 1110 1 is_stmt 0 view .LVU678
 2415 0000 08B5     		push	{r3, lr}
 2416              	.LCFI33:
 2417              		.cfi_def_cfa_offset 8
 2418              		.cfi_offset 3, -8
 2419              		.cfi_offset 14, -4
 2420              	.LVL224:
 2421              	.L196:
1111:Src/mc_tasks.c ****   /* USER CODE BEGIN MF task 1 */
1112:Src/mc_tasks.c ****   /* Infinite loop */
1113:Src/mc_tasks.c ****   for(;;)
 2422              		.loc 1 1113 3 is_stmt 1 discriminator 1 view .LVU679
1114:Src/mc_tasks.c ****   {
1115:Src/mc_tasks.c ****     /* Delay of 500us */
1116:Src/mc_tasks.c ****     vTaskDelay(1);
 2423              		.loc 1 1116 5 discriminator 1 view .LVU680
 2424 0002 0120     		movs	r0, #1
 2425 0004 FFF7FEFF 		bl	vTaskDelay
 2426              	.LVL225:
1117:Src/mc_tasks.c ****     MC_RunMotorControlTasks();
 2427              		.loc 1 1117 5 discriminator 1 view .LVU681
 2428 0008 FFF7FEFF 		bl	MC_RunMotorControlTasks
 2429              	.LVL226:
1113:Src/mc_tasks.c ****   {
 2430              		.loc 1 1113 8 discriminator 1 view .LVU682
 2431 000c F9E7     		b	.L196
 2432              		.cfi_endproc
 2433              	.LFE1113:
 2435 000e 00BF     		.section	.text.StartSafetyTask,"ax",%progbits
 2436              		.align	1
 2437              		.p2align 2,,3
 2438              		.global	StartSafetyTask
 2439              		.syntax unified
 2440              		.thumb
 2441              		.thumb_func
 2443              	StartSafetyTask:
 2444              	.LFB1114:
1118:Src/mc_tasks.c ****   }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 72


1119:Src/mc_tasks.c ****   /* USER CODE END MF task 1 */
1120:Src/mc_tasks.c **** }
1121:Src/mc_tasks.c **** 
1122:Src/mc_tasks.c **** /* startSafetyTask function */
1123:Src/mc_tasks.c **** void StartSafetyTask(void const * argument)
1124:Src/mc_tasks.c **** {
 2445              		.loc 1 1124 1 view -0
 2446              		.cfi_startproc
 2447              		@ Volatile: function does not return.
 2448              		@ args = 0, pretend = 0, frame = 0
 2449              		@ frame_needed = 0, uses_anonymous_args = 0
 2450              	.LVL227:
 2451              		.loc 1 1124 1 is_stmt 0 view .LVU684
 2452 0000 08B5     		push	{r3, lr}
 2453              	.LCFI34:
 2454              		.cfi_def_cfa_offset 8
 2455              		.cfi_offset 3, -8
 2456              		.cfi_offset 14, -4
 2457              	.LVL228:
 2458              	.L199:
1125:Src/mc_tasks.c ****   /* USER CODE BEGIN SF task 1 */
1126:Src/mc_tasks.c ****   /* Infinite loop */
1127:Src/mc_tasks.c ****   for(;;)
 2459              		.loc 1 1127 3 is_stmt 1 discriminator 1 view .LVU685
1128:Src/mc_tasks.c ****   {
1129:Src/mc_tasks.c ****     /* Delay of 500us */
1130:Src/mc_tasks.c ****     vTaskDelay(1);
 2460              		.loc 1 1130 5 discriminator 1 view .LVU686
 2461 0002 0120     		movs	r0, #1
 2462 0004 FFF7FEFF 		bl	vTaskDelay
 2463              	.LVL229:
1131:Src/mc_tasks.c ****     TSK_SafetyTask();
 2464              		.loc 1 1131 5 discriminator 1 view .LVU687
 2465 0008 FFF7FEFF 		bl	TSK_SafetyTask
 2466              	.LVL230:
1127:Src/mc_tasks.c ****   {
 2467              		.loc 1 1127 8 discriminator 1 view .LVU688
 2468 000c F9E7     		b	.L199
 2469              		.cfi_endproc
 2470              	.LFE1114:
 2472 000e 00BF     		.section	.text.UI_HandleStartStopButton_cb,"ax",%progbits
 2473              		.align	1
 2474              		.p2align 2,,3
 2475              		.weak	UI_HandleStartStopButton_cb
 2476              		.syntax unified
 2477              		.thumb
 2478              		.thumb_func
 2480              	UI_HandleStartStopButton_cb:
 2481              	.LFB1115:
1132:Src/mc_tasks.c ****   }
1133:Src/mc_tasks.c ****   /* USER CODE END SF task 1 */
1134:Src/mc_tasks.c **** }
1135:Src/mc_tasks.c **** 
1136:Src/mc_tasks.c **** __weak void UI_HandleStartStopButton_cb (void)
1137:Src/mc_tasks.c **** {
 2482              		.loc 1 1137 1 view -0
 2483              		.cfi_startproc
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 73


 2484              		@ args = 0, pretend = 0, frame = 0
 2485              		@ frame_needed = 0, uses_anonymous_args = 0
1138:Src/mc_tasks.c **** /* USER CODE BEGIN START_STOP_BTN */
1139:Src/mc_tasks.c ****   if (IDLE == MC_GetSTMStateMotor1())
 2486              		.loc 1 1139 3 view .LVU690
1137:Src/mc_tasks.c **** /* USER CODE BEGIN START_STOP_BTN */
 2487              		.loc 1 1137 1 is_stmt 0 view .LVU691
 2488 0000 08B5     		push	{r3, lr}
 2489              	.LCFI35:
 2490              		.cfi_def_cfa_offset 8
 2491              		.cfi_offset 3, -8
 2492              		.cfi_offset 14, -4
 2493              		.loc 1 1139 15 view .LVU692
 2494 0002 FFF7FEFF 		bl	MC_GetSTMStateMotor1
 2495              	.LVL231:
 2496              		.loc 1 1139 6 view .LVU693
 2497 0006 18B9     		cbnz	r0, .L202
1140:Src/mc_tasks.c ****   {
1141:Src/mc_tasks.c ****     /* Ramp parameters should be tuned for the actual motor */
1142:Src/mc_tasks.c ****     (void)MC_StartMotor1();
 2498              		.loc 1 1142 5 is_stmt 1 view .LVU694
1143:Src/mc_tasks.c ****   }
1144:Src/mc_tasks.c ****   else
1145:Src/mc_tasks.c ****   {
1146:Src/mc_tasks.c ****     (void)MC_StopMotor1();
1147:Src/mc_tasks.c ****   }
1148:Src/mc_tasks.c **** /* USER CODE END START_STOP_BTN */
1149:Src/mc_tasks.c **** }
 2499              		.loc 1 1149 1 is_stmt 0 view .LVU695
 2500 0008 BDE80840 		pop	{r3, lr}
 2501              	.LCFI36:
 2502              		.cfi_remember_state
 2503              		.cfi_restore 14
 2504              		.cfi_restore 3
 2505              		.cfi_def_cfa_offset 0
1142:Src/mc_tasks.c ****   }
 2506              		.loc 1 1142 11 view .LVU696
 2507 000c FFF7FEBF 		b	MC_StartMotor1
 2508              	.LVL232:
 2509              	.L202:
 2510              	.LCFI37:
 2511              		.cfi_restore_state
1146:Src/mc_tasks.c ****   }
 2512              		.loc 1 1146 5 is_stmt 1 view .LVU697
 2513              		.loc 1 1149 1 is_stmt 0 view .LVU698
 2514 0010 BDE80840 		pop	{r3, lr}
 2515              	.LCFI38:
 2516              		.cfi_restore 14
 2517              		.cfi_restore 3
 2518              		.cfi_def_cfa_offset 0
1146:Src/mc_tasks.c ****   }
 2519              		.loc 1 1146 11 view .LVU699
 2520 0014 FFF7FEBF 		b	MC_StopMotor1
 2521              	.LVL233:
 2522              		.cfi_endproc
 2523              	.LFE1115:
 2525              		.section	.text.mc_lock_pins,"ax",%progbits
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 74


 2526              		.align	1
 2527              		.p2align 2,,3
 2528              		.weak	mc_lock_pins
 2529              		.syntax unified
 2530              		.thumb
 2531              		.thumb_func
 2533              	mc_lock_pins:
 2534              	.LFB1116:
1150:Src/mc_tasks.c **** 
1151:Src/mc_tasks.c ****  /**
1152:Src/mc_tasks.c ****   * @brief  Locks GPIO pins used for Motor Control to prevent accidental reconfiguration.
1153:Src/mc_tasks.c ****   */
1154:Src/mc_tasks.c **** __weak void mc_lock_pins (void)
1155:Src/mc_tasks.c **** {
 2535              		.loc 1 1155 1 is_stmt 1 view -0
 2536              		.cfi_startproc
 2537              		@ args = 0, pretend = 0, frame = 48
 2538              		@ frame_needed = 0, uses_anonymous_args = 0
 2539              		@ link register save eliminated.
1156:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_UH_GPIO_Port, M1_PWM_UH_Pin);
 2540              		.loc 1 1156 1 view .LVU701
 2541              	.LVL234:
 2542              	.LBB84:
 2543              	.LBI84:
 2544              		.file 2 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @file    stm32l4xx_ll_gpio.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * All rights reserved.
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * in the root directory of this software component.
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   ******************************************************************************
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #ifndef STM32L4xx_LL_GPIO_H
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define STM32L4xx_LL_GPIO_H
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #ifdef __cplusplus
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** extern "C" {
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #endif
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #include "stm32l4xx.h"
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @addtogroup STM32L4xx_LL_Driver
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 75


  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** MISRA C:2012 deviation rule has been granted for following rules:
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * which may be out of array bounds [..,UNKNOWN] in following APIs:
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_0_7
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_0_7
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_8_15
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_8_15
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** typedef struct
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 76


  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS0 /*!< Select pin 0 */
 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS1 /*!< Select pin 1 */
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS2 /*!< Select pin 2 */
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS3 /*!< Select pin 3 */
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS4 /*!< Select pin 4 */
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS5 /*!< Select pin 5 */
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS6 /*!< Select pin 6 */
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS7 /*!< Select pin 7 */
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS8 /*!< Select pin 8 */
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS9 /*!< Select pin 9 */
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS15 /*!< Select pin 15 */
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS0 | GPIO_BSRR_BS1  | GPIO_BSRR_BS2  | \
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS3  | GPIO_BSRR_BS4  | GPIO_BSRR_BS5  | \
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS6  | GPIO_BSRR_BS7  | GPIO_BSRR_BS8  | \
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS9  | GPIO_BSRR_BS10 | GPIO_BSRR_BS11 | \
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS12 | GPIO_BSRR_BS13 | GPIO_BSRR_BS14 | \
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS15) /*!< Select all pins */
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 77


 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT0 /*!< Select open-drain as output type */
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEED0_0 /*!< Select I/O medium output spe
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEED0_1 /*!< Select I/O fast output speed
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDR_OSPEED0   /*!< Select I/O high output speed
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */
 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 78


 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Register value
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 79


 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(P
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 80


 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER,
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 81


 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) >> POSITION_VAL(Pin));
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U)),
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 2U)));
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 82


 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR,
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(P
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 83


 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(P
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR,
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 84


 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin) * 4U)));
 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 85


 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) 
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 86


 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #if defined(GPIO_ASCR_ASC0)
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Connect analog switch to ADC input of several pins for a dedicated port.
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   This bit must be set prior to the ADC conversion.
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         Only the IO which connected to the ADC input are effective.
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         Other IO must be kept reset value
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll ASCR         ASCy          LL_GPIO_EnablePinAnalogControl
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 87


 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_EnablePinAnalogControl(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   SET_BIT(GPIOx->ASCR, PinMask);
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Disconnect analog switch to ADC input of several pins for a dedicated port.
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll ASCR         ASCy          LL_GPIO_DisablePinAnalogControl
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_DisablePinAnalogControl(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   CLEAR_BIT(GPIOx->ASCR, PinMask);
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #endif /* GPIO_ASCR_ASC0 */
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         next reset.
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         (control and alternate function registers).
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 88


 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 2545              		.loc 2 781 22 view .LVU702
 2546              	.LBB85:
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   __IO uint32_t temp;
 2547              		.loc 2 783 3 view .LVU703
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2548              		.loc 2 784 3 view .LVU704
 2549              	.LBE85:
 2550              	.LBE84:
1155:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_UH_GPIO_Port, M1_PWM_UH_Pin);
 2551              		.loc 1 1155 1 is_stmt 0 view .LVU705
 2552 0000 30B4     		push	{r4, r5}
 2553              	.LCFI39:
 2554              		.cfi_def_cfa_offset 8
 2555              		.cfi_offset 4, -8
 2556              		.cfi_offset 5, -4
 2557              	.LBB89:
 2558              	.LBB86:
 2559              		.loc 2 784 3 view .LVU706
 2560 0002 4FF09042 		mov	r2, #1207959552
 2561 0006 384B     		ldr	r3, .L206
 2562 0008 D361     		str	r3, [r2, #28]
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2563              		.loc 2 785 3 is_stmt 1 view .LVU707
 2564 000a 4FF48071 		mov	r1, #256
 2565 000e D161     		str	r1, [r2, #28]
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2566              		.loc 2 786 3 view .LVU708
 2567              	.LBE86:
 2568              	.LBE89:
1155:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_UH_GPIO_Port, M1_PWM_UH_Pin);
 2569              		.loc 1 1155 1 is_stmt 0 view .LVU709
 2570 0010 8CB0     		sub	sp, sp, #48
 2571              	.LCFI40:
 2572              		.cfi_def_cfa_offset 56
 2573              	.LBB90:
 2574              	.LBB87:
 2575              		.loc 2 786 3 view .LVU710
 2576 0012 D361     		str	r3, [r2, #28]
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 2577              		.loc 2 788 3 is_stmt 1 view .LVU711
 2578              		.loc 2 788 10 is_stmt 0 view .LVU712
 2579 0014 D369     		ldr	r3, [r2, #28]
 2580              		.loc 2 788 8 view .LVU713
 2581 0016 0B93     		str	r3, [sp, #44]
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2582              		.loc 2 789 3 is_stmt 1 view .LVU714
 2583              	.LBE87:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 89


 2584              	.LBE90:
 2585              	.LBB91:
 2586              	.LBB92:
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2587              		.loc 2 785 3 is_stmt 0 view .LVU715
 2588 0018 4FF40071 		mov	r1, #512
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2589              		.loc 2 784 3 view .LVU716
 2590 001c 4FF48133 		mov	r3, #66048
 2591              	.LBE92:
 2592              	.LBE91:
 2593              	.LBB96:
 2594              	.LBB88:
 2595              		.loc 2 789 3 view .LVU717
 2596 0020 0B98     		ldr	r0, [sp, #44]
 2597              	.LVL235:
 2598              		.loc 2 789 3 view .LVU718
 2599              	.LBE88:
 2600              	.LBE96:
1157:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_VH_GPIO_Port, M1_PWM_VH_Pin);
 2601              		.loc 1 1157 1 is_stmt 1 view .LVU719
 2602              	.LBB97:
 2603              	.LBI91:
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 2604              		.loc 2 781 22 view .LVU720
 2605              	.LBB93:
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2606              		.loc 2 783 3 view .LVU721
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2607              		.loc 2 784 3 view .LVU722
 2608 0022 D361     		str	r3, [r2, #28]
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2609              		.loc 2 785 3 view .LVU723
 2610 0024 D161     		str	r1, [r2, #28]
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 2611              		.loc 2 786 3 view .LVU724
 2612 0026 D361     		str	r3, [r2, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2613              		.loc 2 788 3 view .LVU725
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2614              		.loc 2 788 10 is_stmt 0 view .LVU726
 2615 0028 D169     		ldr	r1, [r2, #28]
 2616              	.LBE93:
 2617              	.LBE97:
 2618              	.LBB98:
 2619              	.LBB99:
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2620              		.loc 2 784 3 view .LVU727
 2621 002a 304B     		ldr	r3, .L206+4
 2622              	.LBE99:
 2623              	.LBE98:
 2624              	.LBB103:
 2625              	.LBB94:
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2626              		.loc 2 788 8 view .LVU728
 2627 002c 0A91     		str	r1, [sp, #40]
 2628              		.loc 2 789 3 is_stmt 1 view .LVU729
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 90


 2629              	.LBE94:
 2630              	.LBE103:
 2631              	.LBB104:
 2632              	.LBB100:
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2633              		.loc 2 785 3 is_stmt 0 view .LVU730
 2634 002e 4FF48050 		mov	r0, #4096
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2635              		.loc 2 784 3 view .LVU731
 2636 0032 4FF48831 		mov	r1, #69632
 2637              	.LBE100:
 2638              	.LBE104:
 2639              	.LBB105:
 2640              	.LBB95:
 2641              		.loc 2 789 3 view .LVU732
 2642 0036 0A9C     		ldr	r4, [sp, #40]
 2643              	.LVL236:
 2644              		.loc 2 789 3 view .LVU733
 2645              	.LBE95:
 2646              	.LBE105:
1158:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_DP_GPIO_Port, M1_DP_Pin);
 2647              		.loc 1 1158 1 is_stmt 1 view .LVU734
 2648              	.LBB106:
 2649              	.LBI98:
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 2650              		.loc 2 781 22 view .LVU735
 2651              	.LBB101:
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2652              		.loc 2 783 3 view .LVU736
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2653              		.loc 2 784 3 view .LVU737
 2654 0038 D961     		str	r1, [r3, #28]
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2655              		.loc 2 785 3 view .LVU738
 2656 003a D861     		str	r0, [r3, #28]
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 2657              		.loc 2 786 3 view .LVU739
 2658 003c D961     		str	r1, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2659              		.loc 2 788 3 view .LVU740
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2660              		.loc 2 788 10 is_stmt 0 view .LVU741
 2661 003e D969     		ldr	r1, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2662              		.loc 2 788 8 view .LVU742
 2663 0040 0991     		str	r1, [sp, #36]
 2664              		.loc 2 789 3 is_stmt 1 view .LVU743
 2665              	.LBE101:
 2666              	.LBE106:
 2667              	.LBB107:
 2668              	.LBB108:
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2669              		.loc 2 785 3 is_stmt 0 view .LVU744
 2670 0042 4FF48060 		mov	r0, #1024
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2671              		.loc 2 784 3 view .LVU745
 2672 0046 4FF48231 		mov	r1, #66560
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 91


 2673              	.LBE108:
 2674              	.LBE107:
 2675              	.LBB111:
 2676              	.LBB102:
 2677              		.loc 2 789 3 view .LVU746
 2678 004a 099C     		ldr	r4, [sp, #36]
 2679              	.LVL237:
 2680              		.loc 2 789 3 view .LVU747
 2681              	.LBE102:
 2682              	.LBE111:
1159:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_WH_GPIO_Port, M1_PWM_WH_Pin);
 2683              		.loc 1 1159 1 is_stmt 1 view .LVU748
 2684              	.LBB112:
 2685              	.LBI107:
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 2686              		.loc 2 781 22 view .LVU749
 2687              	.LBB109:
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2688              		.loc 2 783 3 view .LVU750
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2689              		.loc 2 784 3 view .LVU751
 2690 004c D161     		str	r1, [r2, #28]
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2691              		.loc 2 785 3 view .LVU752
 2692 004e D061     		str	r0, [r2, #28]
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 2693              		.loc 2 786 3 view .LVU753
 2694 0050 D161     		str	r1, [r2, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2695              		.loc 2 788 3 view .LVU754
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2696              		.loc 2 788 10 is_stmt 0 view .LVU755
 2697 0052 D169     		ldr	r1, [r2, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2698              		.loc 2 788 8 view .LVU756
 2699 0054 0891     		str	r1, [sp, #32]
 2700              		.loc 2 789 3 is_stmt 1 view .LVU757
 2701              	.LBE109:
 2702              	.LBE112:
 2703              	.LBB113:
 2704              	.LBB114:
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2705              		.loc 2 785 3 is_stmt 0 view .LVU758
 2706 0056 4FF48040 		mov	r0, #16384
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2707              		.loc 2 784 3 view .LVU759
 2708 005a 4FF4A031 		mov	r1, #81920
 2709              	.LBE114:
 2710              	.LBE113:
 2711              	.LBB117:
 2712              	.LBB110:
 2713              		.loc 2 789 3 view .LVU760
 2714 005e 089C     		ldr	r4, [sp, #32]
 2715              	.LVL238:
 2716              		.loc 2 789 3 view .LVU761
 2717              	.LBE110:
 2718              	.LBE117:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 92


1160:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_EN_V_GPIO_Port, M1_PWM_EN_V_Pin);
 2719              		.loc 1 1160 1 is_stmt 1 view .LVU762
 2720              	.LBB118:
 2721              	.LBI113:
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 2722              		.loc 2 781 22 view .LVU763
 2723              	.LBB115:
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2724              		.loc 2 783 3 view .LVU764
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2725              		.loc 2 784 3 view .LVU765
 2726 0060 D961     		str	r1, [r3, #28]
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2727              		.loc 2 785 3 view .LVU766
 2728 0062 D861     		str	r0, [r3, #28]
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 2729              		.loc 2 786 3 view .LVU767
 2730 0064 D961     		str	r1, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2731              		.loc 2 788 3 view .LVU768
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2732              		.loc 2 788 10 is_stmt 0 view .LVU769
 2733 0066 D969     		ldr	r1, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2734              		.loc 2 788 8 view .LVU770
 2735 0068 0791     		str	r1, [sp, #28]
 2736              		.loc 2 789 3 is_stmt 1 view .LVU771
 2737              	.LBE115:
 2738              	.LBE118:
 2739              	.LBB119:
 2740              	.LBB120:
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2741              		.loc 2 785 3 is_stmt 0 view .LVU772
 2742 006a 4FF40050 		mov	r0, #8192
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2743              		.loc 2 784 3 view .LVU773
 2744 006e 4FF49031 		mov	r1, #73728
 2745              	.LBE120:
 2746              	.LBE119:
 2747              	.LBB123:
 2748              	.LBB116:
 2749              		.loc 2 789 3 view .LVU774
 2750 0072 079C     		ldr	r4, [sp, #28]
 2751              	.LVL239:
 2752              		.loc 2 789 3 view .LVU775
 2753              	.LBE116:
 2754              	.LBE123:
1161:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_EN_U_GPIO_Port, M1_PWM_EN_U_Pin);
 2755              		.loc 1 1161 1 is_stmt 1 view .LVU776
 2756              	.LBB124:
 2757              	.LBI119:
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 2758              		.loc 2 781 22 view .LVU777
 2759              	.LBB121:
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2760              		.loc 2 783 3 view .LVU778
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 93


 2761              		.loc 2 784 3 view .LVU779
 2762 0074 D961     		str	r1, [r3, #28]
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2763              		.loc 2 785 3 view .LVU780
 2764 0076 D861     		str	r0, [r3, #28]
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 2765              		.loc 2 786 3 view .LVU781
 2766 0078 D961     		str	r1, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2767              		.loc 2 788 3 view .LVU782
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2768              		.loc 2 788 10 is_stmt 0 view .LVU783
 2769 007a D969     		ldr	r1, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2770              		.loc 2 788 8 view .LVU784
 2771 007c 0691     		str	r1, [sp, #24]
 2772              		.loc 2 789 3 is_stmt 1 view .LVU785
 2773              	.LBE121:
 2774              	.LBE124:
 2775              	.LBB125:
 2776              	.LBB126:
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2777              		.loc 2 785 3 is_stmt 0 view .LVU786
 2778 007e 4FF40040 		mov	r0, #32768
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2779              		.loc 2 784 3 view .LVU787
 2780 0082 4FF4C031 		mov	r1, #98304
 2781              	.LBE126:
 2782              	.LBE125:
 2783              	.LBB129:
 2784              	.LBB122:
 2785              		.loc 2 789 3 view .LVU788
 2786 0086 069C     		ldr	r4, [sp, #24]
 2787              	.LVL240:
 2788              		.loc 2 789 3 view .LVU789
 2789              	.LBE122:
 2790              	.LBE129:
1162:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_EN_W_GPIO_Port, M1_PWM_EN_W_Pin);
 2791              		.loc 1 1162 1 is_stmt 1 view .LVU790
 2792              	.LBB130:
 2793              	.LBI125:
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 2794              		.loc 2 781 22 view .LVU791
 2795              	.LBB127:
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2796              		.loc 2 783 3 view .LVU792
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2797              		.loc 2 784 3 view .LVU793
 2798 0088 D961     		str	r1, [r3, #28]
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2799              		.loc 2 785 3 view .LVU794
 2800 008a D861     		str	r0, [r3, #28]
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 2801              		.loc 2 786 3 view .LVU795
 2802 008c D961     		str	r1, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2803              		.loc 2 788 3 view .LVU796
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 94


 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2804              		.loc 2 788 10 is_stmt 0 view .LVU797
 2805 008e D969     		ldr	r1, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2806              		.loc 2 788 8 view .LVU798
 2807 0090 0591     		str	r1, [sp, #20]
 2808              		.loc 2 789 3 is_stmt 1 view .LVU799
 2809              	.LBE127:
 2810              	.LBE130:
 2811              	.LBB131:
 2812              	.LBB132:
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2813              		.loc 2 784 3 is_stmt 0 view .LVU800
 2814 0092 4FF00110 		mov	r0, #65537
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2815              		.loc 2 785 3 view .LVU801
 2816 0096 0125     		movs	r5, #1
 2817              	.LBE132:
 2818              	.LBE131:
 2819              	.LBB134:
 2820              	.LBB128:
 2821              		.loc 2 789 3 view .LVU802
 2822 0098 0599     		ldr	r1, [sp, #20]
 2823              	.LVL241:
 2824              		.loc 2 789 3 view .LVU803
 2825              	.LBE128:
 2826              	.LBE134:
1163:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_CURR_AMPL_W_GPIO_Port, M1_CURR_AMPL_W_Pin);
 2827              		.loc 1 1163 1 is_stmt 1 view .LVU804
 2828              	.LBB135:
 2829              	.LBI131:
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 2830              		.loc 2 781 22 view .LVU805
 2831              	.LBB133:
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2832              		.loc 2 783 3 view .LVU806
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2833              		.loc 2 784 3 view .LVU807
 2834 009a D861     		str	r0, [r3, #28]
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2835              		.loc 2 785 3 view .LVU808
 2836 009c DD61     		str	r5, [r3, #28]
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 2837              		.loc 2 786 3 view .LVU809
 2838 009e D861     		str	r0, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2839              		.loc 2 788 3 view .LVU810
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2840              		.loc 2 788 10 is_stmt 0 view .LVU811
 2841 00a0 D969     		ldr	r1, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2842              		.loc 2 788 8 view .LVU812
 2843 00a2 0491     		str	r1, [sp, #16]
 2844              		.loc 2 789 3 is_stmt 1 view .LVU813
 2845 00a4 049C     		ldr	r4, [sp, #16]
 2846              	.LVL242:
 2847              		.loc 2 789 3 is_stmt 0 view .LVU814
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 95


 2848              	.LBE133:
 2849              	.LBE135:
1164:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_CURR_AMPL_V_GPIO_Port, M1_CURR_AMPL_V_Pin);
 2850              		.loc 1 1164 1 is_stmt 1 view .LVU815
 2851              	.LBB136:
 2852              	.LBI136:
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 2853              		.loc 2 781 22 view .LVU816
 2854              	.LBB137:
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2855              		.loc 2 783 3 view .LVU817
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2856              		.loc 2 784 3 view .LVU818
 2857 00a6 1249     		ldr	r1, .L206+8
 2858 00a8 D961     		str	r1, [r3, #28]
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2859              		.loc 2 785 3 view .LVU819
 2860 00aa 0224     		movs	r4, #2
 2861 00ac DC61     		str	r4, [r3, #28]
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 2862              		.loc 2 786 3 view .LVU820
 2863 00ae D961     		str	r1, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2864              		.loc 2 788 3 view .LVU821
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2865              		.loc 2 788 10 is_stmt 0 view .LVU822
 2866 00b0 DB69     		ldr	r3, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2867              		.loc 2 788 8 view .LVU823
 2868 00b2 0393     		str	r3, [sp, #12]
 2869              		.loc 2 789 3 is_stmt 1 view .LVU824
 2870 00b4 039B     		ldr	r3, [sp, #12]
 2871              	.LVL243:
 2872              		.loc 2 789 3 is_stmt 0 view .LVU825
 2873              	.LBE137:
 2874              	.LBE136:
1165:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_BUS_VOLTAGE_GPIO_Port, M1_BUS_VOLTAGE_Pin);
 2875              		.loc 1 1165 1 is_stmt 1 view .LVU826
 2876              	.LBB138:
 2877              	.LBI138:
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 2878              		.loc 2 781 22 view .LVU827
 2879              	.LBB139:
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2880              		.loc 2 783 3 view .LVU828
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2881              		.loc 2 784 3 view .LVU829
 2882 00b6 D061     		str	r0, [r2, #28]
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2883              		.loc 2 785 3 view .LVU830
 2884 00b8 D561     		str	r5, [r2, #28]
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 2885              		.loc 2 786 3 view .LVU831
 2886 00ba D061     		str	r0, [r2, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2887              		.loc 2 788 3 view .LVU832
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 96


 2888              		.loc 2 788 10 is_stmt 0 view .LVU833
 2889 00bc D369     		ldr	r3, [r2, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2890              		.loc 2 788 8 view .LVU834
 2891 00be 0293     		str	r3, [sp, #8]
 2892              		.loc 2 789 3 is_stmt 1 view .LVU835
 2893 00c0 029B     		ldr	r3, [sp, #8]
 2894              	.LVL244:
 2895              		.loc 2 789 3 is_stmt 0 view .LVU836
 2896              	.LBE139:
 2897              	.LBE138:
1166:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_CURR_AMPL_U_GPIO_Port, M1_CURR_AMPL_U_Pin);
 2898              		.loc 1 1166 1 is_stmt 1 view .LVU837
 2899              	.LBB140:
 2900              	.LBI140:
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 2901              		.loc 2 781 22 view .LVU838
 2902              	.LBB141:
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2903              		.loc 2 783 3 view .LVU839
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2904              		.loc 2 784 3 view .LVU840
 2905 00c2 D161     		str	r1, [r2, #28]
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2906              		.loc 2 785 3 view .LVU841
 2907 00c4 D461     		str	r4, [r2, #28]
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 2908              		.loc 2 786 3 view .LVU842
 2909 00c6 D161     		str	r1, [r2, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2910              		.loc 2 788 3 view .LVU843
 2911              	.LBE141:
 2912              	.LBE140:
 2913              	.LBB144:
 2914              	.LBB145:
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2915              		.loc 2 784 3 is_stmt 0 view .LVU844
 2916 00c8 0A4B     		ldr	r3, .L206+12
 2917              	.LBE145:
 2918              	.LBE144:
 2919              	.LBB148:
 2920              	.LBB142:
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2921              		.loc 2 788 10 view .LVU845
 2922 00ca D169     		ldr	r1, [r2, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2923              		.loc 2 788 8 view .LVU846
 2924 00cc 0191     		str	r1, [sp, #4]
 2925              		.loc 2 789 3 is_stmt 1 view .LVU847
 2926              	.LBE142:
 2927              	.LBE148:
 2928              	.LBB149:
 2929              	.LBB146:
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2930              		.loc 2 784 3 is_stmt 0 view .LVU848
 2931 00ce 0A4A     		ldr	r2, .L206+16
 2932              	.LBE146:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 97


 2933              	.LBE149:
 2934              	.LBB150:
 2935              	.LBB143:
 2936              		.loc 2 789 3 view .LVU849
 2937 00d0 0198     		ldr	r0, [sp, #4]
 2938              	.LVL245:
 2939              		.loc 2 789 3 view .LVU850
 2940              	.LBE143:
 2941              	.LBE150:
1167:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_TEMPERATURE_GPIO_Port, M1_TEMPERATURE_Pin);
 2942              		.loc 1 1167 1 is_stmt 1 view .LVU851
 2943              	.LBB151:
 2944              	.LBI144:
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 2945              		.loc 2 781 22 view .LVU852
 2946              	.LBB147:
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2947              		.loc 2 783 3 view .LVU853
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2948              		.loc 2 784 3 view .LVU854
 2949 00d2 DA61     		str	r2, [r3, #28]
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2950              		.loc 2 785 3 view .LVU855
 2951 00d4 1021     		movs	r1, #16
 2952 00d6 D961     		str	r1, [r3, #28]
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 2953              		.loc 2 786 3 view .LVU856
 2954 00d8 DA61     		str	r2, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2955              		.loc 2 788 3 view .LVU857
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2956              		.loc 2 788 10 is_stmt 0 view .LVU858
 2957 00da DB69     		ldr	r3, [r3, #28]
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 2958              		.loc 2 788 8 view .LVU859
 2959 00dc 0093     		str	r3, [sp]
 2960              		.loc 2 789 3 is_stmt 1 view .LVU860
 2961 00de 009B     		ldr	r3, [sp]
 2962              	.LVL246:
 2963              		.loc 2 789 3 is_stmt 0 view .LVU861
 2964              	.LBE147:
 2965              	.LBE151:
1168:Src/mc_tasks.c **** }
 2966              		.loc 1 1168 1 view .LVU862
 2967 00e0 0CB0     		add	sp, sp, #48
 2968              	.LCFI41:
 2969              		.cfi_def_cfa_offset 8
 2970              		@ sp needed
 2971 00e2 30BC     		pop	{r4, r5}
 2972              	.LCFI42:
 2973              		.cfi_restore 5
 2974              		.cfi_restore 4
 2975              		.cfi_def_cfa_offset 0
 2976 00e4 7047     		bx	lr
 2977              	.L207:
 2978 00e6 00BF     		.align	2
 2979              	.L206:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 98


 2980 00e8 00010100 		.word	65792
 2981 00ec 00040048 		.word	1207960576
 2982 00f0 02000100 		.word	65538
 2983 00f4 00080048 		.word	1207961600
 2984 00f8 10000100 		.word	65552
 2985              		.cfi_endproc
 2986              	.LFE1116:
 2988              		.global	pOpenLoop
 2989              		.section	.bss.FOCVars,"aw",%nobits
 2990              		.align	2
 2991              		.set	.LANCHOR0,. + 0
 2994              	FOCVars:
 2995 0000 00000000 		.space	38
 2995      00000000 
 2995      00000000 
 2995      00000000 
 2995      00000000 
 2996              		.section	.bss.bMCBootCompleted,"aw",%nobits
 2997              		.set	.LANCHOR2,. + 0
 3000              	bMCBootCompleted:
 3001 0000 00       		.space	1
 3002              		.section	.bss.hBootCapDelayCounterM1,"aw",%nobits
 3003              		.align	1
 3004              		.set	.LANCHOR5,. + 0
 3007              	hBootCapDelayCounterM1:
 3008 0000 0000     		.space	2
 3009              		.section	.bss.hMFTaskCounterM1,"aw",%nobits
 3010              		.align	1
 3011              		.set	.LANCHOR7,. + 0
 3014              	hMFTaskCounterM1:
 3015 0000 0000     		.space	2
 3016              		.section	.bss.hStopPermanencyCounterM1,"aw",%nobits
 3017              		.align	1
 3018              		.set	.LANCHOR6,. + 0
 3021              	hStopPermanencyCounterM1:
 3022 0000 0000     		.space	2
 3023              		.section	.bss.pOpenLoop,"aw",%nobits
 3024              		.align	2
 3025              		.set	.LANCHOR3,. + 0
 3028              	pOpenLoop:
 3029 0000 00000000 		.space	4
 3030              		.section	.bss.pREMNG,"aw",%nobits
 3031              		.align	2
 3032              		.set	.LANCHOR4,. + 0
 3035              	pREMNG:
 3036 0000 00000000 		.space	4
 3037              		.section	.bss.pwmcHandle,"aw",%nobits
 3038              		.align	2
 3039              		.set	.LANCHOR1,. + 0
 3042              	pwmcHandle:
 3043 0000 00000000 		.space	4
 3044              		.weak	STO_SetDirection
 3045              		.text
 3046              	.Letext0:
 3047              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 3048              		.file 4 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 3049              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 99


 3050              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_tim.h"
 3051              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h"
 3052              		.file 8 "Inc/mc_type.h"
 3053              		.file 9 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/pid_regulator.h"
 3054              		.file 10 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h"
 3055              		.file 11 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_torq_ctrl.h"
 3056              		.file 12 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/virtual_speed_sensor.h"
 3057              		.file 13 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/ntc_temperature_sensor.h"
 3058              		.file 14 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_speed_pos_fdbk.h"
 3059              		.file 15 "Inc/pwm_curr_fdbk.h"
 3060              		.file 16 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h"
 3061              		.file 17 "Inc/mc_interface.h"
 3062              		.file 18 "Inc/regular_conversion_manager.h"
 3063              		.file 19 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/bus_voltage_sensor.h"
 3064              		.file 20 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/r_divider_bus_voltage_sensor.h"
 3065              		.file 21 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/pqd_motor_power_measurement.h"
 3066              		.file 22 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/L4xx/Inc/r3_1_l4xx_pwm_curr_fdbk.h"
 3067              		.file 23 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/open_loop.h"
 3068              		.file 24 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/ramp_ext_mngr.h"
 3069              		.file 25 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/circle_limitation.h"
 3070              		.file 26 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h"
 3071              		.file 27 "Inc/mc_config.h"
 3072              		.file 28 "Inc/mc_parameters.h"
 3073              		.file 29 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcptl.h"
 3074              		.file 30 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcp.h"
 3075              		.file 31 "Inc/aspep.h"
 3076              		.file 32 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcpa.h"
 3077              		.file 33 "Inc/mcp_config.h"
 3078              		.file 34 "Inc/mc_api.h"
 3079              		.file 35 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3080              		.file 36 "Inc/mc_math.h"
 3081              		.file 37 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/pwm_common.h"
 3082              		.file 38 "Inc/mc_app_hooks.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 100


DEFINED SYMBOLS
                            *ABS*:00000000 mc_tasks.c
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:20     .text.FOC_Clear:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:27     .text.FOC_Clear:00000000 FOC_Clear
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:137    .text.FOC_Clear:00000084 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:147    .text.MCboot:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:154    .text.MCboot:00000000 MCboot
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:390    .text.MCboot:00000114 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:418    .text.FOC_InitAdditionalMethods:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:425    .text.FOC_InitAdditionalMethods:00000000 FOC_InitAdditionalMethods
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:441    .text.FOC_CalcCurrRef:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:448    .text.FOC_CalcCurrRef:00000000 FOC_CalcCurrRef
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:514    .text.FOC_CalcCurrRef:00000040 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:521    .text.TSK_SetChargeBootCapDelayM1:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:528    .text.TSK_SetChargeBootCapDelayM1:00000000 TSK_SetChargeBootCapDelayM1
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:545    .text.TSK_SetChargeBootCapDelayM1:00000008 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:550    .text.TSK_ChargeBootCapDelayHasElapsedM1:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:557    .text.TSK_ChargeBootCapDelayHasElapsedM1:00000000 TSK_ChargeBootCapDelayHasElapsedM1
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:582    .text.TSK_ChargeBootCapDelayHasElapsedM1:00000010 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:587    .text.TSK_SetStopPermanencyTimeM1:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:594    .text.TSK_SetStopPermanencyTimeM1:00000000 TSK_SetStopPermanencyTimeM1
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:611    .text.TSK_SetStopPermanencyTimeM1:00000008 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:616    .text.TSK_MF_StopProcessing:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:623    .text.TSK_MF_StopProcessing:00000000 TSK_MF_StopProcessing
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:671    .text.TSK_MF_StopProcessing:00000038 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:678    .text.TSK_StopPermanencyTimeHasElapsedM1:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:685    .text.TSK_StopPermanencyTimeHasElapsedM1:00000000 TSK_StopPermanencyTimeHasElapsedM1
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:710    .text.TSK_StopPermanencyTimeHasElapsedM1:00000010 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:715    .text.TSK_MediumFrequencyTaskM1:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:722    .text.TSK_MediumFrequencyTaskM1:00000000 TSK_MediumFrequencyTaskM1
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:814    .text.TSK_MediumFrequencyTaskM1:00000050 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:834    .text.TSK_MediumFrequencyTaskM1:000000a0 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:1311   .text.TSK_MediumFrequencyTaskM1:00000304 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:1329   .text.TSK_MediumFrequencyTaskM1:0000032c $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:1404   .text.TSK_MediumFrequencyTaskM1:00000378 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:1412   .text.MC_Scheduler:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:1419   .text.MC_Scheduler:00000000 MC_Scheduler
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:1558   .text.MC_Scheduler:00000078 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:1569   .text.MC_RunMotorControlTasks:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:1576   .text.MC_RunMotorControlTasks:00000000 MC_RunMotorControlTasks
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:1605   .text.MC_RunMotorControlTasks:00000010 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:1610   .text.TSK_HighFrequencyTask:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:1617   .text.TSK_HighFrequencyTask:00000000 TSK_HighFrequencyTask
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2032   .text.TSK_HighFrequencyTask:0000018c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2051   .text.TSK_SafetyTask_PWMOFF:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2058   .text.TSK_SafetyTask_PWMOFF:00000000 TSK_SafetyTask_PWMOFF
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2244   .text.TSK_SafetyTask_PWMOFF:000000a0 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2256   .text.TSK_SafetyTask:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2263   .text.TSK_SafetyTask:00000000 TSK_SafetyTask
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2310   .text.TSK_SafetyTask:0000001c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2317   .text.GetMCI:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2324   .text.GetMCI:00000000 GetMCI
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2347   .text.GetMCI:0000000c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2352   .text.TSK_HardwareFaultTask:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2359   .text.TSK_HardwareFaultTask:00000000 TSK_HardwareFaultTask
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2393   .text.TSK_HardwareFaultTask:00000018 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2399   .text.startMediumFrequencyTask:00000000 $t
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 101


C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2406   .text.startMediumFrequencyTask:00000000 startMediumFrequencyTask
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2436   .text.StartSafetyTask:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2443   .text.StartSafetyTask:00000000 StartSafetyTask
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2473   .text.UI_HandleStartStopButton_cb:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2480   .text.UI_HandleStartStopButton_cb:00000000 UI_HandleStartStopButton_cb
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2526   .text.mc_lock_pins:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2533   .text.mc_lock_pins:00000000 mc_lock_pins
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2980   .text.mc_lock_pins:000000e8 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3028   .bss.pOpenLoop:00000000 pOpenLoop
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2990   .bss.FOCVars:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:2994   .bss.FOCVars:00000000 FOCVars
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3000   .bss.bMCBootCompleted:00000000 bMCBootCompleted
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3001   .bss.bMCBootCompleted:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3003   .bss.hBootCapDelayCounterM1:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3007   .bss.hBootCapDelayCounterM1:00000000 hBootCapDelayCounterM1
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3010   .bss.hMFTaskCounterM1:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3014   .bss.hMFTaskCounterM1:00000000 hMFTaskCounterM1
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3017   .bss.hStopPermanencyCounterM1:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3021   .bss.hStopPermanencyCounterM1:00000000 hStopPermanencyCounterM1
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3024   .bss.pOpenLoop:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3031   .bss.pREMNG:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3035   .bss.pREMNG:00000000 pREMNG
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3038   .bss.pwmcHandle:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s:3042   .bss.pwmcHandle:00000000 pwmcHandle

UNDEFINED SYMBOLS
MCI_GetControlMode
PID_SetIntegralTerm
STC_Clear
PWMC_SwitchOffPWM
Mci
pPIDIq
pPIDId
pSTC
R3_1_Init
ASPEP_start
startTimers
PID_HandleInit
STO_PLL_Init
STC_Init
VSS_Init
RUC_Init
RCM_RegisterRegConv
RVBS_Init
NTC_Init
OL_Init
REMNG_Init
STC_GetDefaultIqdref
MCI_Init
MCI_SetSpeedMode
STC_GetMecSpeedRefUnitDefault
MCI_ExecSpeedRamp
MC_APP_BootHook
VirtualSpeedSensorM1
BusVoltageSensor_M1
PWM_Handle_M1
aspepOverUartA
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 102


PIDSpeedHandle_M1
STO_PLL_M1
STO_M1
RevUpControlM1
PIDIqHandle_M1
PIDIdHandle_M1
VbusRegConv_M1
pMPM
TempRegConv_M1
OpenLoop_ParamsM1
TempSensor_M1
RampExtMngrHFParamsM1
scaleParams_M1
STC_CalcTorqueReference
R3_1_SwitchOffPWM
PQD_Clear
STO_PLL_CalcAvrgMecSpeedUnit
PQD_CalcElMotorPower
MCI_GetCurrentFaults
MCI_GetOccurredFaults
RUC_Exec
MCI_FaultProcessing
PWMC_CurrentReadingCalibr
R3_1_TurnOnLowSides
STC_SetSpeedSensor
STO_PLL_Clear
PWMC_SwitchOnPWM
VSS_Clear
MCI_ExecBufferedCommands
VSS_CalcAvrgMecSpeedUnit
RUC_FirstAccelerationStageReached
STO_PLL_IsObserverConverged
MCI_GetImposedMotorDirection
STO_SetDirection
VSS_SetStartTransition
SPD_GetElAngle
MCM_Park
REMNG_ExecRamp
RUC_Clear
VSS_TransitionEnded
PID_GetKIDivisor
STC_ForceSpeedReferenceToCurrentSpeed
OL_Calc
MC_APP_PostMediumFrequencyHook_M1
MCP_ReceivedPacket
MCP_Over_UartA
STC_GetSpeedSensor
SPD_GetInstElSpeedDpp
PWMC_GetPhaseCurrents
MCM_Clarke
PI_Controller
Circle_Limitation
MCM_Rev_Park
PWMC_SetPhaseVoltage
VBS_GetAvBusVoltage_d
STO_PLL_CalcElAngle
STO_PLL_CalcAvrgElSpeedDpp
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsj9wHk.s 			page 103


STO_ResetPLL
VSS_CalcElAngle
MCPA_dataLog
OL_VqdConditioning
REMNG_RampCompleted
REMNG_Calc
CircleLimitationM1
GLOBAL_TIMESTAMP
MCPA_UART_A
PWMC_IsFaultOccurred
MCI_GetFaultState
RCM_ExecRegularConv
NTC_CalcAvTemp
RVBS_CalcAvVbus
MCPA_flushDataLog
RCM_ExecUserConv
vTaskDelay
MC_GetSTMStateMotor1
MC_StartMotor1
MC_StopMotor1
